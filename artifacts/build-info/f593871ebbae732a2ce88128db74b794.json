{"id":"f593871ebbae732a2ce88128db74b794","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\ninterface IAuthentication {\n    /**\n     * @dev Returns the action identifier associated with the external function described by `selector`.\n     */\n    function getActionId(bytes4 selector) external view returns (bytes32);\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Interface for the SignatureValidator helper, used to support meta-transactions.\n */\ninterface ISignaturesValidator {\n    /**\n     * @dev Returns the EIP712 domain separator.\n     */\n    function getDomainSeparator() external view returns (bytes32);\n\n    /**\n     * @dev Returns the next nonce used by an address to sign messages.\n     */\n    function getNextNonce(address user) external view returns (uint256);\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Interface for the TemporarilyPausable helper.\n */\ninterface ITemporarilyPausable {\n    /**\n     * @dev Emitted every time the pause state changes by `_setPaused`.\n     */\n    event PausedStateChanged(bool paused);\n\n    /**\n     * @dev Returns the current paused state.\n     */\n    function getPausedState()\n        external\n        view\n        returns (\n            bool paused,\n            uint256 pauseWindowEndTime,\n            uint256 bufferPeriodEndTime\n        );\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"../openzeppelin/IERC20.sol\";\n\n/**\n * @dev Interface for WETH9.\n * See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol\n */\ninterface IWETH is IERC20 {\n    function deposit() external payable;\n\n    function withdraw(uint256 amount) external;\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\n * address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\n * types.\n *\n * This concept is unrelated to a Pool's Asset Managers.\n */\ninterface IAsset {\n    // solhint-disable-previous-line no-empty-blocks\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\ninterface IAuthorizer {\n    /**\n     * @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`.\n     */\n    function canPerform(\n        bytes32 actionId,\n        address account,\n        address where\n    ) external view returns (bool);\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n// Inspired by Aave Protocol's IFlashLoanReceiver.\n\nimport \"../solidity-utils/openzeppelin/IERC20.sol\";\n\ninterface IFlashLoanRecipient {\n    /**\n     * @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n     *\n     * At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n     * call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n     * Vault, or else the entire flash loan will revert.\n     *\n     * `userData` is the same value passed in the `IVault.flashLoan` call.\n     */\n    function receiveFlashLoan(\n        IERC20[] memory tokens,\n        uint256[] memory amounts,\n        uint256[] memory feeAmounts,\n        bytes memory userData\n    ) external;\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"../solidity-utils/openzeppelin/IERC20.sol\";\n\nimport \"./IVault.sol\";\nimport \"./IAuthorizer.sol\";\n\ninterface IProtocolFeesCollector {\n    event SwapFeePercentageChanged(uint256 newSwapFeePercentage);\n    event FlashLoanFeePercentageChanged(uint256 newFlashLoanFeePercentage);\n\n    function withdrawCollectedFees(\n        IERC20[] calldata tokens,\n        uint256[] calldata amounts,\n        address recipient\n    ) external;\n\n    function setSwapFeePercentage(uint256 newSwapFeePercentage) external;\n\n    function setFlashLoanFeePercentage(uint256 newFlashLoanFeePercentage) external;\n\n    function getSwapFeePercentage() external view returns (uint256);\n\n    function getFlashLoanFeePercentage() external view returns (uint256);\n\n    function getCollectedFeeAmounts(IERC20[] memory tokens) external view returns (uint256[] memory feeAmounts);\n\n    function getAuthorizer() external view returns (IAuthorizer);\n\n    function vault() external view returns (IVault);\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma experimental ABIEncoderV2;\n\nimport \"../solidity-utils/openzeppelin/IERC20.sol\";\nimport \"../solidity-utils/helpers/IAuthentication.sol\";\nimport \"../solidity-utils/helpers/ISignaturesValidator.sol\";\nimport \"../solidity-utils/helpers/ITemporarilyPausable.sol\";\nimport \"../solidity-utils/misc/IWETH.sol\";\n\nimport \"./IAsset.sol\";\nimport \"./IAuthorizer.sol\";\nimport \"./IFlashLoanRecipient.sol\";\nimport \"./IProtocolFeesCollector.sol\";\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Full external interface for the Vault core contract - no external or public methods exist in the contract that\n * don't override one of these declarations.\n */\ninterface IVault is ISignaturesValidator, ITemporarilyPausable, IAuthentication {\n    // Generalities about the Vault:\n    //\n    // - Whenever documentation refers to 'tokens', it strictly refers to ERC20-compliant token contracts. Tokens are\n    // transferred out of the Vault by calling the `IERC20.transfer` function, and transferred in by calling\n    // `IERC20.transferFrom`. In these cases, the sender must have previously allowed the Vault to use their tokens by\n    // calling `IERC20.approve`. The only deviation from the ERC20 standard that is supported is functions not returning\n    // a boolean value: in these scenarios, a non-reverting call is assumed to be successful.\n    //\n    // - All non-view functions in the Vault are non-reentrant: calling them while another one is mid-execution (e.g.\n    // while execution control is transferred to a token contract during a swap) will result in a revert. View\n    // functions can be called in a re-reentrant way, but doing so might cause them to return inconsistent results.\n    // Contracts calling view functions in the Vault must make sure the Vault has not already been entered.\n    //\n    // - View functions revert if referring to either unregistered Pools, or unregistered tokens for registered Pools.\n\n    // Authorizer\n    //\n    // Some system actions are permissioned, like setting and collecting protocol fees. This permissioning system exists\n    // outside of the Vault in the Authorizer contract: the Vault simply calls the Authorizer to check if the caller\n    // can perform a given action.\n\n    /**\n     * @dev Returns the Vault's Authorizer.\n     */\n    function getAuthorizer() external view returns (IAuthorizer);\n\n    /**\n     * @dev Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this.\n     *\n     * Emits an `AuthorizerChanged` event.\n     */\n    function setAuthorizer(IAuthorizer newAuthorizer) external;\n\n    /**\n     * @dev Emitted when a new authorizer is set by `setAuthorizer`.\n     */\n    event AuthorizerChanged(IAuthorizer indexed newAuthorizer);\n\n    // Relayers\n    //\n    // Additionally, it is possible for an account to perform certain actions on behalf of another one, using their\n    // Vault ERC20 allowance and Internal Balance. These accounts are said to be 'relayers' for these Vault functions,\n    // and are expected to be smart contracts with sound authentication mechanisms. For an account to be able to wield\n    // this power, two things must occur:\n    //  - The Authorizer must grant the account the permission to be a relayer for the relevant Vault function. This\n    //    means that Balancer governance must approve each individual contract to act as a relayer for the intended\n    //    functions.\n    //  - Each user must approve the relayer to act on their behalf.\n    // This double protection means users cannot be tricked into approving malicious relayers (because they will not\n    // have been allowed by the Authorizer via governance), nor can malicious relayers approved by a compromised\n    // Authorizer or governance drain user funds, since they would also need to be approved by each individual user.\n\n    /**\n     * @dev Returns true if `user` has approved `relayer` to act as a relayer for them.\n     */\n    function hasApprovedRelayer(address user, address relayer) external view returns (bool);\n\n    /**\n     * @dev Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise.\n     *\n     * Emits a `RelayerApprovalChanged` event.\n     */\n    function setRelayerApproval(\n        address sender,\n        address relayer,\n        bool approved\n    ) external;\n\n    /**\n     * @dev Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\n     */\n    event RelayerApprovalChanged(address indexed relayer, address indexed sender, bool approved);\n\n    // Internal Balance\n    //\n    // Users can deposit tokens into the Vault, where they are allocated to their Internal Balance, and later\n    // transferred or withdrawn. It can also be used as a source of tokens when joining Pools, as a destination\n    // when exiting them, and as either when performing swaps. This usage of Internal Balance results in greatly reduced\n    // gas costs when compared to relying on plain ERC20 transfers, leading to large savings for frequent users.\n    //\n    // Internal Balance management features batching, which means a single contract call can be used to perform multiple\n    // operations of different kinds, with different senders and recipients, at once.\n\n    /**\n     * @dev Returns `user`'s Internal Balance for a set of tokens.\n     */\n    function getInternalBalance(address user, IERC20[] memory tokens) external view returns (uint256[] memory);\n\n    /**\n     * @dev Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer)\n     * and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as\n     * it lets integrators reuse a user's Vault allowance.\n     *\n     * For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\n     */\n    function manageUserBalance(UserBalanceOp[] memory ops) external payable;\n\n    /**\n     * @dev Data for `manageUserBalance` operations, which include the possibility for ETH to be sent and received\n     without manual WETH wrapping or unwrapping.\n     */\n    struct UserBalanceOp {\n        UserBalanceOpKind kind;\n        IAsset asset;\n        uint256 amount;\n        address sender;\n        address payable recipient;\n    }\n\n    // There are four possible operations in `manageUserBalance`:\n    //\n    // - DEPOSIT_INTERNAL\n    // Increases the Internal Balance of the `recipient` account by transferring tokens from the corresponding\n    // `sender`. The sender must have allowed the Vault to use their tokens via `IERC20.approve()`.\n    //\n    // ETH can be used by passing the ETH sentinel value as the asset and forwarding ETH in the call: it will be wrapped\n    // and deposited as WETH. Any ETH amount remaining will be sent back to the caller (not the sender, which is\n    // relevant for relayers).\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - WITHDRAW_INTERNAL\n    // Decreases the Internal Balance of the `sender` account by transferring tokens to the `recipient`.\n    //\n    // ETH can be used by passing the ETH sentinel value as the asset. This will deduct WETH instead, unwrap it and send\n    // it to the recipient as ETH.\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - TRANSFER_INTERNAL\n    // Transfers tokens from the Internal Balance of the `sender` account to the Internal Balance of `recipient`.\n    //\n    // Reverts if the ETH sentinel value is passed.\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - TRANSFER_EXTERNAL\n    // Transfers tokens from `sender` to `recipient`, using the Vault's ERC20 allowance. This is typically used by\n    // relayers, as it lets them reuse a user's Vault allowance.\n    //\n    // Reverts if the ETH sentinel value is passed.\n    //\n    // Emits an `ExternalBalanceTransfer` event.\n\n    enum UserBalanceOpKind { DEPOSIT_INTERNAL, WITHDRAW_INTERNAL, TRANSFER_INTERNAL, TRANSFER_EXTERNAL }\n\n    /**\n     * @dev Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through\n     * interacting with Pools using Internal Balance.\n     *\n     * Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH\n     * address.\n     */\n    event InternalBalanceChanged(address indexed user, IERC20 indexed token, int256 delta);\n\n    /**\n     * @dev Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\n     */\n    event ExternalBalanceTransfer(IERC20 indexed token, address indexed sender, address recipient, uint256 amount);\n\n    // Pools\n    //\n    // There are three specialization settings for Pools, which allow for cheaper swaps at the cost of reduced\n    // functionality:\n    //\n    //  - General: no specialization, suited for all Pools. IGeneralPool is used for swap request callbacks, passing the\n    // balance of all tokens in the Pool. These Pools have the largest swap costs (because of the extra storage reads),\n    // which increase with the number of registered tokens.\n    //\n    //  - Minimal Swap Info: IMinimalSwapInfoPool is used instead of IGeneralPool, which saves gas by only passing the\n    // balance of the two tokens involved in the swap. This is suitable for some pricing algorithms, like the weighted\n    // constant product one popularized by Balancer V1. Swap costs are smaller compared to general Pools, and are\n    // independent of the number of registered tokens.\n    //\n    //  - Two Token: only allows two tokens to be registered. This achieves the lowest possible swap gas cost. Like\n    // minimal swap info Pools, these are called via IMinimalSwapInfoPool.\n\n    enum PoolSpecialization { GENERAL, MINIMAL_SWAP_INFO, TWO_TOKEN }\n\n    /**\n     * @dev Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which\n     * is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be\n     * changed.\n     *\n     * The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`,\n     * depending on the chosen specialization setting. This contract is known as the Pool's contract.\n     *\n     * Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words,\n     * multiple Pools may share the same contract.\n     *\n     * Emits a `PoolRegistered` event.\n     */\n    function registerPool(PoolSpecialization specialization) external returns (bytes32);\n\n    /**\n     * @dev Emitted when a Pool is registered by calling `registerPool`.\n     */\n    event PoolRegistered(bytes32 indexed poolId, address indexed poolAddress, PoolSpecialization specialization);\n\n    /**\n     * @dev Returns a Pool's contract address and specialization setting.\n     */\n    function getPool(bytes32 poolId) external view returns (address, PoolSpecialization);\n\n    /**\n     * @dev Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n     *\n     * Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens,\n     * exit by receiving registered tokens, and can only swap registered tokens.\n     *\n     * Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length\n     * of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in\n     * ascending order.\n     *\n     * The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset\n     * Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`,\n     * depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore\n     * expected to be highly secured smart contracts with sound design principles, and the decision to register an\n     * Asset Manager should not be made lightly.\n     *\n     * Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset\n     * Manager is set, it cannot be changed except by deregistering the associated token and registering again with a\n     * different Asset Manager.\n     *\n     * Emits a `TokensRegistered` event.\n     */\n    function registerTokens(\n        bytes32 poolId,\n        IERC20[] memory tokens,\n        address[] memory assetManagers\n    ) external;\n\n    /**\n     * @dev Emitted when a Pool registers tokens by calling `registerTokens`.\n     */\n    event TokensRegistered(bytes32 indexed poolId, IERC20[] tokens, address[] assetManagers);\n\n    /**\n     * @dev Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n     *\n     * Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total\n     * balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens\n     * must be deregistered in the same `deregisterTokens` call.\n     *\n     * A deregistered token can be re-registered later on, possibly with a different Asset Manager.\n     *\n     * Emits a `TokensDeregistered` event.\n     */\n    function deregisterTokens(bytes32 poolId, IERC20[] memory tokens) external;\n\n    /**\n     * @dev Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\n     */\n    event TokensDeregistered(bytes32 indexed poolId, IERC20[] tokens);\n\n    /**\n     * @dev Returns detailed information for a Pool's registered token.\n     *\n     * `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens\n     * withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token`\n     * equals the sum of `cash` and `managed`.\n     *\n     * Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`,\n     * `managed` or `total` balance to be greater than 2^112 - 1.\n     *\n     * `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a\n     * join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for\n     * example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a\n     * change for this purpose, and will update `lastChangeBlock`.\n     *\n     * `assetManager` is the Pool's token Asset Manager.\n     */\n    function getPoolTokenInfo(bytes32 poolId, IERC20 token)\n        external\n        view\n        returns (\n            uint256 cash,\n            uint256 managed,\n            uint256 lastChangeBlock,\n            address assetManager\n        );\n\n    /**\n     * @dev Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of\n     * the tokens' `balances` changed.\n     *\n     * The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all\n     * Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order.\n     *\n     * If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same\n     * order as passed to `registerTokens`.\n     *\n     * Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are\n     * the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo`\n     * instead.\n     */\n    function getPoolTokens(bytes32 poolId)\n        external\n        view\n        returns (\n            IERC20[] memory tokens,\n            uint256[] memory balances,\n            uint256 lastChangeBlock\n        );\n\n    /**\n     * @dev Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will\n     * trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized\n     * Pool shares.\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount\n     * to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces\n     * these maximums.\n     *\n     * If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable\n     * this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the\n     * WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent\n     * back to the caller (not the sender, which is important for relayers).\n     *\n     * `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n     * interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be\n     * sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final\n     * `assets` array might not be sorted. Pools with no registered tokens cannot be joined.\n     *\n     * If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only\n     * be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be\n     * withdrawn from Internal Balance: attempting to do so will trigger a revert.\n     *\n     * This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement\n     * their own custom logic. This typically requires additional information from the user (such as the expected number\n     * of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed\n     * directly to the Pool's contract, as is `recipient`.\n     *\n     * Emits a `PoolBalanceChanged` event.\n     */\n    function joinPool(\n        bytes32 poolId,\n        address sender,\n        address recipient,\n        JoinPoolRequest memory request\n    ) external payable;\n\n    struct JoinPoolRequest {\n        IAsset[] assets;\n        uint256[] maxAmountsIn;\n        bytes userData;\n        bool fromInternalBalance;\n    }\n\n    /**\n     * @dev Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will\n     * trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized\n     * Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see\n     * `getPoolTokenInfo`).\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum\n     * token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault:\n     * it just enforces these minimums.\n     *\n     * If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To\n     * enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead\n     * of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit.\n     *\n     * `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n     * interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must\n     * be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the\n     * final `assets` array might not be sorted. Pools with no registered tokens cannot be exited.\n     *\n     * If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise,\n     * an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to\n     * do so will trigger a revert.\n     *\n     * `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the\n     * `tokens` array. This array must match the Pool's registered tokens.\n     *\n     * This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement\n     * their own custom logic. This typically requires additional information from the user (such as the expected number\n     * of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and\n     * passed directly to the Pool's contract.\n     *\n     * Emits a `PoolBalanceChanged` event.\n     */\n    function exitPool(\n        bytes32 poolId,\n        address sender,\n        address payable recipient,\n        ExitPoolRequest memory request\n    ) external;\n\n    struct ExitPoolRequest {\n        IAsset[] assets;\n        uint256[] minAmountsOut;\n        bytes userData;\n        bool toInternalBalance;\n    }\n\n    /**\n     * @dev Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\n     */\n    event PoolBalanceChanged(\n        bytes32 indexed poolId,\n        address indexed liquidityProvider,\n        IERC20[] tokens,\n        int256[] deltas,\n        uint256[] protocolFeeAmounts\n    );\n\n    enum PoolBalanceChangeKind { JOIN, EXIT }\n\n    // Swaps\n    //\n    // Users can swap tokens with Pools by calling the `swap` and `batchSwap` functions. To do this,\n    // they need not trust Pool contracts in any way: all security checks are made by the Vault. They must however be\n    // aware of the Pools' pricing algorithms in order to estimate the prices Pools will quote.\n    //\n    // The `swap` function executes a single swap, while `batchSwap` can perform multiple swaps in sequence.\n    // In each individual swap, tokens of one kind are sent from the sender to the Pool (this is the 'token in'),\n    // and tokens of another kind are sent from the Pool to the recipient in exchange (this is the 'token out').\n    // More complex swaps, such as one token in to multiple tokens out can be achieved by batching together\n    // individual swaps.\n    //\n    // There are two swap kinds:\n    //  - 'given in' swaps, where the amount of tokens in (sent to the Pool) is known, and the Pool determines (via the\n    // `onSwap` hook) the amount of tokens out (to send to the recipient).\n    //  - 'given out' swaps, where the amount of tokens out (received from the Pool) is known, and the Pool determines\n    // (via the `onSwap` hook) the amount of tokens in (to receive from the sender).\n    //\n    // Additionally, it is possible to chain swaps using a placeholder input amount, which the Vault replaces with\n    // the calculated output of the previous swap. If the previous swap was 'given in', this will be the calculated\n    // tokenOut amount. If the previous swap was 'given out', it will use the calculated tokenIn amount. These extended\n    // swaps are known as 'multihop' swaps, since they 'hop' through a number of intermediate tokens before arriving at\n    // the final intended token.\n    //\n    // In all cases, tokens are only transferred in and out of the Vault (or withdrawn from and deposited into Internal\n    // Balance) after all individual swaps have been completed, and the net token balance change computed. This makes\n    // certain swap patterns, such as multihops, or swaps that interact with the same token pair in multiple Pools, cost\n    // much less gas than they would otherwise.\n    //\n    // It also means that under certain conditions it is possible to perform arbitrage by swapping with multiple\n    // Pools in a way that results in net token movement out of the Vault (profit), with no tokens being sent in (only\n    // updating the Pool's internal accounting).\n    //\n    // To protect users from front-running or the market changing rapidly, they supply a list of 'limits' for each token\n    // involved in the swap, where either the maximum number of tokens to send (by passing a positive value) or the\n    // minimum amount of tokens to receive (by passing a negative value) is specified.\n    //\n    // Additionally, a 'deadline' timestamp can also be provided, forcing the swap to fail if it occurs after\n    // this point in time (e.g. if the transaction failed to be included in a block promptly).\n    //\n    // If interacting with Pools that hold WETH, it is possible to both send and receive ETH directly: the Vault will do\n    // the wrapping and unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be\n    // passed in the `assets` array instead of the WETH address. Note that it is possible to combine ETH and WETH in the\n    // same swap. Any excess ETH will be sent back to the caller (not the sender, which is relevant for relayers).\n    //\n    // Finally, Internal Balance can be used when either sending or receiving tokens.\n\n    enum SwapKind { GIVEN_IN, GIVEN_OUT }\n\n    /**\n     * @dev Performs a swap with a single Pool.\n     *\n     * If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens\n     * taken from the Pool, which must be greater than or equal to `limit`.\n     *\n     * If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens\n     * sent to the Pool, which must be less than or equal to `limit`.\n     *\n     * Internal Balance usage and the recipient are determined by the `funds` struct.\n     *\n     * Emits a `Swap` event.\n     */\n    function swap(\n        SingleSwap memory singleSwap,\n        FundManagement memory funds,\n        uint256 limit,\n        uint256 deadline\n    ) external payable returns (uint256);\n\n    /**\n     * @dev Data for a single swap executed by `swap`. `amount` is either `amountIn` or `amountOut` depending on\n     * the `kind` value.\n     *\n     * `assetIn` and `assetOut` are either token addresses, or the IAsset sentinel value for ETH (the zero address).\n     * Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault.\n     *\n     * The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\n     * used to extend swap behavior.\n     */\n    struct SingleSwap {\n        bytes32 poolId;\n        SwapKind kind;\n        IAsset assetIn;\n        IAsset assetOut;\n        uint256 amount;\n        bytes userData;\n    }\n\n    /**\n     * @dev Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either\n     * the amount of tokens sent to or received from the Pool, depending on the `kind` value.\n     *\n     * Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\n     * Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\n     * the same index in the `assets` array.\n     *\n     * Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a\n     * Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or\n     * `amountOut` depending on the swap kind.\n     *\n     * Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out\n     * of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal\n     * the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`.\n     *\n     * The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses,\n     * or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and\n     * out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to\n     * or unwrapped from WETH by the Vault.\n     *\n     * Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies\n     * the minimum or maximum amount of each token the vault is allowed to transfer.\n     *\n     * `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the\n     * equivalent `swap` call.\n     *\n     * Emits `Swap` events.\n     */\n    function batchSwap(\n        SwapKind kind,\n        BatchSwapStep[] memory swaps,\n        IAsset[] memory assets,\n        FundManagement memory funds,\n        int256[] memory limits,\n        uint256 deadline\n    ) external payable returns (int256[] memory);\n\n    /**\n     * @dev Data for each individual swap executed by `batchSwap`. The asset in and out fields are indexes into the\n     * `assets` array passed to that function, and ETH assets are converted to WETH.\n     *\n     * If `amount` is zero, the multihop mechanism is used to determine the actual amount based on the amount in/out\n     * from the previous swap, depending on the swap kind.\n     *\n     * The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\n     * used to extend swap behavior.\n     */\n    struct BatchSwapStep {\n        bytes32 poolId;\n        uint256 assetInIndex;\n        uint256 assetOutIndex;\n        uint256 amount;\n        bytes userData;\n    }\n\n    /**\n     * @dev Emitted for each individual swap performed by `swap` or `batchSwap`.\n     */\n    event Swap(\n        bytes32 indexed poolId,\n        IERC20 indexed tokenIn,\n        IERC20 indexed tokenOut,\n        uint256 amountIn,\n        uint256 amountOut\n    );\n\n    /**\n     * @dev All tokens in a swap are either sent from the `sender` account to the Vault, or from the Vault to the\n     * `recipient` account.\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * If `fromInternalBalance` is true, the `sender`'s Internal Balance will be preferred, performing an ERC20\n     * transfer for the difference between the requested amount and the User's Internal Balance (if any). The `sender`\n     * must have allowed the Vault to use their tokens via `IERC20.approve()`. This matches the behavior of\n     * `joinPool`.\n     *\n     * If `toInternalBalance` is true, tokens will be deposited to `recipient`'s internal balance instead of\n     * transferred. This matches the behavior of `exitPool`.\n     *\n     * Note that ETH cannot be deposited to or withdrawn from Internal Balance: attempting to do so will trigger a\n     * revert.\n     */\n    struct FundManagement {\n        address sender;\n        bool fromInternalBalance;\n        address payable recipient;\n        bool toInternalBalance;\n    }\n\n    /**\n     * @dev Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\n     * simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\n     *\n     * Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\n     * the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\n     * receives are the same that an equivalent `batchSwap` call would receive.\n     *\n     * Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct.\n     * This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens,\n     * approve them for the Vault, or even know a user's address.\n     *\n     * Note that this function is not 'view' (due to implementation details): the client code must explicitly execute\n     * eth_call instead of eth_sendTransaction.\n     */\n    function queryBatchSwap(\n        SwapKind kind,\n        BatchSwapStep[] memory swaps,\n        IAsset[] memory assets,\n        FundManagement memory funds\n    ) external returns (int256[] memory assetDeltas);\n\n    // Flash Loans\n\n    /**\n     * @dev Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it,\n     * and then reverting unless the tokens plus a proportional protocol fee have been returned.\n     *\n     * The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount\n     * for each token contract. `tokens` must be sorted in ascending order.\n     *\n     * The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the\n     * `receiveFlashLoan` call.\n     *\n     * Emits `FlashLoan` events.\n     */\n    function flashLoan(\n        IFlashLoanRecipient recipient,\n        IERC20[] memory tokens,\n        uint256[] memory amounts,\n        bytes memory userData\n    ) external;\n\n    /**\n     * @dev Emitted for each individual flash loan performed by `flashLoan`.\n     */\n    event FlashLoan(IFlashLoanRecipient indexed recipient, IERC20 indexed token, uint256 amount, uint256 feeAmount);\n\n    // Asset Management\n    //\n    // Each token registered for a Pool can be assigned an Asset Manager, which is able to freely withdraw the Pool's\n    // tokens from the Vault, deposit them, or assign arbitrary values to its `managed` balance (see\n    // `getPoolTokenInfo`). This makes them extremely powerful and dangerous. Even if an Asset Manager only directly\n    // controls one of the tokens in a Pool, a malicious manager could set that token's balance to manipulate the\n    // prices of the other tokens, and then drain the Pool with swaps. The risk of using Asset Managers is therefore\n    // not constrained to the tokens they are managing, but extends to the entire Pool's holdings.\n    //\n    // However, a properly designed Asset Manager smart contract can be safely used for the Pool's benefit,\n    // for example by lending unused tokens out for interest, or using them to participate in voting protocols.\n    //\n    // This concept is unrelated to the IAsset interface.\n\n    /**\n     * @dev Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates.\n     *\n     * Pool Balance management features batching, which means a single contract call can be used to perform multiple\n     * operations of different kinds, with different Pools and tokens, at once.\n     *\n     * For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\n     */\n    function managePoolBalance(PoolBalanceOp[] memory ops) external;\n\n    struct PoolBalanceOp {\n        PoolBalanceOpKind kind;\n        bytes32 poolId;\n        IERC20 token;\n        uint256 amount;\n    }\n\n    /**\n     * Withdrawals decrease the Pool's cash, but increase its managed balance, leaving the total balance unchanged.\n     *\n     * Deposits increase the Pool's cash, but decrease its managed balance, leaving the total balance unchanged.\n     *\n     * Updates don't affect the Pool's cash balance, but because the managed balance changes, it does alter the total.\n     * The external amount can be either increased or decreased by this call (i.e., reporting a gain or a loss).\n     */\n    enum PoolBalanceOpKind { WITHDRAW, DEPOSIT, UPDATE }\n\n    /**\n     * @dev Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\n     */\n    event PoolBalanceManaged(\n        bytes32 indexed poolId,\n        address indexed assetManager,\n        IERC20 indexed token,\n        int256 cashDelta,\n        int256 managedDelta\n    );\n\n    // Protocol Fees\n    //\n    // Some operations cause the Vault to collect tokens in the form of protocol fees, which can then be withdrawn by\n    // permissioned accounts.\n    //\n    // There are two kinds of protocol fees:\n    //\n    //  - flash loan fees: charged on all flash loans, as a percentage of the amounts lent.\n    //\n    //  - swap fees: a percentage of the fees charged by Pools when performing swaps. For a number of reasons, including\n    // swap gas costs and interface simplicity, protocol swap fees are not charged on each individual swap. Rather,\n    // Pools are expected to keep track of how much they have charged in swap fees, and pay any outstanding debts to the\n    // Vault when they are joined or exited. This prevents users from joining a Pool with unpaid debt, as well as\n    // exiting a Pool in debt without first paying their share.\n\n    /**\n     * @dev Returns the current protocol fee module.\n     */\n    function getProtocolFeesCollector() external view returns (IProtocolFeesCollector);\n\n    /**\n     * @dev Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an\n     * error in some part of the system.\n     *\n     * The Vault can only be paused during an initial time period, after which pausing is forever disabled.\n     *\n     * While the contract is paused, the following features are disabled:\n     * - depositing and transferring internal balance\n     * - transferring external balance (using the Vault's allowance)\n     * - swaps\n     * - joining Pools\n     * - Asset Manager interactions\n     *\n     * Internal Balance can still be withdrawn, and Pools exited.\n     */\n    function setPaused(bool paused) external;\n\n    /**\n     * @dev Returns the Vault's WETH instance.\n     */\n    function WETH() external view returns (IWETH);\n    // solhint-disable-previous-line func-name-mixedcase\n}\n"},"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol":{"content":"pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"},"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol":{"content":"pragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"},"contracts/Arbitrage.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.18;\n\nimport \"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\";\nimport \"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\";\nimport \"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\n\ncontract Arbitrage is IFlashLoanRecipient {\n    IVault private constant vault =\n        IVault(0xBA12222222228d8Ba445958a75a0704d566BF2C8);\n\n    IUniswapV2Router02 public immutable sRouter;\n    IUniswapV2Router02 public immutable uRouter;\n    address public owner;\n\n    event TradeExecuted(\n        address sender,\n        address token,\n        uint256 amount,\n        bytes data\n    );\n    event LoanedReturned(address sender, address token, uint256 amount);\n    event SwappedOnUniswap(\n        uint256 amountIn,\n        uint256 amountOut,\n        address path0,\n        address path1\n    );\n    event SwappedOnSushiswap(\n        uint256 amountIn,\n        uint256 amountOut,\n        address path0,\n        address path1\n    );\n\n    constructor(address _sRouter, address _uRouter) {\n        sRouter = IUniswapV2Router02(_sRouter); // Sushiswap\n        uRouter = IUniswapV2Router02(_uRouter); // Uniswap\n        owner = msg.sender;\n    }\n\n    function executeTrade(\n        bool _startOnUniswap,\n        address _token0,\n        address _token1,\n        uint256 _flashAmount\n    ) external {\n        bytes memory data = abi.encode(_startOnUniswap, _token0, _token1);\n\n        // Token to flash loan, by default we are flash loaning 1 token.\n        IERC20[] memory tokens = new IERC20[](1);\n        tokens[0] = IERC20(_token0);\n\n        // Flash loan amount.\n        uint256[] memory amounts = new uint256[](1);\n        amounts[0] = _flashAmount;\n\n        vault.flashLoan(this, tokens, amounts, data);\n\n        emit TradeExecuted(msg.sender, _token0, _flashAmount, data);\n    }\n\n    function receiveFlashLoan(\n        IERC20[] memory tokens,\n        uint256[] memory amounts,\n        uint256[] memory feeAmounts,\n        bytes memory userData\n    ) external override {\n        require(msg.sender == address(vault));\n\n        uint256 flashAmount = amounts[0];\n\n        (bool startOnUniswap, address token0, address token1) = abi.decode(\n            userData,\n            (bool, address, address)\n        );\n\n        // Use the money here!\n        address[] memory path = new address[](2);\n\n        path[0] = token0;\n        path[1] = token1;\n\n        if (startOnUniswap) {\n            _swapOnUniswap(path, flashAmount, 0);\n\n            path[0] = token1;\n            path[1] = token0;\n\n            _swapOnSushiswap(\n                path,\n                IERC20(token1).balanceOf(address(this)),\n                flashAmount\n            );\n        } else {\n            _swapOnSushiswap(path, flashAmount, 0);\n\n            path[0] = token1;\n            path[1] = token0;\n\n            _swapOnUniswap(\n                path,\n                IERC20(token1).balanceOf(address(this)),\n                flashAmount\n            );\n        }\n\n        IERC20(token0).transfer(address(vault), flashAmount);\n\n        IERC20(token0).transfer(owner, IERC20(token0).balanceOf(address(this)));\n\n        emit LoanedReturned(msg.sender, token0, flashAmount);\n    }\n\n    // -- INTERNAL FUNCTIONS -- //\n\n    function _swapOnUniswap(\n        address[] memory _path,\n        uint256 _amountIn,\n        uint256 _amountOut\n    ) internal {\n        require(\n            IERC20(_path[0]).approve(address(uRouter), _amountIn),\n            \"Uniswap approval failed.\"\n        );\n\n        uRouter.swapExactTokensForTokens(\n            _amountIn,\n            _amountOut,\n            _path,\n            address(this),\n            (block.timestamp + 1200)\n        );\n\n        emit SwappedOnUniswap(_amountIn, _amountOut, _path[0], _path[1]);\n    }\n\n    function _swapOnSushiswap(\n        address[] memory _path,\n        uint256 _amountIn,\n        uint256 _amountOut\n    ) internal {\n        require(\n            IERC20(_path[0]).approve(address(sRouter), _amountIn),\n            \"Sushiswap approval failed.\"\n        );\n\n        sRouter.swapExactTokensForTokens(\n            _amountIn,\n            _amountOut,\n            _path,\n            address(this),\n            (block.timestamp + 1200)\n        );\n\n        emit SwappedOnSushiswap(_amountIn, _amountOut, _path[0], _path[1]);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/Arbitrage.sol:64:9:\n   |\n64 |         IERC20[] memory tokens,\n   |         ^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":1926,"file":"contracts/Arbitrage.sol","start":1904},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/Arbitrage.sol:66:9:\n   |\n66 |         uint256[] memory feeAmounts,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":1997,"file":"contracts/Arbitrage.sol","start":1970},"type":"Warning"}],"sources":{"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol","exportedSymbols":{"IAuthentication":[10]},"id":11,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IAuthentication","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":10,"linearizedBaseContracts":[10],"name":"IAuthentication","nameLocation":"731:15:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"753:116:0","text":" @dev Returns the action identifier associated with the external function described by `selector`."},"functionSelector":"851c1bb3","id":9,"implemented":false,"kind":"function","modifiers":[],"name":"getActionId","nameLocation":"883:11:0","nodeType":"FunctionDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"selector","nameLocation":"902:8:0","nodeType":"VariableDeclaration","scope":9,"src":"895:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3,"name":"bytes4","nodeType":"ElementaryTypeName","src":"895:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"894:17:0"},"returnParameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9,"src":"935:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"934:9:0"},"scope":10,"src":"874:70:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":11,"src":"721:225:0","usedErrors":[]}],"src":"688:259:0"},"id":0},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol","exportedSymbols":{"ISignaturesValidator":[28]},"id":29,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":12,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:1"},{"abstract":false,"baseContracts":[],"canonicalName":"ISignaturesValidator","contractDependencies":[],"contractKind":"interface","documentation":{"id":13,"nodeType":"StructuredDocumentation","src":"721:95:1","text":" @dev Interface for the SignatureValidator helper, used to support meta-transactions."},"fullyImplemented":false,"id":28,"linearizedBaseContracts":[28],"name":"ISignaturesValidator","nameLocation":"827:20:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"854:60:1","text":" @dev Returns the EIP712 domain separator."},"functionSelector":"ed24911d","id":19,"implemented":false,"kind":"function","modifiers":[],"name":"getDomainSeparator","nameLocation":"928:18:1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"946:2:1"},"returnParameters":{"id":18,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19,"src":"972:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16,"name":"bytes32","nodeType":"ElementaryTypeName","src":"972:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"971:9:1"},"scope":28,"src":"919:62:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":20,"nodeType":"StructuredDocumentation","src":"987:83:1","text":" @dev Returns the next nonce used by an address to sign messages."},"functionSelector":"90193b7c","id":27,"implemented":false,"kind":"function","modifiers":[],"name":"getNextNonce","nameLocation":"1084:12:1","nodeType":"FunctionDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":22,"mutability":"mutable","name":"user","nameLocation":"1105:4:1","nodeType":"VariableDeclaration","scope":27,"src":"1097:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1097:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1096:14:1"},"returnParameters":{"id":26,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":27,"src":"1134:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"1134:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1133:9:1"},"scope":28,"src":"1075:68:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":29,"src":"817:328:1","usedErrors":[]}],"src":"688:458:1"},"id":1},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol","exportedSymbols":{"ITemporarilyPausable":[47]},"id":48,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":30,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:2"},{"abstract":false,"baseContracts":[],"canonicalName":"ITemporarilyPausable","contractDependencies":[],"contractKind":"interface","documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"721:61:2","text":" @dev Interface for the TemporarilyPausable helper."},"fullyImplemented":false,"id":47,"linearizedBaseContracts":[47],"name":"ITemporarilyPausable","nameLocation":"793:20:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"820:83:2","text":" @dev Emitted every time the pause state changes by `_setPaused`."},"eventSelector":"9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be64","id":36,"name":"PausedStateChanged","nameLocation":"914:18:2","nodeType":"EventDefinition","parameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"indexed":false,"mutability":"mutable","name":"paused","nameLocation":"938:6:2","nodeType":"VariableDeclaration","scope":36,"src":"933:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33,"name":"bool","nodeType":"ElementaryTypeName","src":"933:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"932:13:2"},"src":"908:38:2"},{"documentation":{"id":37,"nodeType":"StructuredDocumentation","src":"952:57:2","text":" @dev Returns the current paused state."},"functionSelector":"1c0de051","id":46,"implemented":false,"kind":"function","modifiers":[],"name":"getPausedState","nameLocation":"1023:14:2","nodeType":"FunctionDefinition","parameters":{"id":38,"nodeType":"ParameterList","parameters":[],"src":"1037:2:2"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"paused","nameLocation":"1105:6:2","nodeType":"VariableDeclaration","scope":46,"src":"1100:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":39,"name":"bool","nodeType":"ElementaryTypeName","src":"1100:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"pauseWindowEndTime","nameLocation":"1133:18:2","nodeType":"VariableDeclaration","scope":46,"src":"1125:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41,"name":"uint256","nodeType":"ElementaryTypeName","src":"1125:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"bufferPeriodEndTime","nameLocation":"1173:19:2","nodeType":"VariableDeclaration","scope":46,"src":"1165:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43,"name":"uint256","nodeType":"ElementaryTypeName","src":"1165:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1086:116:2"},"scope":47,"src":"1014:189:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":48,"src":"783:422:2","usedErrors":[]}],"src":"688:518:2"},"id":2},"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol","exportedSymbols":{"IERC20":[140],"IWETH":[62]},"id":63,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":49,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:3"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../openzeppelin/IERC20.sol","id":50,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":63,"sourceUnit":141,"src":"721:36:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":52,"name":"IERC20","nameLocations":["929:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"929:6:3"},"id":53,"nodeType":"InheritanceSpecifier","src":"929:6:3"}],"canonicalName":"IWETH","contractDependencies":[],"contractKind":"interface","documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"759:150:3","text":" @dev Interface for WETH9.\n See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol"},"fullyImplemented":false,"id":62,"linearizedBaseContracts":[62,140],"name":"IWETH","nameLocation":"920:5:3","nodeType":"ContractDefinition","nodes":[{"functionSelector":"d0e30db0","id":56,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"951:7:3","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[],"src":"958:2:3"},"returnParameters":{"id":55,"nodeType":"ParameterList","parameters":[],"src":"977:0:3"},"scope":62,"src":"942:36:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":61,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"993:8:3","nodeType":"FunctionDefinition","parameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"mutability":"mutable","name":"amount","nameLocation":"1010:6:3","nodeType":"VariableDeclaration","scope":61,"src":"1002:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1001:16:3"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1026:0:3"},"scope":62,"src":"984:43:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":63,"src":"910:119:3","usedErrors":[]}],"src":"688:342:3"},"id":3},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","exportedSymbols":{"IERC20":[140]},"id":141,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":64,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"33:31:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"66:70:4","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":140,"linearizedBaseContracts":[140],"name":"IERC20","nameLocation":"147:6:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":66,"nodeType":"StructuredDocumentation","src":"160:66:4","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":71,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"240:11:4","nodeType":"FunctionDefinition","parameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"251:2:4"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":71,"src":"277:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":68,"name":"uint256","nodeType":"ElementaryTypeName","src":"277:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"276:9:4"},"scope":140,"src":"231:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"292:72:4","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":79,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"378:9:4","nodeType":"FunctionDefinition","parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"account","nameLocation":"396:7:4","nodeType":"VariableDeclaration","scope":79,"src":"388:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"388:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"387:17:4"},"returnParameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"428:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"428:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"427:9:4"},"scope":140,"src":"369:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"443:209:4","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":89,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"666:8:4","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"recipient","nameLocation":"683:9:4","nodeType":"VariableDeclaration","scope":89,"src":"675:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":81,"name":"address","nodeType":"ElementaryTypeName","src":"675:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":84,"mutability":"mutable","name":"amount","nameLocation":"702:6:4","nodeType":"VariableDeclaration","scope":89,"src":"694:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83,"name":"uint256","nodeType":"ElementaryTypeName","src":"694:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"674:35:4"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":89,"src":"728:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":86,"name":"bool","nodeType":"ElementaryTypeName","src":"728:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"727:6:4"},"scope":140,"src":"657:77:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"740:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":99,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1018:9:4","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"owner","nameLocation":"1036:5:4","nodeType":"VariableDeclaration","scope":99,"src":"1028:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"1028:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":94,"mutability":"mutable","name":"spender","nameLocation":"1051:7:4","nodeType":"VariableDeclaration","scope":99,"src":"1043:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1027:32:4"},"returnParameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":99,"src":"1083:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1082:9:4"},"scope":140,"src":"1009:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":100,"nodeType":"StructuredDocumentation","src":"1098:642:4","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":109,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1754:7:4","nodeType":"FunctionDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"spender","nameLocation":"1770:7:4","nodeType":"VariableDeclaration","scope":109,"src":"1762:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"1762:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":104,"mutability":"mutable","name":"amount","nameLocation":"1787:6:4","nodeType":"VariableDeclaration","scope":109,"src":"1779:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1761:33:4"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":109,"src":"1813:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":106,"name":"bool","nodeType":"ElementaryTypeName","src":"1813:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1812:6:4"},"scope":140,"src":"1745:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":110,"nodeType":"StructuredDocumentation","src":"1825:296:4","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":121,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2135:12:4","nodeType":"FunctionDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"sender","nameLocation":"2165:6:4","nodeType":"VariableDeclaration","scope":121,"src":"2157:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"2157:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":114,"mutability":"mutable","name":"recipient","nameLocation":"2189:9:4","nodeType":"VariableDeclaration","scope":121,"src":"2181:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"amount","nameLocation":"2216:6:4","nodeType":"VariableDeclaration","scope":121,"src":"2208:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":115,"name":"uint256","nodeType":"ElementaryTypeName","src":"2208:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2147:81:4"},"returnParameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":121,"src":"2247:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":118,"name":"bool","nodeType":"ElementaryTypeName","src":"2247:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2246:6:4"},"scope":140,"src":"2126:127:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"2259:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":130,"name":"Transfer","nameLocation":"2428:8:4","nodeType":"EventDefinition","parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2453:4:4","nodeType":"VariableDeclaration","scope":130,"src":"2437:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":123,"name":"address","nodeType":"ElementaryTypeName","src":"2437:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":126,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2475:2:4","nodeType":"VariableDeclaration","scope":130,"src":"2459:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"2459:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":128,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2487:5:4","nodeType":"VariableDeclaration","scope":130,"src":"2479:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"2479:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2436:57:4"},"src":"2422:72:4"},{"anonymous":false,"documentation":{"id":131,"nodeType":"StructuredDocumentation","src":"2500:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":139,"name":"Approval","nameLocation":"2659:8:4","nodeType":"EventDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":133,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2684:5:4","nodeType":"VariableDeclaration","scope":139,"src":"2668:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":135,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"2707:7:4","nodeType":"VariableDeclaration","scope":139,"src":"2691:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":137,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2724:5:4","nodeType":"VariableDeclaration","scope":139,"src":"2716:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"2716:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:63:4"},"src":"2653:78:4"}],"scope":141,"src":"137:2596:4","usedErrors":[]}],"src":"33:2701:4"},"id":4},"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol","exportedSymbols":{"IAsset":[144]},"id":145,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":142,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IAsset","contractDependencies":[],"contractKind":"interface","documentation":{"id":143,"nodeType":"StructuredDocumentation","src":"721:309:5","text":" @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\n address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\n types.\n This concept is unrelated to a Pool's Asset Managers."},"fullyImplemented":true,"id":144,"linearizedBaseContracts":[144],"name":"IAsset","nameLocation":"1041:6:5","nodeType":"ContractDefinition","nodes":[],"scope":145,"src":"1031:73:5","usedErrors":[]}],"src":"688:417:5"},"id":5},"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol","exportedSymbols":{"IAuthorizer":[159]},"id":160,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":146,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IAuthorizer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":159,"linearizedBaseContracts":[159],"name":"IAuthorizer","nameLocation":"731:11:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"749:121:6","text":" @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`."},"functionSelector":"9be2a884","id":158,"implemented":false,"kind":"function","modifiers":[],"name":"canPerform","nameLocation":"884:10:6","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"actionId","nameLocation":"912:8:6","nodeType":"VariableDeclaration","scope":158,"src":"904:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"904:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"938:7:6","nodeType":"VariableDeclaration","scope":158,"src":"930:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"where","nameLocation":"963:5:6","nodeType":"VariableDeclaration","scope":158,"src":"955:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"955:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"894:80:6"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":158,"src":"998:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":155,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"997:6:6"},"scope":159,"src":"875:129:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":160,"src":"721:285:6","usedErrors":[]}],"src":"688:319:6"},"id":6},"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol","exportedSymbols":{"IERC20":[140],"IFlashLoanRecipient":[179]},"id":180,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":161,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:7"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../solidity-utils/openzeppelin/IERC20.sol","id":162,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":180,"sourceUnit":141,"src":"773:51:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IFlashLoanRecipient","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":179,"linearizedBaseContracts":[179],"name":"IFlashLoanRecipient","nameLocation":"836:19:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"862:496:7","text":" @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n Vault, or else the entire flash loan will revert.\n `userData` is the same value passed in the `IVault.flashLoan` call."},"functionSelector":"f04f2707","id":178,"implemented":false,"kind":"function","modifiers":[],"name":"receiveFlashLoan","nameLocation":"1372:16:7","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"tokens","nameLocation":"1414:6:7","nodeType":"VariableDeclaration","scope":178,"src":"1398:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":165,"nodeType":"UserDefinedTypeName","pathNode":{"id":164,"name":"IERC20","nameLocations":["1398:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"1398:6:7"},"referencedDeclaration":140,"src":"1398:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":166,"nodeType":"ArrayTypeName","src":"1398:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"amounts","nameLocation":"1447:7:7","nodeType":"VariableDeclaration","scope":178,"src":"1430:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":168,"name":"uint256","nodeType":"ElementaryTypeName","src":"1430:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":169,"nodeType":"ArrayTypeName","src":"1430:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"feeAmounts","nameLocation":"1481:10:7","nodeType":"VariableDeclaration","scope":178,"src":"1464:27:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1464:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":172,"nodeType":"ArrayTypeName","src":"1464:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"userData","nameLocation":"1514:8:7","nodeType":"VariableDeclaration","scope":178,"src":"1501:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"1501:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1388:140:7"},"returnParameters":{"id":177,"nodeType":"ParameterList","parameters":[],"src":"1537:0:7"},"scope":179,"src":"1363:175:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":180,"src":"826:714:7","usedErrors":[]}],"src":"688:853:7"},"id":7},"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol","exportedSymbols":{"IAsset":[144],"IAuthentication":[10],"IAuthorizer":[159],"IERC20":[140],"IFlashLoanRecipient":[179],"IProtocolFeesCollector":[248],"ISignaturesValidator":[28],"ITemporarilyPausable":[47],"IVault":[761],"IWETH":[62]},"id":249,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":181,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:8"},{"id":182,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"720:33:8"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../solidity-utils/openzeppelin/IERC20.sol","id":183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":249,"sourceUnit":141,"src":"755:51:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","file":"./IVault.sol","id":184,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":249,"sourceUnit":762,"src":"808:22:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol","file":"./IAuthorizer.sol","id":185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":249,"sourceUnit":160,"src":"831:27:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IProtocolFeesCollector","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":248,"linearizedBaseContracts":[248],"name":"IProtocolFeesCollector","nameLocation":"870:22:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"a9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc","id":189,"name":"SwapFeePercentageChanged","nameLocation":"905:24:8","nodeType":"EventDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"indexed":false,"mutability":"mutable","name":"newSwapFeePercentage","nameLocation":"938:20:8","nodeType":"VariableDeclaration","scope":189,"src":"930:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"930:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"929:30:8"},"src":"899:61:8"},{"anonymous":false,"eventSelector":"5a0b7386237e7f07fa741efc64e59c9387d2cccafec760efed4d53387f20e19a","id":193,"name":"FlashLoanFeePercentageChanged","nameLocation":"971:29:8","nodeType":"EventDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":191,"indexed":false,"mutability":"mutable","name":"newFlashLoanFeePercentage","nameLocation":"1009:25:8","nodeType":"VariableDeclaration","scope":193,"src":"1001:33:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1000:35:8"},"src":"965:71:8"},{"functionSelector":"6daefab6","id":205,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawCollectedFees","nameLocation":"1051:21:8","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"tokens","nameLocation":"1100:6:8","nodeType":"VariableDeclaration","scope":205,"src":"1082:24:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_calldata_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":195,"nodeType":"UserDefinedTypeName","pathNode":{"id":194,"name":"IERC20","nameLocations":["1082:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"1082:6:8"},"referencedDeclaration":140,"src":"1082:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":196,"nodeType":"ArrayTypeName","src":"1082:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"amounts","nameLocation":"1135:7:8","nodeType":"VariableDeclaration","scope":205,"src":"1116:26:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":199,"nodeType":"ArrayTypeName","src":"1116:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"recipient","nameLocation":"1160:9:8","nodeType":"VariableDeclaration","scope":205,"src":"1152:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"1152:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1072:103:8"},"returnParameters":{"id":204,"nodeType":"ParameterList","parameters":[],"src":"1184:0:8"},"scope":248,"src":"1042:143:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"38e9922e","id":210,"implemented":false,"kind":"function","modifiers":[],"name":"setSwapFeePercentage","nameLocation":"1200:20:8","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"newSwapFeePercentage","nameLocation":"1229:20:8","nodeType":"VariableDeclaration","scope":210,"src":"1221:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:30:8"},"returnParameters":{"id":209,"nodeType":"ParameterList","parameters":[],"src":"1259:0:8"},"scope":248,"src":"1191:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6b6b9f69","id":215,"implemented":false,"kind":"function","modifiers":[],"name":"setFlashLoanFeePercentage","nameLocation":"1275:25:8","nodeType":"FunctionDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"newFlashLoanFeePercentage","nameLocation":"1309:25:8","nodeType":"VariableDeclaration","scope":215,"src":"1301:33:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1300:35:8"},"returnParameters":{"id":214,"nodeType":"ParameterList","parameters":[],"src":"1344:0:8"},"scope":248,"src":"1266:79:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"55c67628","id":220,"implemented":false,"kind":"function","modifiers":[],"name":"getSwapFeePercentage","nameLocation":"1360:20:8","nodeType":"FunctionDefinition","parameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"1380:2:8"},"returnParameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":220,"src":"1406:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1405:9:8"},"scope":248,"src":"1351:64:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d877845c","id":225,"implemented":false,"kind":"function","modifiers":[],"name":"getFlashLoanFeePercentage","nameLocation":"1430:25:8","nodeType":"FunctionDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"1455:2:8"},"returnParameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":225,"src":"1481:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1481:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1480:9:8"},"scope":248,"src":"1421:69:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e42abf35","id":235,"implemented":false,"kind":"function","modifiers":[],"name":"getCollectedFeeAmounts","nameLocation":"1505:22:8","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"tokens","nameLocation":"1544:6:8","nodeType":"VariableDeclaration","scope":235,"src":"1528:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":227,"nodeType":"UserDefinedTypeName","pathNode":{"id":226,"name":"IERC20","nameLocations":["1528:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"1528:6:8"},"referencedDeclaration":140,"src":"1528:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":228,"nodeType":"ArrayTypeName","src":"1528:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"1527:24:8"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"feeAmounts","nameLocation":"1592:10:8","nodeType":"VariableDeclaration","scope":235,"src":"1575:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"1575:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":232,"nodeType":"ArrayTypeName","src":"1575:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1574:29:8"},"scope":248,"src":"1496:108:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aaabadc5","id":241,"implemented":false,"kind":"function","modifiers":[],"name":"getAuthorizer","nameLocation":"1619:13:8","nodeType":"FunctionDefinition","parameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"1632:2:8"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":241,"src":"1658:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"},"typeName":{"id":238,"nodeType":"UserDefinedTypeName","pathNode":{"id":237,"name":"IAuthorizer","nameLocations":["1658:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":159,"src":"1658:11:8"},"referencedDeclaration":159,"src":"1658:11:8","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"1657:13:8"},"scope":248,"src":"1610:61:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fbfa77cf","id":247,"implemented":false,"kind":"function","modifiers":[],"name":"vault","nameLocation":"1686:5:8","nodeType":"FunctionDefinition","parameters":{"id":242,"nodeType":"ParameterList","parameters":[],"src":"1691:2:8"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":247,"src":"1717:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"},"typeName":{"id":244,"nodeType":"UserDefinedTypeName","pathNode":{"id":243,"name":"IVault","nameLocations":["1717:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":761,"src":"1717:6:8"},"referencedDeclaration":761,"src":"1717:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"}},"visibility":"internal"}],"src":"1716:8:8"},"scope":248,"src":"1677:48:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":249,"src":"860:867:8","usedErrors":[]}],"src":"688:1040:8"},"id":8},"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","exportedSymbols":{"IAsset":[144],"IAuthentication":[10],"IAuthorizer":[159],"IERC20":[140],"IFlashLoanRecipient":[179],"IProtocolFeesCollector":[248],"ISignaturesValidator":[28],"ITemporarilyPausable":[47],"IVault":[761],"IWETH":[62]},"id":762,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":250,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"688:33:9"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../solidity-utils/openzeppelin/IERC20.sol","id":251,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":141,"src":"723:51:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol","file":"../solidity-utils/helpers/IAuthentication.sol","id":252,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":11,"src":"775:55:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol","file":"../solidity-utils/helpers/ISignaturesValidator.sol","id":253,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":29,"src":"831:60:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol","file":"../solidity-utils/helpers/ITemporarilyPausable.sol","id":254,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":48,"src":"892:60:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol","file":"../solidity-utils/misc/IWETH.sol","id":255,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":63,"src":"953:42:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol","file":"./IAsset.sol","id":256,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":145,"src":"997:22:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol","file":"./IAuthorizer.sol","id":257,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":160,"src":"1020:27:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol","file":"./IFlashLoanRecipient.sol","id":258,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":180,"src":"1048:35:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol","file":"./IProtocolFeesCollector.sol","id":259,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":249,"src":"1084:38:9","symbolAliases":[],"unitAlias":""},{"id":260,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"1124:31:9"},{"abstract":false,"baseContracts":[{"baseName":{"id":262,"name":"ISignaturesValidator","nameLocations":["1349:20:9"],"nodeType":"IdentifierPath","referencedDeclaration":28,"src":"1349:20:9"},"id":263,"nodeType":"InheritanceSpecifier","src":"1349:20:9"},{"baseName":{"id":264,"name":"ITemporarilyPausable","nameLocations":["1371:20:9"],"nodeType":"IdentifierPath","referencedDeclaration":47,"src":"1371:20:9"},"id":265,"nodeType":"InheritanceSpecifier","src":"1371:20:9"},{"baseName":{"id":266,"name":"IAuthentication","nameLocations":["1393:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":10,"src":"1393:15:9"},"id":267,"nodeType":"InheritanceSpecifier","src":"1393:15:9"}],"canonicalName":"IVault","contractDependencies":[],"contractKind":"interface","documentation":{"id":261,"nodeType":"StructuredDocumentation","src":"1157:171:9","text":" @dev Full external interface for the Vault core contract - no external or public methods exist in the contract that\n don't override one of these declarations."},"fullyImplemented":false,"id":761,"linearizedBaseContracts":[761,10,47,28],"name":"IVault","nameLocation":"1339:6:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":268,"nodeType":"StructuredDocumentation","src":"2906:55:9","text":" @dev Returns the Vault's Authorizer."},"functionSelector":"aaabadc5","id":274,"implemented":false,"kind":"function","modifiers":[],"name":"getAuthorizer","nameLocation":"2975:13:9","nodeType":"FunctionDefinition","parameters":{"id":269,"nodeType":"ParameterList","parameters":[],"src":"2988:2:9"},"returnParameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":274,"src":"3014:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"},"typeName":{"id":271,"nodeType":"UserDefinedTypeName","pathNode":{"id":270,"name":"IAuthorizer","nameLocations":["3014:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":159,"src":"3014:11:9"},"referencedDeclaration":159,"src":"3014:11:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"3013:13:9"},"scope":761,"src":"2966:61:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"3033:175:9","text":" @dev Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this.\n Emits an `AuthorizerChanged` event."},"functionSelector":"058a628f","id":281,"implemented":false,"kind":"function","modifiers":[],"name":"setAuthorizer","nameLocation":"3222:13:9","nodeType":"FunctionDefinition","parameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"newAuthorizer","nameLocation":"3248:13:9","nodeType":"VariableDeclaration","scope":281,"src":"3236:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"},"typeName":{"id":277,"nodeType":"UserDefinedTypeName","pathNode":{"id":276,"name":"IAuthorizer","nameLocations":["3236:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":159,"src":"3236:11:9"},"referencedDeclaration":159,"src":"3236:11:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"3235:27:9"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"3271:0:9"},"scope":761,"src":"3213:59:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"3278:80:9","text":" @dev Emitted when a new authorizer is set by `setAuthorizer`."},"eventSelector":"94b979b6831a51293e2641426f97747feed46f17779fed9cd18d1ecefcfe92ef","id":287,"name":"AuthorizerChanged","nameLocation":"3369:17:9","nodeType":"EventDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"indexed":true,"mutability":"mutable","name":"newAuthorizer","nameLocation":"3407:13:9","nodeType":"VariableDeclaration","scope":287,"src":"3387:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"},"typeName":{"id":284,"nodeType":"UserDefinedTypeName","pathNode":{"id":283,"name":"IAuthorizer","nameLocations":["3387:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":159,"src":"3387:11:9"},"referencedDeclaration":159,"src":"3387:11:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"3386:35:9"},"src":"3363:59:9"},{"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"4518:99:9","text":" @dev Returns true if `user` has approved `relayer` to act as a relayer for them."},"functionSelector":"fec90d72","id":297,"implemented":false,"kind":"function","modifiers":[],"name":"hasApprovedRelayer","nameLocation":"4631:18:9","nodeType":"FunctionDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"user","nameLocation":"4658:4:9","nodeType":"VariableDeclaration","scope":297,"src":"4650:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":289,"name":"address","nodeType":"ElementaryTypeName","src":"4650:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"relayer","nameLocation":"4672:7:9","nodeType":"VariableDeclaration","scope":297,"src":"4664:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"4664:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4649:31:9"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":297,"src":"4704:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":294,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4703:6:9"},"scope":761,"src":"4622:88:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"4716:178:9","text":" @dev Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise.\n Emits a `RelayerApprovalChanged` event."},"functionSelector":"fa6e671d","id":307,"implemented":false,"kind":"function","modifiers":[],"name":"setRelayerApproval","nameLocation":"4908:18:9","nodeType":"FunctionDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"sender","nameLocation":"4944:6:9","nodeType":"VariableDeclaration","scope":307,"src":"4936:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":299,"name":"address","nodeType":"ElementaryTypeName","src":"4936:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"relayer","nameLocation":"4968:7:9","nodeType":"VariableDeclaration","scope":307,"src":"4960:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"4960:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"approved","nameLocation":"4990:8:9","nodeType":"VariableDeclaration","scope":307,"src":"4985:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":303,"name":"bool","nodeType":"ElementaryTypeName","src":"4985:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4926:78:9"},"returnParameters":{"id":306,"nodeType":"ParameterList","parameters":[],"src":"5013:0:9"},"scope":761,"src":"4899:115:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":308,"nodeType":"StructuredDocumentation","src":"5020:104:9","text":" @dev Emitted every time a relayer is approved or disapproved by `setRelayerApproval`."},"eventSelector":"46961fdb4502b646d5095fba7600486a8ac05041d55cdf0f16ed677180b5cad8","id":316,"name":"RelayerApprovalChanged","nameLocation":"5135:22:9","nodeType":"EventDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"indexed":true,"mutability":"mutable","name":"relayer","nameLocation":"5174:7:9","nodeType":"VariableDeclaration","scope":316,"src":"5158:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"5158:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":312,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"5199:6:9","nodeType":"VariableDeclaration","scope":316,"src":"5183:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"5183:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"5212:8:9","nodeType":"VariableDeclaration","scope":316,"src":"5207:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":313,"name":"bool","nodeType":"ElementaryTypeName","src":"5207:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5157:64:9"},"src":"5129:93:9"},{"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"5930:78:9","text":" @dev Returns `user`'s Internal Balance for a set of tokens."},"functionSelector":"0f5a6efa","id":329,"implemented":false,"kind":"function","modifiers":[],"name":"getInternalBalance","nameLocation":"6022:18:9","nodeType":"FunctionDefinition","parameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"user","nameLocation":"6049:4:9","nodeType":"VariableDeclaration","scope":329,"src":"6041:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"6041:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":323,"mutability":"mutable","name":"tokens","nameLocation":"6071:6:9","nodeType":"VariableDeclaration","scope":329,"src":"6055:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":321,"nodeType":"UserDefinedTypeName","pathNode":{"id":320,"name":"IERC20","nameLocations":["6055:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"6055:6:9"},"referencedDeclaration":140,"src":"6055:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":322,"nodeType":"ArrayTypeName","src":"6055:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"6040:38:9"},"returnParameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":329,"src":"6102:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":326,"nodeType":"ArrayTypeName","src":"6102:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6101:18:9"},"scope":761,"src":"6013:107:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"6126:416:9","text":" @dev Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer)\n and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as\n it lets integrators reuse a user's Vault allowance.\n For each operation, if the caller is not `sender`, it must be an authorized relayer for them."},"functionSelector":"0e8e3e84","id":337,"implemented":false,"kind":"function","modifiers":[],"name":"manageUserBalance","nameLocation":"6556:17:9","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"ops","nameLocation":"6597:3:9","nodeType":"VariableDeclaration","scope":337,"src":"6574:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserBalanceOp_$350_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.UserBalanceOp[]"},"typeName":{"baseType":{"id":332,"nodeType":"UserDefinedTypeName","pathNode":{"id":331,"name":"UserBalanceOp","nameLocations":["6574:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":350,"src":"6574:13:9"},"referencedDeclaration":350,"src":"6574:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserBalanceOp_$350_storage_ptr","typeString":"struct IVault.UserBalanceOp"}},"id":333,"nodeType":"ArrayTypeName","src":"6574:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserBalanceOp_$350_storage_$dyn_storage_ptr","typeString":"struct IVault.UserBalanceOp[]"}},"visibility":"internal"}],"src":"6573:28:9"},"returnParameters":{"id":336,"nodeType":"ParameterList","parameters":[],"src":"6618:0:9"},"scope":761,"src":"6547:72:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.UserBalanceOp","id":350,"members":[{"constant":false,"id":340,"mutability":"mutable","name":"kind","nameLocation":"6854:4:9","nodeType":"VariableDeclaration","scope":350,"src":"6836:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_UserBalanceOpKind_$355","typeString":"enum IVault.UserBalanceOpKind"},"typeName":{"id":339,"nodeType":"UserDefinedTypeName","pathNode":{"id":338,"name":"UserBalanceOpKind","nameLocations":["6836:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":355,"src":"6836:17:9"},"referencedDeclaration":355,"src":"6836:17:9","typeDescriptions":{"typeIdentifier":"t_enum$_UserBalanceOpKind_$355","typeString":"enum IVault.UserBalanceOpKind"}},"visibility":"internal"},{"constant":false,"id":343,"mutability":"mutable","name":"asset","nameLocation":"6875:5:9","nodeType":"VariableDeclaration","scope":350,"src":"6868:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"},"typeName":{"id":342,"nodeType":"UserDefinedTypeName","pathNode":{"id":341,"name":"IAsset","nameLocations":["6868:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"6868:6:9"},"referencedDeclaration":144,"src":"6868:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"visibility":"internal"},{"constant":false,"id":345,"mutability":"mutable","name":"amount","nameLocation":"6898:6:9","nodeType":"VariableDeclaration","scope":350,"src":"6890:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":344,"name":"uint256","nodeType":"ElementaryTypeName","src":"6890:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":347,"mutability":"mutable","name":"sender","nameLocation":"6922:6:9","nodeType":"VariableDeclaration","scope":350,"src":"6914:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"6914:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"recipient","nameLocation":"6954:9:9","nodeType":"VariableDeclaration","scope":350,"src":"6938:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"6938:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"name":"UserBalanceOp","nameLocation":"6812:13:9","nodeType":"StructDefinition","scope":761,"src":"6805:165:9","visibility":"public"},{"canonicalName":"IVault.UserBalanceOpKind","id":355,"members":[{"id":351,"name":"DEPOSIT_INTERNAL","nameLocation":"8608:16:9","nodeType":"EnumValue","src":"8608:16:9"},{"id":352,"name":"WITHDRAW_INTERNAL","nameLocation":"8626:17:9","nodeType":"EnumValue","src":"8626:17:9"},{"id":353,"name":"TRANSFER_INTERNAL","nameLocation":"8645:17:9","nodeType":"EnumValue","src":"8645:17:9"},{"id":354,"name":"TRANSFER_EXTERNAL","nameLocation":"8664:17:9","nodeType":"EnumValue","src":"8664:17:9"}],"name":"UserBalanceOpKind","nameLocation":"8588:17:9","nodeType":"EnumDefinition","src":"8583:100:9"},{"anonymous":false,"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"8689:317:9","text":" @dev Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through\n interacting with Pools using Internal Balance.\n Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH\n address."},"eventSelector":"18e1ea4139e68413d7d08aa752e71568e36b2c5bf940893314c2c5b01eaa0c42","id":365,"name":"InternalBalanceChanged","nameLocation":"9017:22:9","nodeType":"EventDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"9056:4:9","nodeType":"VariableDeclaration","scope":365,"src":"9040:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"9040:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":361,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"9077:5:9","nodeType":"VariableDeclaration","scope":365,"src":"9062:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":360,"nodeType":"UserDefinedTypeName","pathNode":{"id":359,"name":"IERC20","nameLocations":["9062:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"9062:6:9"},"referencedDeclaration":140,"src":"9062:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":363,"indexed":false,"mutability":"mutable","name":"delta","nameLocation":"9091:5:9","nodeType":"VariableDeclaration","scope":365,"src":"9084:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":362,"name":"int256","nodeType":"ElementaryTypeName","src":"9084:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9039:58:9"},"src":"9011:87:9"},{"anonymous":false,"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"9104:131:9","text":" @dev Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account."},"eventSelector":"540a1a3f28340caec336c81d8d7b3df139ee5cdc1839a4f283d7ebb7eaae2d5c","id":377,"name":"ExternalBalanceTransfer","nameLocation":"9246:23:9","nodeType":"EventDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"9285:5:9","nodeType":"VariableDeclaration","scope":377,"src":"9270:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":368,"nodeType":"UserDefinedTypeName","pathNode":{"id":367,"name":"IERC20","nameLocations":["9270:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"9270:6:9"},"referencedDeclaration":140,"src":"9270:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":371,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"9308:6:9","nodeType":"VariableDeclaration","scope":377,"src":"9292:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"9292:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":373,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"9324:9:9","nodeType":"VariableDeclaration","scope":377,"src":"9316:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":372,"name":"address","nodeType":"ElementaryTypeName","src":"9316:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":375,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"9343:6:9","nodeType":"VariableDeclaration","scope":377,"src":"9335:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"9335:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9269:81:9"},"src":"9240:111:9"},{"canonicalName":"IVault.PoolSpecialization","id":381,"members":[{"id":378,"name":"GENERAL","nameLocation":"10457:7:9","nodeType":"EnumValue","src":"10457:7:9"},{"id":379,"name":"MINIMAL_SWAP_INFO","nameLocation":"10466:17:9","nodeType":"EnumValue","src":"10466:17:9"},{"id":380,"name":"TWO_TOKEN","nameLocation":"10485:9:9","nodeType":"EnumValue","src":"10485:9:9"}],"name":"PoolSpecialization","nameLocation":"10436:18:9","nodeType":"EnumDefinition","src":"10431:65:9"},{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"10502:702:9","text":" @dev Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which\n is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be\n changed.\n The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`,\n depending on the chosen specialization setting. This contract is known as the Pool's contract.\n Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words,\n multiple Pools may share the same contract.\n Emits a `PoolRegistered` event."},"functionSelector":"09b2760f","id":390,"implemented":false,"kind":"function","modifiers":[],"name":"registerPool","nameLocation":"11218:12:9","nodeType":"FunctionDefinition","parameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"specialization","nameLocation":"11250:14:9","nodeType":"VariableDeclaration","scope":390,"src":"11231:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$381","typeString":"enum IVault.PoolSpecialization"},"typeName":{"id":384,"nodeType":"UserDefinedTypeName","pathNode":{"id":383,"name":"PoolSpecialization","nameLocations":["11231:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":381,"src":"11231:18:9"},"referencedDeclaration":381,"src":"11231:18:9","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$381","typeString":"enum IVault.PoolSpecialization"}},"visibility":"internal"}],"src":"11230:35:9"},"returnParameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":390,"src":"11284:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11284:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11283:9:9"},"scope":761,"src":"11209:84:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"11299:84:9","text":" @dev Emitted when a Pool is registered by calling `registerPool`."},"eventSelector":"3c13bc30b8e878c53fd2a36b679409c073afd75950be43d8858768e956fbc20e","id":400,"name":"PoolRegistered","nameLocation":"11394:14:9","nodeType":"EventDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"11425:6:9","nodeType":"VariableDeclaration","scope":400,"src":"11409:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":392,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11409:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":395,"indexed":true,"mutability":"mutable","name":"poolAddress","nameLocation":"11449:11:9","nodeType":"VariableDeclaration","scope":400,"src":"11433:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"11433:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":398,"indexed":false,"mutability":"mutable","name":"specialization","nameLocation":"11481:14:9","nodeType":"VariableDeclaration","scope":400,"src":"11462:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$381","typeString":"enum IVault.PoolSpecialization"},"typeName":{"id":397,"nodeType":"UserDefinedTypeName","pathNode":{"id":396,"name":"PoolSpecialization","nameLocations":["11462:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":381,"src":"11462:18:9"},"referencedDeclaration":381,"src":"11462:18:9","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$381","typeString":"enum IVault.PoolSpecialization"}},"visibility":"internal"}],"src":"11408:88:9"},"src":"11388:109:9"},{"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"11503:85:9","text":" @dev Returns a Pool's contract address and specialization setting."},"functionSelector":"f6c00927","id":411,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"11602:7:9","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"poolId","nameLocation":"11618:6:9","nodeType":"VariableDeclaration","scope":411,"src":"11610:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11610:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11609:16:9"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":411,"src":"11649:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"11649:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":411,"src":"11658:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$381","typeString":"enum IVault.PoolSpecialization"},"typeName":{"id":408,"nodeType":"UserDefinedTypeName","pathNode":{"id":407,"name":"PoolSpecialization","nameLocations":["11658:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":381,"src":"11658:18:9"},"referencedDeclaration":381,"src":"11658:18:9","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$381","typeString":"enum IVault.PoolSpecialization"}},"visibility":"internal"}],"src":"11648:29:9"},"scope":761,"src":"11593:85:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"11684:1422:9","text":" @dev Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens,\n exit by receiving registered tokens, and can only swap registered tokens.\n Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length\n of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in\n ascending order.\n The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset\n Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`,\n depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore\n expected to be highly secured smart contracts with sound design principles, and the decision to register an\n Asset Manager should not be made lightly.\n Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset\n Manager is set, it cannot be changed except by deregistering the associated token and registering again with a\n different Asset Manager.\n Emits a `TokensRegistered` event."},"functionSelector":"66a9c7d2","id":424,"implemented":false,"kind":"function","modifiers":[],"name":"registerTokens","nameLocation":"13120:14:9","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"poolId","nameLocation":"13152:6:9","nodeType":"VariableDeclaration","scope":424,"src":"13144:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13144:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"tokens","nameLocation":"13184:6:9","nodeType":"VariableDeclaration","scope":424,"src":"13168:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":416,"nodeType":"UserDefinedTypeName","pathNode":{"id":415,"name":"IERC20","nameLocations":["13168:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"13168:6:9"},"referencedDeclaration":140,"src":"13168:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":417,"nodeType":"ArrayTypeName","src":"13168:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"assetManagers","nameLocation":"13217:13:9","nodeType":"VariableDeclaration","scope":424,"src":"13200:30:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"13200:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":420,"nodeType":"ArrayTypeName","src":"13200:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"13134:102:9"},"returnParameters":{"id":423,"nodeType":"ParameterList","parameters":[],"src":"13245:0:9"},"scope":761,"src":"13111:135:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":425,"nodeType":"StructuredDocumentation","src":"13252:89:9","text":" @dev Emitted when a Pool registers tokens by calling `registerTokens`."},"eventSelector":"f5847d3f2197b16cdcd2098ec95d0905cd1abdaf415f07bb7cef2bba8ac5dec4","id":436,"name":"TokensRegistered","nameLocation":"13352:16:9","nodeType":"EventDefinition","parameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"13385:6:9","nodeType":"VariableDeclaration","scope":436,"src":"13369:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13369:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":431,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"13402:6:9","nodeType":"VariableDeclaration","scope":436,"src":"13393:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":429,"nodeType":"UserDefinedTypeName","pathNode":{"id":428,"name":"IERC20","nameLocations":["13393:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"13393:6:9"},"referencedDeclaration":140,"src":"13393:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":430,"nodeType":"ArrayTypeName","src":"13393:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":434,"indexed":false,"mutability":"mutable","name":"assetManagers","nameLocation":"13420:13:9","nodeType":"VariableDeclaration","scope":436,"src":"13410:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"13410:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":433,"nodeType":"ArrayTypeName","src":"13410:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"13368:66:9"},"src":"13346:89:9"},{"documentation":{"id":437,"nodeType":"StructuredDocumentation","src":"13441:567:9","text":" @dev Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total\n balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens\n must be deregistered in the same `deregisterTokens` call.\n A deregistered token can be re-registered later on, possibly with a different Asset Manager.\n Emits a `TokensDeregistered` event."},"functionSelector":"7d3aeb96","id":446,"implemented":false,"kind":"function","modifiers":[],"name":"deregisterTokens","nameLocation":"14022:16:9","nodeType":"FunctionDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"poolId","nameLocation":"14047:6:9","nodeType":"VariableDeclaration","scope":446,"src":"14039:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14039:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":443,"mutability":"mutable","name":"tokens","nameLocation":"14071:6:9","nodeType":"VariableDeclaration","scope":446,"src":"14055:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":441,"nodeType":"UserDefinedTypeName","pathNode":{"id":440,"name":"IERC20","nameLocations":["14055:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"14055:6:9"},"referencedDeclaration":140,"src":"14055:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":442,"nodeType":"ArrayTypeName","src":"14055:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"14038:40:9"},"returnParameters":{"id":445,"nodeType":"ParameterList","parameters":[],"src":"14087:0:9"},"scope":761,"src":"14013:75:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"14094:93:9","text":" @dev Emitted when a Pool deregisters tokens by calling `deregisterTokens`."},"eventSelector":"7dcdc6d02ef40c7c1a7046a011b058bd7f988fa14e20a66344f9d4e60657d610","id":455,"name":"TokensDeregistered","nameLocation":"14198:18:9","nodeType":"EventDefinition","parameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"14233:6:9","nodeType":"VariableDeclaration","scope":455,"src":"14217:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14217:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":453,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"14250:6:9","nodeType":"VariableDeclaration","scope":455,"src":"14241:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":451,"nodeType":"UserDefinedTypeName","pathNode":{"id":450,"name":"IERC20","nameLocations":["14241:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"14241:6:9"},"referencedDeclaration":140,"src":"14241:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":452,"nodeType":"ArrayTypeName","src":"14241:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"14216:41:9"},"src":"14192:66:9"},{"documentation":{"id":456,"nodeType":"StructuredDocumentation","src":"14264:1043:9","text":" @dev Returns detailed information for a Pool's registered token.\n `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens\n withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token`\n equals the sum of `cash` and `managed`.\n Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`,\n `managed` or `total` balance to be greater than 2^112 - 1.\n `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a\n join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for\n example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a\n change for this purpose, and will update `lastChangeBlock`.\n `assetManager` is the Pool's token Asset Manager."},"functionSelector":"b05f8e48","id":472,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolTokenInfo","nameLocation":"15321:16:9","nodeType":"FunctionDefinition","parameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"mutability":"mutable","name":"poolId","nameLocation":"15346:6:9","nodeType":"VariableDeclaration","scope":472,"src":"15338:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15338:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":461,"mutability":"mutable","name":"token","nameLocation":"15361:5:9","nodeType":"VariableDeclaration","scope":472,"src":"15354:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":460,"nodeType":"UserDefinedTypeName","pathNode":{"id":459,"name":"IERC20","nameLocations":["15354:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"15354:6:9"},"referencedDeclaration":140,"src":"15354:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"15337:30:9"},"returnParameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"mutability":"mutable","name":"cash","nameLocation":"15436:4:9","nodeType":"VariableDeclaration","scope":472,"src":"15428:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":463,"name":"uint256","nodeType":"ElementaryTypeName","src":"15428:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":466,"mutability":"mutable","name":"managed","nameLocation":"15462:7:9","nodeType":"VariableDeclaration","scope":472,"src":"15454:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":465,"name":"uint256","nodeType":"ElementaryTypeName","src":"15454:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":468,"mutability":"mutable","name":"lastChangeBlock","nameLocation":"15491:15:9","nodeType":"VariableDeclaration","scope":472,"src":"15483:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"15483:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":470,"mutability":"mutable","name":"assetManager","nameLocation":"15528:12:9","nodeType":"VariableDeclaration","scope":472,"src":"15520:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"15520:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15414:136:9"},"scope":761,"src":"15312:239:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"15557:828:9","text":" @dev Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of\n the tokens' `balances` changed.\n The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all\n Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order.\n If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same\n order as passed to `registerTokens`.\n Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are\n the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo`\n instead."},"functionSelector":"f94d4668","id":487,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolTokens","nameLocation":"16399:13:9","nodeType":"FunctionDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"poolId","nameLocation":"16421:6:9","nodeType":"VariableDeclaration","scope":487,"src":"16413:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16413:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16412:16:9"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"tokens","nameLocation":"16505:6:9","nodeType":"VariableDeclaration","scope":487,"src":"16489:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":478,"nodeType":"UserDefinedTypeName","pathNode":{"id":477,"name":"IERC20","nameLocations":["16489:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"16489:6:9"},"referencedDeclaration":140,"src":"16489:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":479,"nodeType":"ArrayTypeName","src":"16489:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":483,"mutability":"mutable","name":"balances","nameLocation":"16542:8:9","nodeType":"VariableDeclaration","scope":487,"src":"16525:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"16525:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":482,"nodeType":"ArrayTypeName","src":"16525:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"lastChangeBlock","nameLocation":"16572:15:9","nodeType":"VariableDeclaration","scope":487,"src":"16564:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"16564:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16475:122:9"},"scope":761,"src":"16390:208:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"16604:2304:9","text":" @dev Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will\n trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized\n Pool shares.\n If the caller is not `sender`, it must be an authorized relayer for them.\n The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount\n to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces\n these maximums.\n If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable\n this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the\n WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent\n back to the caller (not the sender, which is important for relayers).\n `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be\n sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final\n `assets` array might not be sorted. Pools with no registered tokens cannot be joined.\n If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only\n be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be\n withdrawn from Internal Balance: attempting to do so will trigger a revert.\n This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement\n their own custom logic. This typically requires additional information from the user (such as the expected number\n of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed\n directly to the Pool's contract, as is `recipient`.\n Emits a `PoolBalanceChanged` event."},"functionSelector":"b95cac28","id":500,"implemented":false,"kind":"function","modifiers":[],"name":"joinPool","nameLocation":"18922:8:9","nodeType":"FunctionDefinition","parameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"poolId","nameLocation":"18948:6:9","nodeType":"VariableDeclaration","scope":500,"src":"18940:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18940:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":492,"mutability":"mutable","name":"sender","nameLocation":"18972:6:9","nodeType":"VariableDeclaration","scope":500,"src":"18964:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"18964:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"recipient","nameLocation":"18996:9:9","nodeType":"VariableDeclaration","scope":500,"src":"18988:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"18988:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":497,"mutability":"mutable","name":"request","nameLocation":"19038:7:9","nodeType":"VariableDeclaration","scope":500,"src":"19015:30:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_JoinPoolRequest_$512_memory_ptr","typeString":"struct IVault.JoinPoolRequest"},"typeName":{"id":496,"nodeType":"UserDefinedTypeName","pathNode":{"id":495,"name":"JoinPoolRequest","nameLocations":["19015:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":512,"src":"19015:15:9"},"referencedDeclaration":512,"src":"19015:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_JoinPoolRequest_$512_storage_ptr","typeString":"struct IVault.JoinPoolRequest"}},"visibility":"internal"}],"src":"18930:121:9"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[],"src":"19068:0:9"},"scope":761,"src":"18913:156:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.JoinPoolRequest","id":512,"members":[{"constant":false,"id":504,"mutability":"mutable","name":"assets","nameLocation":"19117:6:9","nodeType":"VariableDeclaration","scope":512,"src":"19108:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_storage_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":502,"nodeType":"UserDefinedTypeName","pathNode":{"id":501,"name":"IAsset","nameLocations":["19108:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"19108:6:9"},"referencedDeclaration":144,"src":"19108:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"id":503,"nodeType":"ArrayTypeName","src":"19108:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":507,"mutability":"mutable","name":"maxAmountsIn","nameLocation":"19143:12:9","nodeType":"VariableDeclaration","scope":512,"src":"19133:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":505,"name":"uint256","nodeType":"ElementaryTypeName","src":"19133:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":506,"nodeType":"ArrayTypeName","src":"19133:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"userData","nameLocation":"19171:8:9","nodeType":"VariableDeclaration","scope":512,"src":"19165:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":508,"name":"bytes","nodeType":"ElementaryTypeName","src":"19165:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"fromInternalBalance","nameLocation":"19194:19:9","nodeType":"VariableDeclaration","scope":512,"src":"19189:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":510,"name":"bool","nodeType":"ElementaryTypeName","src":"19189:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"JoinPoolRequest","nameLocation":"19082:15:9","nodeType":"StructDefinition","scope":761,"src":"19075:145:9","visibility":"public"},{"documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"19226:2489:9","text":" @dev Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will\n trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized\n Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see\n `getPoolTokenInfo`).\n If the caller is not `sender`, it must be an authorized relayer for them.\n The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum\n token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault:\n it just enforces these minimums.\n If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To\n enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead\n of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit.\n `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must\n be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the\n final `assets` array might not be sorted. Pools with no registered tokens cannot be exited.\n If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise,\n an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to\n do so will trigger a revert.\n `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the\n `tokens` array. This array must match the Pool's registered tokens.\n This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement\n their own custom logic. This typically requires additional information from the user (such as the expected number\n of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and\n passed directly to the Pool's contract.\n Emits a `PoolBalanceChanged` event."},"functionSelector":"8bdb3913","id":525,"implemented":false,"kind":"function","modifiers":[],"name":"exitPool","nameLocation":"21729:8:9","nodeType":"FunctionDefinition","parameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":515,"mutability":"mutable","name":"poolId","nameLocation":"21755:6:9","nodeType":"VariableDeclaration","scope":525,"src":"21747:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21747:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":517,"mutability":"mutable","name":"sender","nameLocation":"21779:6:9","nodeType":"VariableDeclaration","scope":525,"src":"21771:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"21771:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":519,"mutability":"mutable","name":"recipient","nameLocation":"21811:9:9","nodeType":"VariableDeclaration","scope":525,"src":"21795:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"21795:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":522,"mutability":"mutable","name":"request","nameLocation":"21853:7:9","nodeType":"VariableDeclaration","scope":525,"src":"21830:30:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExitPoolRequest_$537_memory_ptr","typeString":"struct IVault.ExitPoolRequest"},"typeName":{"id":521,"nodeType":"UserDefinedTypeName","pathNode":{"id":520,"name":"ExitPoolRequest","nameLocations":["21830:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":537,"src":"21830:15:9"},"referencedDeclaration":537,"src":"21830:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_ExitPoolRequest_$537_storage_ptr","typeString":"struct IVault.ExitPoolRequest"}},"visibility":"internal"}],"src":"21737:129:9"},"returnParameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"21875:0:9"},"scope":761,"src":"21720:156:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.ExitPoolRequest","id":537,"members":[{"constant":false,"id":529,"mutability":"mutable","name":"assets","nameLocation":"21924:6:9","nodeType":"VariableDeclaration","scope":537,"src":"21915:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_storage_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":527,"nodeType":"UserDefinedTypeName","pathNode":{"id":526,"name":"IAsset","nameLocations":["21915:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"21915:6:9"},"referencedDeclaration":144,"src":"21915:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"id":528,"nodeType":"ArrayTypeName","src":"21915:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":532,"mutability":"mutable","name":"minAmountsOut","nameLocation":"21950:13:9","nodeType":"VariableDeclaration","scope":537,"src":"21940:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"21940:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":531,"nodeType":"ArrayTypeName","src":"21940:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"userData","nameLocation":"21979:8:9","nodeType":"VariableDeclaration","scope":537,"src":"21973:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":533,"name":"bytes","nodeType":"ElementaryTypeName","src":"21973:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"toInternalBalance","nameLocation":"22002:17:9","nodeType":"VariableDeclaration","scope":537,"src":"21997:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":535,"name":"bool","nodeType":"ElementaryTypeName","src":"21997:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ExitPoolRequest","nameLocation":"21889:15:9","nodeType":"StructDefinition","scope":761,"src":"21882:144:9","visibility":"public"},{"anonymous":false,"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"22032:116:9","text":" @dev Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively."},"eventSelector":"e5ce249087ce04f05a957192435400fd97868dba0e6a4b4c049abf8af80dae78","id":554,"name":"PoolBalanceChanged","nameLocation":"22159:18:9","nodeType":"EventDefinition","parameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"22203:6:9","nodeType":"VariableDeclaration","scope":554,"src":"22187:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22187:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":542,"indexed":true,"mutability":"mutable","name":"liquidityProvider","nameLocation":"22235:17:9","nodeType":"VariableDeclaration","scope":554,"src":"22219:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"22219:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":546,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"22271:6:9","nodeType":"VariableDeclaration","scope":554,"src":"22262:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":544,"nodeType":"UserDefinedTypeName","pathNode":{"id":543,"name":"IERC20","nameLocations":["22262:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"22262:6:9"},"referencedDeclaration":140,"src":"22262:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":545,"nodeType":"ArrayTypeName","src":"22262:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":549,"indexed":false,"mutability":"mutable","name":"deltas","nameLocation":"22296:6:9","nodeType":"VariableDeclaration","scope":554,"src":"22287:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":547,"name":"int256","nodeType":"ElementaryTypeName","src":"22287:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":548,"nodeType":"ArrayTypeName","src":"22287:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":552,"indexed":false,"mutability":"mutable","name":"protocolFeeAmounts","nameLocation":"22322:18:9","nodeType":"VariableDeclaration","scope":554,"src":"22312:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"22312:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":551,"nodeType":"ArrayTypeName","src":"22312:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"22177:169:9"},"src":"22153:194:9"},{"canonicalName":"IVault.PoolBalanceChangeKind","id":557,"members":[{"id":555,"name":"JOIN","nameLocation":"22382:4:9","nodeType":"EnumValue","src":"22382:4:9"},{"id":556,"name":"EXIT","nameLocation":"22388:4:9","nodeType":"EnumValue","src":"22388:4:9"}],"name":"PoolBalanceChangeKind","nameLocation":"22358:21:9","nodeType":"EnumDefinition","src":"22353:41:9"},{"canonicalName":"IVault.SwapKind","id":560,"members":[{"id":558,"name":"GIVEN_IN","nameLocation":"25995:8:9","nodeType":"EnumValue","src":"25995:8:9"},{"id":559,"name":"GIVEN_OUT","nameLocation":"26005:9:9","nodeType":"EnumValue","src":"26005:9:9"}],"name":"SwapKind","nameLocation":"25984:8:9","nodeType":"EnumDefinition","src":"25979:37:9"},{"documentation":{"id":561,"nodeType":"StructuredDocumentation","src":"26022:587:9","text":" @dev Performs a swap with a single Pool.\n If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens\n taken from the Pool, which must be greater than or equal to `limit`.\n If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens\n sent to the Pool, which must be less than or equal to `limit`.\n Internal Balance usage and the recipient are determined by the `funds` struct.\n Emits a `Swap` event."},"functionSelector":"52bbbe29","id":576,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"26623:4:9","nodeType":"FunctionDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"singleSwap","nameLocation":"26655:10:9","nodeType":"VariableDeclaration","scope":576,"src":"26637:28:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$592_memory_ptr","typeString":"struct IVault.SingleSwap"},"typeName":{"id":563,"nodeType":"UserDefinedTypeName","pathNode":{"id":562,"name":"SingleSwap","nameLocations":["26637:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"26637:10:9"},"referencedDeclaration":592,"src":"26637:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$592_storage_ptr","typeString":"struct IVault.SingleSwap"}},"visibility":"internal"},{"constant":false,"id":567,"mutability":"mutable","name":"funds","nameLocation":"26697:5:9","nodeType":"VariableDeclaration","scope":576,"src":"26675:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$653_memory_ptr","typeString":"struct IVault.FundManagement"},"typeName":{"id":566,"nodeType":"UserDefinedTypeName","pathNode":{"id":565,"name":"FundManagement","nameLocations":["26675:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":653,"src":"26675:14:9"},"referencedDeclaration":653,"src":"26675:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$653_storage_ptr","typeString":"struct IVault.FundManagement"}},"visibility":"internal"},{"constant":false,"id":569,"mutability":"mutable","name":"limit","nameLocation":"26720:5:9","nodeType":"VariableDeclaration","scope":576,"src":"26712:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":568,"name":"uint256","nodeType":"ElementaryTypeName","src":"26712:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":571,"mutability":"mutable","name":"deadline","nameLocation":"26743:8:9","nodeType":"VariableDeclaration","scope":576,"src":"26735:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint256","nodeType":"ElementaryTypeName","src":"26735:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26627:130:9"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":576,"src":"26784:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":573,"name":"uint256","nodeType":"ElementaryTypeName","src":"26784:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26783:9:9"},"scope":761,"src":"26614:179:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.SingleSwap","id":592,"members":[{"constant":false,"id":578,"mutability":"mutable","name":"poolId","nameLocation":"27385:6:9","nodeType":"VariableDeclaration","scope":592,"src":"27377:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27377:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"kind","nameLocation":"27410:4:9","nodeType":"VariableDeclaration","scope":592,"src":"27401:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$560","typeString":"enum IVault.SwapKind"},"typeName":{"id":580,"nodeType":"UserDefinedTypeName","pathNode":{"id":579,"name":"SwapKind","nameLocations":["27401:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":560,"src":"27401:8:9"},"referencedDeclaration":560,"src":"27401:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$560","typeString":"enum IVault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"assetIn","nameLocation":"27431:7:9","nodeType":"VariableDeclaration","scope":592,"src":"27424:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"},"typeName":{"id":583,"nodeType":"UserDefinedTypeName","pathNode":{"id":582,"name":"IAsset","nameLocations":["27424:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"27424:6:9"},"referencedDeclaration":144,"src":"27424:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"visibility":"internal"},{"constant":false,"id":587,"mutability":"mutable","name":"assetOut","nameLocation":"27455:8:9","nodeType":"VariableDeclaration","scope":592,"src":"27448:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"},"typeName":{"id":586,"nodeType":"UserDefinedTypeName","pathNode":{"id":585,"name":"IAsset","nameLocations":["27448:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"27448:6:9"},"referencedDeclaration":144,"src":"27448:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"amount","nameLocation":"27481:6:9","nodeType":"VariableDeclaration","scope":592,"src":"27473:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"27473:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"userData","nameLocation":"27503:8:9","nodeType":"VariableDeclaration","scope":592,"src":"27497:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":590,"name":"bytes","nodeType":"ElementaryTypeName","src":"27497:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SingleSwap","nameLocation":"27356:10:9","nodeType":"StructDefinition","scope":761,"src":"27349:169:9","visibility":"public"},{"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"27524:1980:9","text":" @dev Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either\n the amount of tokens sent to or received from the Pool, depending on the `kind` value.\n Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\n Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\n the same index in the `assets` array.\n Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a\n Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or\n `amountOut` depending on the swap kind.\n Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out\n of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal\n the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`.\n The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses,\n or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and\n out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to\n or unwrapped from WETH by the Vault.\n Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies\n the minimum or maximum amount of each token the vault is allowed to transfer.\n `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the\n equivalent `swap` call.\n Emits `Swap` events."},"functionSelector":"945bcec9","id":618,"implemented":false,"kind":"function","modifiers":[],"name":"batchSwap","nameLocation":"29518:9:9","nodeType":"FunctionDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"kind","nameLocation":"29546:4:9","nodeType":"VariableDeclaration","scope":618,"src":"29537:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$560","typeString":"enum IVault.SwapKind"},"typeName":{"id":595,"nodeType":"UserDefinedTypeName","pathNode":{"id":594,"name":"SwapKind","nameLocations":["29537:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":560,"src":"29537:8:9"},"referencedDeclaration":560,"src":"29537:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$560","typeString":"enum IVault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"swaps","nameLocation":"29583:5:9","nodeType":"VariableDeclaration","scope":618,"src":"29560:28:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$629_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.BatchSwapStep[]"},"typeName":{"baseType":{"id":598,"nodeType":"UserDefinedTypeName","pathNode":{"id":597,"name":"BatchSwapStep","nameLocations":["29560:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":629,"src":"29560:13:9"},"referencedDeclaration":629,"src":"29560:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$629_storage_ptr","typeString":"struct IVault.BatchSwapStep"}},"id":599,"nodeType":"ArrayTypeName","src":"29560:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$629_storage_$dyn_storage_ptr","typeString":"struct IVault.BatchSwapStep[]"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"assets","nameLocation":"29614:6:9","nodeType":"VariableDeclaration","scope":618,"src":"29598:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_memory_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":602,"nodeType":"UserDefinedTypeName","pathNode":{"id":601,"name":"IAsset","nameLocations":["29598:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"29598:6:9"},"referencedDeclaration":144,"src":"29598:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"id":603,"nodeType":"ArrayTypeName","src":"29598:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"funds","nameLocation":"29652:5:9","nodeType":"VariableDeclaration","scope":618,"src":"29630:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$653_memory_ptr","typeString":"struct IVault.FundManagement"},"typeName":{"id":606,"nodeType":"UserDefinedTypeName","pathNode":{"id":605,"name":"FundManagement","nameLocations":["29630:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":653,"src":"29630:14:9"},"referencedDeclaration":653,"src":"29630:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$653_storage_ptr","typeString":"struct IVault.FundManagement"}},"visibility":"internal"},{"constant":false,"id":610,"mutability":"mutable","name":"limits","nameLocation":"29683:6:9","nodeType":"VariableDeclaration","scope":618,"src":"29667:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":608,"name":"int256","nodeType":"ElementaryTypeName","src":"29667:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":609,"nodeType":"ArrayTypeName","src":"29667:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"deadline","nameLocation":"29707:8:9","nodeType":"VariableDeclaration","scope":618,"src":"29699:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":611,"name":"uint256","nodeType":"ElementaryTypeName","src":"29699:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29527:194:9"},"returnParameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":618,"src":"29748:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":614,"name":"int256","nodeType":"ElementaryTypeName","src":"29748:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":615,"nodeType":"ArrayTypeName","src":"29748:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"29747:17:9"},"scope":761,"src":"29509:256:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.BatchSwapStep","id":629,"members":[{"constant":false,"id":620,"mutability":"mutable","name":"poolId","nameLocation":"30366:6:9","nodeType":"VariableDeclaration","scope":629,"src":"30358:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30358:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"assetInIndex","nameLocation":"30390:12:9","nodeType":"VariableDeclaration","scope":629,"src":"30382:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"30382:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"assetOutIndex","nameLocation":"30420:13:9","nodeType":"VariableDeclaration","scope":629,"src":"30412:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":623,"name":"uint256","nodeType":"ElementaryTypeName","src":"30412:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"amount","nameLocation":"30451:6:9","nodeType":"VariableDeclaration","scope":629,"src":"30443:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"30443:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"userData","nameLocation":"30473:8:9","nodeType":"VariableDeclaration","scope":629,"src":"30467:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":627,"name":"bytes","nodeType":"ElementaryTypeName","src":"30467:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BatchSwapStep","nameLocation":"30334:13:9","nodeType":"StructDefinition","scope":761,"src":"30327:161:9","visibility":"public"},{"anonymous":false,"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"30494:92:9","text":" @dev Emitted for each individual swap performed by `swap` or `batchSwap`."},"eventSelector":"2170c741c41531aec20e7c107c24eecfdd15e69c9bb0a8dd37b1840b9e0b207b","id":644,"name":"Swap","nameLocation":"30597:4:9","nodeType":"EventDefinition","parameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"30627:6:9","nodeType":"VariableDeclaration","scope":644,"src":"30611:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30611:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":635,"indexed":true,"mutability":"mutable","name":"tokenIn","nameLocation":"30658:7:9","nodeType":"VariableDeclaration","scope":644,"src":"30643:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":634,"nodeType":"UserDefinedTypeName","pathNode":{"id":633,"name":"IERC20","nameLocations":["30643:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"30643:6:9"},"referencedDeclaration":140,"src":"30643:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":638,"indexed":true,"mutability":"mutable","name":"tokenOut","nameLocation":"30690:8:9","nodeType":"VariableDeclaration","scope":644,"src":"30675:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":637,"nodeType":"UserDefinedTypeName","pathNode":{"id":636,"name":"IERC20","nameLocations":["30675:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"30675:6:9"},"referencedDeclaration":140,"src":"30675:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":640,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"30716:8:9","nodeType":"VariableDeclaration","scope":644,"src":"30708:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"30708:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":642,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"30742:9:9","nodeType":"VariableDeclaration","scope":644,"src":"30734:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"30734:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30601:156:9"},"src":"30591:167:9"},{"canonicalName":"IVault.FundManagement","id":653,"members":[{"constant":false,"id":646,"mutability":"mutable","name":"sender","nameLocation":"31729:6:9","nodeType":"VariableDeclaration","scope":653,"src":"31721:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"31721:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":648,"mutability":"mutable","name":"fromInternalBalance","nameLocation":"31750:19:9","nodeType":"VariableDeclaration","scope":653,"src":"31745:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":647,"name":"bool","nodeType":"ElementaryTypeName","src":"31745:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":650,"mutability":"mutable","name":"recipient","nameLocation":"31795:9:9","nodeType":"VariableDeclaration","scope":653,"src":"31779:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":649,"name":"address","nodeType":"ElementaryTypeName","src":"31779:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":652,"mutability":"mutable","name":"toInternalBalance","nameLocation":"31819:17:9","nodeType":"VariableDeclaration","scope":653,"src":"31814:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":651,"name":"bool","nodeType":"ElementaryTypeName","src":"31814:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"FundManagement","nameLocation":"31696:14:9","nodeType":"StructDefinition","scope":761,"src":"31689:154:9","visibility":"public"},{"documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"31849:1027:9","text":" @dev Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\n simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\n Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\n the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\n receives are the same that an equivalent `batchSwap` call would receive.\n Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct.\n This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens,\n approve them for the Vault, or even know a user's address.\n Note that this function is not 'view' (due to implementation details): the client code must explicitly execute\n eth_call instead of eth_sendTransaction."},"functionSelector":"f84d066e","id":674,"implemented":false,"kind":"function","modifiers":[],"name":"queryBatchSwap","nameLocation":"32890:14:9","nodeType":"FunctionDefinition","parameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"kind","nameLocation":"32923:4:9","nodeType":"VariableDeclaration","scope":674,"src":"32914:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$560","typeString":"enum IVault.SwapKind"},"typeName":{"id":656,"nodeType":"UserDefinedTypeName","pathNode":{"id":655,"name":"SwapKind","nameLocations":["32914:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":560,"src":"32914:8:9"},"referencedDeclaration":560,"src":"32914:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$560","typeString":"enum IVault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"swaps","nameLocation":"32960:5:9","nodeType":"VariableDeclaration","scope":674,"src":"32937:28:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$629_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.BatchSwapStep[]"},"typeName":{"baseType":{"id":659,"nodeType":"UserDefinedTypeName","pathNode":{"id":658,"name":"BatchSwapStep","nameLocations":["32937:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":629,"src":"32937:13:9"},"referencedDeclaration":629,"src":"32937:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$629_storage_ptr","typeString":"struct IVault.BatchSwapStep"}},"id":660,"nodeType":"ArrayTypeName","src":"32937:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$629_storage_$dyn_storage_ptr","typeString":"struct IVault.BatchSwapStep[]"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"assets","nameLocation":"32991:6:9","nodeType":"VariableDeclaration","scope":674,"src":"32975:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_memory_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":663,"nodeType":"UserDefinedTypeName","pathNode":{"id":662,"name":"IAsset","nameLocations":["32975:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"32975:6:9"},"referencedDeclaration":144,"src":"32975:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"id":664,"nodeType":"ArrayTypeName","src":"32975:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":668,"mutability":"mutable","name":"funds","nameLocation":"33029:5:9","nodeType":"VariableDeclaration","scope":674,"src":"33007:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$653_memory_ptr","typeString":"struct IVault.FundManagement"},"typeName":{"id":667,"nodeType":"UserDefinedTypeName","pathNode":{"id":666,"name":"FundManagement","nameLocations":["33007:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":653,"src":"33007:14:9"},"referencedDeclaration":653,"src":"33007:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$653_storage_ptr","typeString":"struct IVault.FundManagement"}},"visibility":"internal"}],"src":"32904:136:9"},"returnParameters":{"id":673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":672,"mutability":"mutable","name":"assetDeltas","nameLocation":"33075:11:9","nodeType":"VariableDeclaration","scope":674,"src":"33059:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":670,"name":"int256","nodeType":"ElementaryTypeName","src":"33059:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":671,"nodeType":"ArrayTypeName","src":"33059:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"33058:29:9"},"scope":761,"src":"32881:207:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":675,"nodeType":"StructuredDocumentation","src":"33114:604:9","text":" @dev Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it,\n and then reverting unless the tokens plus a proportional protocol fee have been returned.\n The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount\n for each token contract. `tokens` must be sorted in ascending order.\n The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the\n `receiveFlashLoan` call.\n Emits `FlashLoan` events."},"functionSelector":"5c38449e","id":690,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"33732:9:9","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"recipient","nameLocation":"33771:9:9","nodeType":"VariableDeclaration","scope":690,"src":"33751:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$179","typeString":"contract IFlashLoanRecipient"},"typeName":{"id":677,"nodeType":"UserDefinedTypeName","pathNode":{"id":676,"name":"IFlashLoanRecipient","nameLocations":["33751:19:9"],"nodeType":"IdentifierPath","referencedDeclaration":179,"src":"33751:19:9"},"referencedDeclaration":179,"src":"33751:19:9","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$179","typeString":"contract IFlashLoanRecipient"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"tokens","nameLocation":"33806:6:9","nodeType":"VariableDeclaration","scope":690,"src":"33790:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":680,"nodeType":"UserDefinedTypeName","pathNode":{"id":679,"name":"IERC20","nameLocations":["33790:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"33790:6:9"},"referencedDeclaration":140,"src":"33790:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":681,"nodeType":"ArrayTypeName","src":"33790:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"amounts","nameLocation":"33839:7:9","nodeType":"VariableDeclaration","scope":690,"src":"33822:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"33822:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":684,"nodeType":"ArrayTypeName","src":"33822:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"userData","nameLocation":"33869:8:9","nodeType":"VariableDeclaration","scope":690,"src":"33856:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":686,"name":"bytes","nodeType":"ElementaryTypeName","src":"33856:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33741:142:9"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"33892:0:9"},"scope":761,"src":"33723:170:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"33899:88:9","text":" @dev Emitted for each individual flash loan performed by `flashLoan`."},"eventSelector":"0d7d75e01ab95780d3cd1c8ec0dd6c2ce19e3a20427eec8bf53283b6fb8e95f0","id":703,"name":"FlashLoan","nameLocation":"33998:9:9","nodeType":"EventDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"34036:9:9","nodeType":"VariableDeclaration","scope":703,"src":"34008:37:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$179","typeString":"contract IFlashLoanRecipient"},"typeName":{"id":693,"nodeType":"UserDefinedTypeName","pathNode":{"id":692,"name":"IFlashLoanRecipient","nameLocations":["34008:19:9"],"nodeType":"IdentifierPath","referencedDeclaration":179,"src":"34008:19:9"},"referencedDeclaration":179,"src":"34008:19:9","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$179","typeString":"contract IFlashLoanRecipient"}},"visibility":"internal"},{"constant":false,"id":697,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"34062:5:9","nodeType":"VariableDeclaration","scope":703,"src":"34047:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":696,"nodeType":"UserDefinedTypeName","pathNode":{"id":695,"name":"IERC20","nameLocations":["34047:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"34047:6:9"},"referencedDeclaration":140,"src":"34047:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":699,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"34077:6:9","nodeType":"VariableDeclaration","scope":703,"src":"34069:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":698,"name":"uint256","nodeType":"ElementaryTypeName","src":"34069:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":701,"indexed":false,"mutability":"mutable","name":"feeAmount","nameLocation":"34093:9:9","nodeType":"VariableDeclaration","scope":703,"src":"34085:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":700,"name":"uint256","nodeType":"ElementaryTypeName","src":"34085:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34007:96:9"},"src":"33992:112:9"},{"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"35100:434:9","text":" @dev Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates.\n Pool Balance management features batching, which means a single contract call can be used to perform multiple\n operations of different kinds, with different Pools and tokens, at once.\n For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`."},"functionSelector":"e6c46092","id":711,"implemented":false,"kind":"function","modifiers":[],"name":"managePoolBalance","nameLocation":"35548:17:9","nodeType":"FunctionDefinition","parameters":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"ops","nameLocation":"35589:3:9","nodeType":"VariableDeclaration","scope":711,"src":"35566:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolBalanceOp_$722_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.PoolBalanceOp[]"},"typeName":{"baseType":{"id":706,"nodeType":"UserDefinedTypeName","pathNode":{"id":705,"name":"PoolBalanceOp","nameLocations":["35566:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":722,"src":"35566:13:9"},"referencedDeclaration":722,"src":"35566:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_PoolBalanceOp_$722_storage_ptr","typeString":"struct IVault.PoolBalanceOp"}},"id":707,"nodeType":"ArrayTypeName","src":"35566:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolBalanceOp_$722_storage_$dyn_storage_ptr","typeString":"struct IVault.PoolBalanceOp[]"}},"visibility":"internal"}],"src":"35565:28:9"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[],"src":"35602:0:9"},"scope":761,"src":"35539:64:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.PoolBalanceOp","id":722,"members":[{"constant":false,"id":714,"mutability":"mutable","name":"kind","nameLocation":"35658:4:9","nodeType":"VariableDeclaration","scope":722,"src":"35640:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolBalanceOpKind_$726","typeString":"enum IVault.PoolBalanceOpKind"},"typeName":{"id":713,"nodeType":"UserDefinedTypeName","pathNode":{"id":712,"name":"PoolBalanceOpKind","nameLocations":["35640:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":726,"src":"35640:17:9"},"referencedDeclaration":726,"src":"35640:17:9","typeDescriptions":{"typeIdentifier":"t_enum$_PoolBalanceOpKind_$726","typeString":"enum IVault.PoolBalanceOpKind"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"poolId","nameLocation":"35680:6:9","nodeType":"VariableDeclaration","scope":722,"src":"35672:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"35672:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"token","nameLocation":"35703:5:9","nodeType":"VariableDeclaration","scope":722,"src":"35696:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":718,"nodeType":"UserDefinedTypeName","pathNode":{"id":717,"name":"IERC20","nameLocations":["35696:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"35696:6:9"},"referencedDeclaration":140,"src":"35696:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"amount","nameLocation":"35726:6:9","nodeType":"VariableDeclaration","scope":722,"src":"35718:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":720,"name":"uint256","nodeType":"ElementaryTypeName","src":"35718:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PoolBalanceOp","nameLocation":"35616:13:9","nodeType":"StructDefinition","scope":761,"src":"35609:130:9","visibility":"public"},{"canonicalName":"IVault.PoolBalanceOpKind","id":726,"members":[{"id":723,"name":"WITHDRAW","nameLocation":"36261:8:9","nodeType":"EnumValue","src":"36261:8:9"},{"id":724,"name":"DEPOSIT","nameLocation":"36271:7:9","nodeType":"EnumValue","src":"36271:7:9"},{"id":725,"name":"UPDATE","nameLocation":"36280:6:9","nodeType":"EnumValue","src":"36280:6:9"}],"name":"PoolBalanceOpKind","nameLocation":"36241:17:9","nodeType":"EnumDefinition","src":"36236:52:9"},{"anonymous":false,"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"36294:109:9","text":" @dev Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`."},"eventSelector":"6edcaf6241105b4c94c2efdbf3a6b12458eb3d07be3a0e81d24b13c44045fe7a","id":740,"name":"PoolBalanceManaged","nameLocation":"36414:18:9","nodeType":"EventDefinition","parameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"36458:6:9","nodeType":"VariableDeclaration","scope":740,"src":"36442:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36442:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":731,"indexed":true,"mutability":"mutable","name":"assetManager","nameLocation":"36490:12:9","nodeType":"VariableDeclaration","scope":740,"src":"36474:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":730,"name":"address","nodeType":"ElementaryTypeName","src":"36474:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":734,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"36527:5:9","nodeType":"VariableDeclaration","scope":740,"src":"36512:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":733,"nodeType":"UserDefinedTypeName","pathNode":{"id":732,"name":"IERC20","nameLocations":["36512:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"36512:6:9"},"referencedDeclaration":140,"src":"36512:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":736,"indexed":false,"mutability":"mutable","name":"cashDelta","nameLocation":"36549:9:9","nodeType":"VariableDeclaration","scope":740,"src":"36542:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":735,"name":"int256","nodeType":"ElementaryTypeName","src":"36542:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":738,"indexed":false,"mutability":"mutable","name":"managedDelta","nameLocation":"36575:12:9","nodeType":"VariableDeclaration","scope":740,"src":"36568:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":737,"name":"int256","nodeType":"ElementaryTypeName","src":"36568:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"36432:161:9"},"src":"36408:186:9"},{"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"37471:64:9","text":" @dev Returns the current protocol fee module."},"functionSelector":"d2946c2b","id":747,"implemented":false,"kind":"function","modifiers":[],"name":"getProtocolFeesCollector","nameLocation":"37549:24:9","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[],"src":"37573:2:9"},"returnParameters":{"id":746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":747,"src":"37599:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IProtocolFeesCollector_$248","typeString":"contract IProtocolFeesCollector"},"typeName":{"id":744,"nodeType":"UserDefinedTypeName","pathNode":{"id":743,"name":"IProtocolFeesCollector","nameLocations":["37599:22:9"],"nodeType":"IdentifierPath","referencedDeclaration":248,"src":"37599:22:9"},"referencedDeclaration":248,"src":"37599:22:9","typeDescriptions":{"typeIdentifier":"t_contract$_IProtocolFeesCollector_$248","typeString":"contract IProtocolFeesCollector"}},"visibility":"internal"}],"src":"37598:24:9"},"scope":761,"src":"37540:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"37629:635:9","text":" @dev Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an\n error in some part of the system.\n The Vault can only be paused during an initial time period, after which pausing is forever disabled.\n While the contract is paused, the following features are disabled:\n - depositing and transferring internal balance\n - transferring external balance (using the Vault's allowance)\n - swaps\n - joining Pools\n - Asset Manager interactions\n Internal Balance can still be withdrawn, and Pools exited."},"functionSelector":"16c38b3c","id":753,"implemented":false,"kind":"function","modifiers":[],"name":"setPaused","nameLocation":"38278:9:9","nodeType":"FunctionDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"paused","nameLocation":"38293:6:9","nodeType":"VariableDeclaration","scope":753,"src":"38288:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":749,"name":"bool","nodeType":"ElementaryTypeName","src":"38288:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"38287:13:9"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[],"src":"38309:0:9"},"scope":761,"src":"38269:41:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"38316:58:9","text":" @dev Returns the Vault's WETH instance."},"functionSelector":"ad5c4648","id":760,"implemented":false,"kind":"function","modifiers":[],"name":"WETH","nameLocation":"38388:4:9","nodeType":"FunctionDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[],"src":"38392:2:9"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":760,"src":"38418:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$62","typeString":"contract IWETH"},"typeName":{"id":757,"nodeType":"UserDefinedTypeName","pathNode":{"id":756,"name":"IWETH","nameLocations":["38418:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":62,"src":"38418:5:9"},"referencedDeclaration":62,"src":"38418:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$62","typeString":"contract IWETH"}},"visibility":"internal"}],"src":"38417:7:9"},"scope":761,"src":"38379:46:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":762,"src":"1329:37155:9","usedErrors":[]}],"src":"688:37797:9"},"id":9},"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol":{"ast":{"absolutePath":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol","exportedSymbols":{"IUniswapV2Router01":[1069]},"id":1070,"nodeType":"SourceUnit","nodes":[{"id":763,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"0:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV2Router01","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1069,"linearizedBaseContracts":[1069],"name":"IUniswapV2Router01","nameLocation":"36:18:10","nodeType":"ContractDefinition","nodes":[{"functionSelector":"c45a0155","id":768,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"70:7:10","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[],"src":"77:2:10"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":768,"src":"103:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"103:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"102:9:10"},"scope":1069,"src":"61:51:10","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"ad5c4648","id":773,"implemented":false,"kind":"function","modifiers":[],"name":"WETH","nameLocation":"126:4:10","nodeType":"FunctionDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[],"src":"130:2:10"},"returnParameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":773,"src":"156:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"156:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"155:9:10"},"scope":1069,"src":"117:48:10","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"e8e33700","id":798,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"180:12:10","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"tokenA","nameLocation":"210:6:10","nodeType":"VariableDeclaration","scope":798,"src":"202:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"202:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":777,"mutability":"mutable","name":"tokenB","nameLocation":"234:6:10","nodeType":"VariableDeclaration","scope":798,"src":"226:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"226:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":779,"mutability":"mutable","name":"amountADesired","nameLocation":"255:14:10","nodeType":"VariableDeclaration","scope":798,"src":"250:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint","nodeType":"ElementaryTypeName","src":"250:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":781,"mutability":"mutable","name":"amountBDesired","nameLocation":"284:14:10","nodeType":"VariableDeclaration","scope":798,"src":"279:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint","nodeType":"ElementaryTypeName","src":"279:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":783,"mutability":"mutable","name":"amountAMin","nameLocation":"313:10:10","nodeType":"VariableDeclaration","scope":798,"src":"308:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":782,"name":"uint","nodeType":"ElementaryTypeName","src":"308:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":785,"mutability":"mutable","name":"amountBMin","nameLocation":"338:10:10","nodeType":"VariableDeclaration","scope":798,"src":"333:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":784,"name":"uint","nodeType":"ElementaryTypeName","src":"333:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"to","nameLocation":"366:2:10","nodeType":"VariableDeclaration","scope":798,"src":"358:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"deadline","nameLocation":"383:8:10","nodeType":"VariableDeclaration","scope":798,"src":"378:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint","nodeType":"ElementaryTypeName","src":"378:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"192:205:10"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"amountA","nameLocation":"421:7:10","nodeType":"VariableDeclaration","scope":798,"src":"416:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":791,"name":"uint","nodeType":"ElementaryTypeName","src":"416:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"amountB","nameLocation":"435:7:10","nodeType":"VariableDeclaration","scope":798,"src":"430:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint","nodeType":"ElementaryTypeName","src":"430:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":796,"mutability":"mutable","name":"liquidity","nameLocation":"449:9:10","nodeType":"VariableDeclaration","scope":798,"src":"444:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint","nodeType":"ElementaryTypeName","src":"444:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"415:44:10"},"scope":1069,"src":"171:289:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f305d719","id":819,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidityETH","nameLocation":"474:15:10","nodeType":"FunctionDefinition","parameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":800,"mutability":"mutable","name":"token","nameLocation":"507:5:10","nodeType":"VariableDeclaration","scope":819,"src":"499:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"499:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"amountTokenDesired","nameLocation":"527:18:10","nodeType":"VariableDeclaration","scope":819,"src":"522:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint","nodeType":"ElementaryTypeName","src":"522:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":804,"mutability":"mutable","name":"amountTokenMin","nameLocation":"560:14:10","nodeType":"VariableDeclaration","scope":819,"src":"555:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":803,"name":"uint","nodeType":"ElementaryTypeName","src":"555:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"amountETHMin","nameLocation":"589:12:10","nodeType":"VariableDeclaration","scope":819,"src":"584:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint","nodeType":"ElementaryTypeName","src":"584:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"to","nameLocation":"619:2:10","nodeType":"VariableDeclaration","scope":819,"src":"611:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"611:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"deadline","nameLocation":"636:8:10","nodeType":"VariableDeclaration","scope":819,"src":"631:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":809,"name":"uint","nodeType":"ElementaryTypeName","src":"631:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"489:161:10"},"returnParameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"mutability":"mutable","name":"amountToken","nameLocation":"682:11:10","nodeType":"VariableDeclaration","scope":819,"src":"677:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":812,"name":"uint","nodeType":"ElementaryTypeName","src":"677:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":815,"mutability":"mutable","name":"amountETH","nameLocation":"700:9:10","nodeType":"VariableDeclaration","scope":819,"src":"695:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint","nodeType":"ElementaryTypeName","src":"695:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":817,"mutability":"mutable","name":"liquidity","nameLocation":"716:9:10","nodeType":"VariableDeclaration","scope":819,"src":"711:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint","nodeType":"ElementaryTypeName","src":"711:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"676:50:10"},"scope":1069,"src":"465:262:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"baa2abde","id":840,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidity","nameLocation":"741:15:10","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"tokenA","nameLocation":"774:6:10","nodeType":"VariableDeclaration","scope":840,"src":"766:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":820,"name":"address","nodeType":"ElementaryTypeName","src":"766:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":823,"mutability":"mutable","name":"tokenB","nameLocation":"798:6:10","nodeType":"VariableDeclaration","scope":840,"src":"790:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"790:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":825,"mutability":"mutable","name":"liquidity","nameLocation":"819:9:10","nodeType":"VariableDeclaration","scope":840,"src":"814:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":824,"name":"uint","nodeType":"ElementaryTypeName","src":"814:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":827,"mutability":"mutable","name":"amountAMin","nameLocation":"843:10:10","nodeType":"VariableDeclaration","scope":840,"src":"838:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":826,"name":"uint","nodeType":"ElementaryTypeName","src":"838:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":829,"mutability":"mutable","name":"amountBMin","nameLocation":"868:10:10","nodeType":"VariableDeclaration","scope":840,"src":"863:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint","nodeType":"ElementaryTypeName","src":"863:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"to","nameLocation":"896:2:10","nodeType":"VariableDeclaration","scope":840,"src":"888:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"888:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"deadline","nameLocation":"913:8:10","nodeType":"VariableDeclaration","scope":840,"src":"908:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":832,"name":"uint","nodeType":"ElementaryTypeName","src":"908:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"756:171:10"},"returnParameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"amountA","nameLocation":"951:7:10","nodeType":"VariableDeclaration","scope":840,"src":"946:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":835,"name":"uint","nodeType":"ElementaryTypeName","src":"946:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":838,"mutability":"mutable","name":"amountB","nameLocation":"965:7:10","nodeType":"VariableDeclaration","scope":840,"src":"960:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":837,"name":"uint","nodeType":"ElementaryTypeName","src":"960:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"945:28:10"},"scope":1069,"src":"732:242:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"02751cec","id":859,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETH","nameLocation":"988:18:10","nodeType":"FunctionDefinition","parameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"token","nameLocation":"1024:5:10","nodeType":"VariableDeclaration","scope":859,"src":"1016:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"1016:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":844,"mutability":"mutable","name":"liquidity","nameLocation":"1044:9:10","nodeType":"VariableDeclaration","scope":859,"src":"1039:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":843,"name":"uint","nodeType":"ElementaryTypeName","src":"1039:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"amountTokenMin","nameLocation":"1068:14:10","nodeType":"VariableDeclaration","scope":859,"src":"1063:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":845,"name":"uint","nodeType":"ElementaryTypeName","src":"1063:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"amountETHMin","nameLocation":"1097:12:10","nodeType":"VariableDeclaration","scope":859,"src":"1092:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint","nodeType":"ElementaryTypeName","src":"1092:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":850,"mutability":"mutable","name":"to","nameLocation":"1127:2:10","nodeType":"VariableDeclaration","scope":859,"src":"1119:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":849,"name":"address","nodeType":"ElementaryTypeName","src":"1119:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":852,"mutability":"mutable","name":"deadline","nameLocation":"1144:8:10","nodeType":"VariableDeclaration","scope":859,"src":"1139:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint","nodeType":"ElementaryTypeName","src":"1139:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1006:152:10"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"mutability":"mutable","name":"amountToken","nameLocation":"1182:11:10","nodeType":"VariableDeclaration","scope":859,"src":"1177:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":854,"name":"uint","nodeType":"ElementaryTypeName","src":"1177:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"amountETH","nameLocation":"1200:9:10","nodeType":"VariableDeclaration","scope":859,"src":"1195:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint","nodeType":"ElementaryTypeName","src":"1195:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1176:34:10"},"scope":1069,"src":"979:232:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2195995c","id":888,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityWithPermit","nameLocation":"1225:25:10","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"tokenA","nameLocation":"1268:6:10","nodeType":"VariableDeclaration","scope":888,"src":"1260:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":863,"mutability":"mutable","name":"tokenB","nameLocation":"1292:6:10","nodeType":"VariableDeclaration","scope":888,"src":"1284:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"1284:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":865,"mutability":"mutable","name":"liquidity","nameLocation":"1313:9:10","nodeType":"VariableDeclaration","scope":888,"src":"1308:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":864,"name":"uint","nodeType":"ElementaryTypeName","src":"1308:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"amountAMin","nameLocation":"1337:10:10","nodeType":"VariableDeclaration","scope":888,"src":"1332:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint","nodeType":"ElementaryTypeName","src":"1332:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"amountBMin","nameLocation":"1362:10:10","nodeType":"VariableDeclaration","scope":888,"src":"1357:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":868,"name":"uint","nodeType":"ElementaryTypeName","src":"1357:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"to","nameLocation":"1390:2:10","nodeType":"VariableDeclaration","scope":888,"src":"1382:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":870,"name":"address","nodeType":"ElementaryTypeName","src":"1382:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"deadline","nameLocation":"1407:8:10","nodeType":"VariableDeclaration","scope":888,"src":"1402:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":872,"name":"uint","nodeType":"ElementaryTypeName","src":"1402:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"approveMax","nameLocation":"1430:10:10","nodeType":"VariableDeclaration","scope":888,"src":"1425:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":874,"name":"bool","nodeType":"ElementaryTypeName","src":"1425:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":877,"mutability":"mutable","name":"v","nameLocation":"1448:1:10","nodeType":"VariableDeclaration","scope":888,"src":"1442:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":876,"name":"uint8","nodeType":"ElementaryTypeName","src":"1442:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":879,"mutability":"mutable","name":"r","nameLocation":"1459:1:10","nodeType":"VariableDeclaration","scope":888,"src":"1451:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":878,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1451:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"s","nameLocation":"1470:1:10","nodeType":"VariableDeclaration","scope":888,"src":"1462:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":880,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1462:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1250:227:10"},"returnParameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"amountA","nameLocation":"1501:7:10","nodeType":"VariableDeclaration","scope":888,"src":"1496:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint","nodeType":"ElementaryTypeName","src":"1496:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":886,"mutability":"mutable","name":"amountB","nameLocation":"1515:7:10","nodeType":"VariableDeclaration","scope":888,"src":"1510:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":885,"name":"uint","nodeType":"ElementaryTypeName","src":"1510:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:28:10"},"scope":1069,"src":"1216:308:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ded9382a","id":915,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETHWithPermit","nameLocation":"1538:28:10","nodeType":"FunctionDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"token","nameLocation":"1584:5:10","nodeType":"VariableDeclaration","scope":915,"src":"1576:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"1576:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"liquidity","nameLocation":"1604:9:10","nodeType":"VariableDeclaration","scope":915,"src":"1599:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":891,"name":"uint","nodeType":"ElementaryTypeName","src":"1599:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"amountTokenMin","nameLocation":"1628:14:10","nodeType":"VariableDeclaration","scope":915,"src":"1623:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint","nodeType":"ElementaryTypeName","src":"1623:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"amountETHMin","nameLocation":"1657:12:10","nodeType":"VariableDeclaration","scope":915,"src":"1652:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint","nodeType":"ElementaryTypeName","src":"1652:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":898,"mutability":"mutable","name":"to","nameLocation":"1687:2:10","nodeType":"VariableDeclaration","scope":915,"src":"1679:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":897,"name":"address","nodeType":"ElementaryTypeName","src":"1679:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"deadline","nameLocation":"1704:8:10","nodeType":"VariableDeclaration","scope":915,"src":"1699:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":899,"name":"uint","nodeType":"ElementaryTypeName","src":"1699:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":902,"mutability":"mutable","name":"approveMax","nameLocation":"1727:10:10","nodeType":"VariableDeclaration","scope":915,"src":"1722:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":901,"name":"bool","nodeType":"ElementaryTypeName","src":"1722:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":904,"mutability":"mutable","name":"v","nameLocation":"1745:1:10","nodeType":"VariableDeclaration","scope":915,"src":"1739:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":903,"name":"uint8","nodeType":"ElementaryTypeName","src":"1739:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"r","nameLocation":"1756:1:10","nodeType":"VariableDeclaration","scope":915,"src":"1748:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":905,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1748:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":908,"mutability":"mutable","name":"s","nameLocation":"1767:1:10","nodeType":"VariableDeclaration","scope":915,"src":"1759:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":907,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1759:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1566:208:10"},"returnParameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"amountToken","nameLocation":"1798:11:10","nodeType":"VariableDeclaration","scope":915,"src":"1793:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint","nodeType":"ElementaryTypeName","src":"1793:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":913,"mutability":"mutable","name":"amountETH","nameLocation":"1816:9:10","nodeType":"VariableDeclaration","scope":915,"src":"1811:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":912,"name":"uint","nodeType":"ElementaryTypeName","src":"1811:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1792:34:10"},"scope":1069,"src":"1529:298:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"38ed1739","id":932,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForTokens","nameLocation":"1841:24:10","nodeType":"FunctionDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"amountIn","nameLocation":"1880:8:10","nodeType":"VariableDeclaration","scope":932,"src":"1875:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint","nodeType":"ElementaryTypeName","src":"1875:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":919,"mutability":"mutable","name":"amountOutMin","nameLocation":"1903:12:10","nodeType":"VariableDeclaration","scope":932,"src":"1898:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":918,"name":"uint","nodeType":"ElementaryTypeName","src":"1898:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"path","nameLocation":"1944:4:10","nodeType":"VariableDeclaration","scope":932,"src":"1925:23:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"1925:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":921,"nodeType":"ArrayTypeName","src":"1925:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"to","nameLocation":"1966:2:10","nodeType":"VariableDeclaration","scope":932,"src":"1958:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"1958:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"deadline","nameLocation":"1983:8:10","nodeType":"VariableDeclaration","scope":932,"src":"1978:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":925,"name":"uint","nodeType":"ElementaryTypeName","src":"1978:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1865:132:10"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"amounts","nameLocation":"2030:7:10","nodeType":"VariableDeclaration","scope":932,"src":"2016:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":928,"name":"uint","nodeType":"ElementaryTypeName","src":"2016:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":929,"nodeType":"ArrayTypeName","src":"2016:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2015:23:10"},"scope":1069,"src":"1832:207:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8803dbee","id":949,"implemented":false,"kind":"function","modifiers":[],"name":"swapTokensForExactTokens","nameLocation":"2053:24:10","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"amountOut","nameLocation":"2092:9:10","nodeType":"VariableDeclaration","scope":949,"src":"2087:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint","nodeType":"ElementaryTypeName","src":"2087:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":936,"mutability":"mutable","name":"amountInMax","nameLocation":"2116:11:10","nodeType":"VariableDeclaration","scope":949,"src":"2111:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":935,"name":"uint","nodeType":"ElementaryTypeName","src":"2111:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"path","nameLocation":"2156:4:10","nodeType":"VariableDeclaration","scope":949,"src":"2137:23:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"2137:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":938,"nodeType":"ArrayTypeName","src":"2137:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"to","nameLocation":"2178:2:10","nodeType":"VariableDeclaration","scope":949,"src":"2170:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"2170:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":943,"mutability":"mutable","name":"deadline","nameLocation":"2195:8:10","nodeType":"VariableDeclaration","scope":949,"src":"2190:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint","nodeType":"ElementaryTypeName","src":"2190:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2077:132:10"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"amounts","nameLocation":"2242:7:10","nodeType":"VariableDeclaration","scope":949,"src":"2228:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":945,"name":"uint","nodeType":"ElementaryTypeName","src":"2228:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":946,"nodeType":"ArrayTypeName","src":"2228:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2227:23:10"},"scope":1069,"src":"2044:207:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7ff36ab5","id":964,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactETHForTokens","nameLocation":"2265:21:10","nodeType":"FunctionDefinition","parameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"mutability":"mutable","name":"amountOutMin","nameLocation":"2292:12:10","nodeType":"VariableDeclaration","scope":964,"src":"2287:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint","nodeType":"ElementaryTypeName","src":"2287:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":954,"mutability":"mutable","name":"path","nameLocation":"2325:4:10","nodeType":"VariableDeclaration","scope":964,"src":"2306:23:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"2306:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":953,"nodeType":"ArrayTypeName","src":"2306:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"to","nameLocation":"2339:2:10","nodeType":"VariableDeclaration","scope":964,"src":"2331:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"2331:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"deadline","nameLocation":"2348:8:10","nodeType":"VariableDeclaration","scope":964,"src":"2343:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint","nodeType":"ElementaryTypeName","src":"2343:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2286:71:10"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"amounts","nameLocation":"2422:7:10","nodeType":"VariableDeclaration","scope":964,"src":"2408:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":960,"name":"uint","nodeType":"ElementaryTypeName","src":"2408:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":961,"nodeType":"ArrayTypeName","src":"2408:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2407:23:10"},"scope":1069,"src":"2256:175:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"4a25d94a","id":981,"implemented":false,"kind":"function","modifiers":[],"name":"swapTokensForExactETH","nameLocation":"2445:21:10","nodeType":"FunctionDefinition","parameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":966,"mutability":"mutable","name":"amountOut","nameLocation":"2472:9:10","nodeType":"VariableDeclaration","scope":981,"src":"2467:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":965,"name":"uint","nodeType":"ElementaryTypeName","src":"2467:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":968,"mutability":"mutable","name":"amountInMax","nameLocation":"2488:11:10","nodeType":"VariableDeclaration","scope":981,"src":"2483:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":967,"name":"uint","nodeType":"ElementaryTypeName","src":"2483:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"path","nameLocation":"2520:4:10","nodeType":"VariableDeclaration","scope":981,"src":"2501:23:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":970,"nodeType":"ArrayTypeName","src":"2501:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":973,"mutability":"mutable","name":"to","nameLocation":"2534:2:10","nodeType":"VariableDeclaration","scope":981,"src":"2526:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":972,"name":"address","nodeType":"ElementaryTypeName","src":"2526:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":975,"mutability":"mutable","name":"deadline","nameLocation":"2543:8:10","nodeType":"VariableDeclaration","scope":981,"src":"2538:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":974,"name":"uint","nodeType":"ElementaryTypeName","src":"2538:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2466:86:10"},"returnParameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"amounts","nameLocation":"2601:7:10","nodeType":"VariableDeclaration","scope":981,"src":"2587:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":977,"name":"uint","nodeType":"ElementaryTypeName","src":"2587:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":978,"nodeType":"ArrayTypeName","src":"2587:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2586:23:10"},"scope":1069,"src":"2436:174:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"18cbafe5","id":998,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForETH","nameLocation":"2624:21:10","nodeType":"FunctionDefinition","parameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":983,"mutability":"mutable","name":"amountIn","nameLocation":"2651:8:10","nodeType":"VariableDeclaration","scope":998,"src":"2646:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint","nodeType":"ElementaryTypeName","src":"2646:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":985,"mutability":"mutable","name":"amountOutMin","nameLocation":"2666:12:10","nodeType":"VariableDeclaration","scope":998,"src":"2661:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":984,"name":"uint","nodeType":"ElementaryTypeName","src":"2661:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":988,"mutability":"mutable","name":"path","nameLocation":"2699:4:10","nodeType":"VariableDeclaration","scope":998,"src":"2680:23:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"2680:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":987,"nodeType":"ArrayTypeName","src":"2680:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":990,"mutability":"mutable","name":"to","nameLocation":"2713:2:10","nodeType":"VariableDeclaration","scope":998,"src":"2705:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"2705:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"deadline","nameLocation":"2722:8:10","nodeType":"VariableDeclaration","scope":998,"src":"2717:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint","nodeType":"ElementaryTypeName","src":"2717:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2645:86:10"},"returnParameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"amounts","nameLocation":"2780:7:10","nodeType":"VariableDeclaration","scope":998,"src":"2766:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":994,"name":"uint","nodeType":"ElementaryTypeName","src":"2766:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":995,"nodeType":"ArrayTypeName","src":"2766:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2765:23:10"},"scope":1069,"src":"2615:174:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fb3bdb41","id":1013,"implemented":false,"kind":"function","modifiers":[],"name":"swapETHForExactTokens","nameLocation":"2803:21:10","nodeType":"FunctionDefinition","parameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"amountOut","nameLocation":"2830:9:10","nodeType":"VariableDeclaration","scope":1013,"src":"2825:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":999,"name":"uint","nodeType":"ElementaryTypeName","src":"2825:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1003,"mutability":"mutable","name":"path","nameLocation":"2860:4:10","nodeType":"VariableDeclaration","scope":1013,"src":"2841:23:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"2841:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1002,"nodeType":"ArrayTypeName","src":"2841:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1005,"mutability":"mutable","name":"to","nameLocation":"2874:2:10","nodeType":"VariableDeclaration","scope":1013,"src":"2866:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"2866:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1007,"mutability":"mutable","name":"deadline","nameLocation":"2883:8:10","nodeType":"VariableDeclaration","scope":1013,"src":"2878:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1006,"name":"uint","nodeType":"ElementaryTypeName","src":"2878:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2824:68:10"},"returnParameters":{"id":1012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"mutability":"mutable","name":"amounts","nameLocation":"2957:7:10","nodeType":"VariableDeclaration","scope":1013,"src":"2943:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1009,"name":"uint","nodeType":"ElementaryTypeName","src":"2943:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1010,"nodeType":"ArrayTypeName","src":"2943:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2942:23:10"},"scope":1069,"src":"2794:172:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"ad615dec","id":1024,"implemented":false,"kind":"function","modifiers":[],"name":"quote","nameLocation":"2981:5:10","nodeType":"FunctionDefinition","parameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"amountA","nameLocation":"2992:7:10","nodeType":"VariableDeclaration","scope":1024,"src":"2987:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1014,"name":"uint","nodeType":"ElementaryTypeName","src":"2987:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1017,"mutability":"mutable","name":"reserveA","nameLocation":"3006:8:10","nodeType":"VariableDeclaration","scope":1024,"src":"3001:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint","nodeType":"ElementaryTypeName","src":"3001:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"reserveB","nameLocation":"3021:8:10","nodeType":"VariableDeclaration","scope":1024,"src":"3016:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint","nodeType":"ElementaryTypeName","src":"3016:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2986:44:10"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"amountB","nameLocation":"3059:7:10","nodeType":"VariableDeclaration","scope":1024,"src":"3054:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint","nodeType":"ElementaryTypeName","src":"3054:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3053:14:10"},"scope":1069,"src":"2972:96:10","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"054d50d4","id":1035,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"3082:12:10","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"amountIn","nameLocation":"3100:8:10","nodeType":"VariableDeclaration","scope":1035,"src":"3095:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1025,"name":"uint","nodeType":"ElementaryTypeName","src":"3095:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1028,"mutability":"mutable","name":"reserveIn","nameLocation":"3115:9:10","nodeType":"VariableDeclaration","scope":1035,"src":"3110:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint","nodeType":"ElementaryTypeName","src":"3110:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"reserveOut","nameLocation":"3131:10:10","nodeType":"VariableDeclaration","scope":1035,"src":"3126:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint","nodeType":"ElementaryTypeName","src":"3126:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3094:48:10"},"returnParameters":{"id":1034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"amountOut","nameLocation":"3171:9:10","nodeType":"VariableDeclaration","scope":1035,"src":"3166:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1032,"name":"uint","nodeType":"ElementaryTypeName","src":"3166:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3165:16:10"},"scope":1069,"src":"3073:109:10","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"85f8c259","id":1046,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountIn","nameLocation":"3196:11:10","nodeType":"FunctionDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"amountOut","nameLocation":"3213:9:10","nodeType":"VariableDeclaration","scope":1046,"src":"3208:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1036,"name":"uint","nodeType":"ElementaryTypeName","src":"3208:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"reserveIn","nameLocation":"3229:9:10","nodeType":"VariableDeclaration","scope":1046,"src":"3224:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1038,"name":"uint","nodeType":"ElementaryTypeName","src":"3224:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"reserveOut","nameLocation":"3245:10:10","nodeType":"VariableDeclaration","scope":1046,"src":"3240:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint","nodeType":"ElementaryTypeName","src":"3240:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3207:49:10"},"returnParameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"amountIn","nameLocation":"3285:8:10","nodeType":"VariableDeclaration","scope":1046,"src":"3280:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1043,"name":"uint","nodeType":"ElementaryTypeName","src":"3280:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3279:15:10"},"scope":1069,"src":"3187:108:10","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"d06ca61f","id":1057,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountsOut","nameLocation":"3309:13:10","nodeType":"FunctionDefinition","parameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"mutability":"mutable","name":"amountIn","nameLocation":"3328:8:10","nodeType":"VariableDeclaration","scope":1057,"src":"3323:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1047,"name":"uint","nodeType":"ElementaryTypeName","src":"3323:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"path","nameLocation":"3357:4:10","nodeType":"VariableDeclaration","scope":1057,"src":"3338:23:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"3338:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1050,"nodeType":"ArrayTypeName","src":"3338:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3322:40:10"},"returnParameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"amounts","nameLocation":"3400:7:10","nodeType":"VariableDeclaration","scope":1057,"src":"3386:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1053,"name":"uint","nodeType":"ElementaryTypeName","src":"3386:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1054,"nodeType":"ArrayTypeName","src":"3386:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3385:23:10"},"scope":1069,"src":"3300:109:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1f00ca74","id":1068,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountsIn","nameLocation":"3423:12:10","nodeType":"FunctionDefinition","parameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"amountOut","nameLocation":"3441:9:10","nodeType":"VariableDeclaration","scope":1068,"src":"3436:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint","nodeType":"ElementaryTypeName","src":"3436:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"path","nameLocation":"3471:4:10","nodeType":"VariableDeclaration","scope":1068,"src":"3452:23:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1061,"nodeType":"ArrayTypeName","src":"3452:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3435:41:10"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"amounts","nameLocation":"3514:7:10","nodeType":"VariableDeclaration","scope":1068,"src":"3500:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1064,"name":"uint","nodeType":"ElementaryTypeName","src":"3500:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1065,"nodeType":"ArrayTypeName","src":"3500:6:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3499:23:10"},"scope":1069,"src":"3414:109:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1070,"src":"26:3499:10","usedErrors":[]}],"src":"0:3526:10"},"id":10},"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol":{"ast":{"absolutePath":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol","exportedSymbols":{"IUniswapV2Router01":[1069],"IUniswapV2Router02":[1157]},"id":1158,"nodeType":"SourceUnit","nodes":[{"id":1071,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"0:24:11"},{"absolutePath":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol","file":"./IUniswapV2Router01.sol","id":1072,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1158,"sourceUnit":1070,"src":"26:34:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1073,"name":"IUniswapV2Router01","nameLocations":["94:18:11"],"nodeType":"IdentifierPath","referencedDeclaration":1069,"src":"94:18:11"},"id":1074,"nodeType":"InheritanceSpecifier","src":"94:18:11"}],"canonicalName":"IUniswapV2Router02","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1157,"linearizedBaseContracts":[1157,1069],"name":"IUniswapV2Router02","nameLocation":"72:18:11","nodeType":"ContractDefinition","nodes":[{"functionSelector":"af2979eb","id":1091,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETHSupportingFeeOnTransferTokens","nameLocation":"128:47:11","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"token","nameLocation":"193:5:11","nodeType":"VariableDeclaration","scope":1091,"src":"185:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"185:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"liquidity","nameLocation":"213:9:11","nodeType":"VariableDeclaration","scope":1091,"src":"208:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1077,"name":"uint","nodeType":"ElementaryTypeName","src":"208:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1080,"mutability":"mutable","name":"amountTokenMin","nameLocation":"237:14:11","nodeType":"VariableDeclaration","scope":1091,"src":"232:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint","nodeType":"ElementaryTypeName","src":"232:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"amountETHMin","nameLocation":"266:12:11","nodeType":"VariableDeclaration","scope":1091,"src":"261:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1081,"name":"uint","nodeType":"ElementaryTypeName","src":"261:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"to","nameLocation":"296:2:11","nodeType":"VariableDeclaration","scope":1091,"src":"288:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1083,"name":"address","nodeType":"ElementaryTypeName","src":"288:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"deadline","nameLocation":"313:8:11","nodeType":"VariableDeclaration","scope":1091,"src":"308:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1085,"name":"uint","nodeType":"ElementaryTypeName","src":"308:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"175:152:11"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"amountETH","nameLocation":"351:9:11","nodeType":"VariableDeclaration","scope":1091,"src":"346:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint","nodeType":"ElementaryTypeName","src":"346:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"345:16:11"},"scope":1157,"src":"119:243:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5b0d5984","id":1116,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens","nameLocation":"376:57:11","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"token","nameLocation":"451:5:11","nodeType":"VariableDeclaration","scope":1116,"src":"443:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"443:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"liquidity","nameLocation":"471:9:11","nodeType":"VariableDeclaration","scope":1116,"src":"466:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1094,"name":"uint","nodeType":"ElementaryTypeName","src":"466:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"amountTokenMin","nameLocation":"495:14:11","nodeType":"VariableDeclaration","scope":1116,"src":"490:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1096,"name":"uint","nodeType":"ElementaryTypeName","src":"490:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"amountETHMin","nameLocation":"524:12:11","nodeType":"VariableDeclaration","scope":1116,"src":"519:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1098,"name":"uint","nodeType":"ElementaryTypeName","src":"519:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"to","nameLocation":"554:2:11","nodeType":"VariableDeclaration","scope":1116,"src":"546:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"546:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"deadline","nameLocation":"571:8:11","nodeType":"VariableDeclaration","scope":1116,"src":"566:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1102,"name":"uint","nodeType":"ElementaryTypeName","src":"566:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"approveMax","nameLocation":"594:10:11","nodeType":"VariableDeclaration","scope":1116,"src":"589:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1104,"name":"bool","nodeType":"ElementaryTypeName","src":"589:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"v","nameLocation":"612:1:11","nodeType":"VariableDeclaration","scope":1116,"src":"606:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1106,"name":"uint8","nodeType":"ElementaryTypeName","src":"606:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"r","nameLocation":"623:1:11","nodeType":"VariableDeclaration","scope":1116,"src":"615:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"615:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"s","nameLocation":"634:1:11","nodeType":"VariableDeclaration","scope":1116,"src":"626:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"626:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"433:208:11"},"returnParameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"amountETH","nameLocation":"665:9:11","nodeType":"VariableDeclaration","scope":1116,"src":"660:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1113,"name":"uint","nodeType":"ElementaryTypeName","src":"660:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"659:16:11"},"scope":1157,"src":"367:309:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5c11d795","id":1130,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForTokensSupportingFeeOnTransferTokens","nameLocation":"691:53:11","nodeType":"FunctionDefinition","parameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"amountIn","nameLocation":"759:8:11","nodeType":"VariableDeclaration","scope":1130,"src":"754:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint","nodeType":"ElementaryTypeName","src":"754:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1120,"mutability":"mutable","name":"amountOutMin","nameLocation":"782:12:11","nodeType":"VariableDeclaration","scope":1130,"src":"777:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1119,"name":"uint","nodeType":"ElementaryTypeName","src":"777:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"path","nameLocation":"823:4:11","nodeType":"VariableDeclaration","scope":1130,"src":"804:23:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"804:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1122,"nodeType":"ArrayTypeName","src":"804:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"to","nameLocation":"845:2:11","nodeType":"VariableDeclaration","scope":1130,"src":"837:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"deadline","nameLocation":"862:8:11","nodeType":"VariableDeclaration","scope":1130,"src":"857:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint","nodeType":"ElementaryTypeName","src":"857:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"744:132:11"},"returnParameters":{"id":1129,"nodeType":"ParameterList","parameters":[],"src":"885:0:11"},"scope":1157,"src":"682:204:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b6f9de95","id":1142,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactETHForTokensSupportingFeeOnTransferTokens","nameLocation":"900:50:11","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"amountOutMin","nameLocation":"965:12:11","nodeType":"VariableDeclaration","scope":1142,"src":"960:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1131,"name":"uint","nodeType":"ElementaryTypeName","src":"960:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"path","nameLocation":"1006:4:11","nodeType":"VariableDeclaration","scope":1142,"src":"987:23:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"987:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1134,"nodeType":"ArrayTypeName","src":"987:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"to","nameLocation":"1028:2:11","nodeType":"VariableDeclaration","scope":1142,"src":"1020:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1136,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"deadline","nameLocation":"1045:8:11","nodeType":"VariableDeclaration","scope":1142,"src":"1040:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint","nodeType":"ElementaryTypeName","src":"1040:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"950:109:11"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[],"src":"1076:0:11"},"scope":1157,"src":"891:186:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"791ac947","id":1156,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForETHSupportingFeeOnTransferTokens","nameLocation":"1091:50:11","nodeType":"FunctionDefinition","parameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1144,"mutability":"mutable","name":"amountIn","nameLocation":"1156:8:11","nodeType":"VariableDeclaration","scope":1156,"src":"1151:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1143,"name":"uint","nodeType":"ElementaryTypeName","src":"1151:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"amountOutMin","nameLocation":"1179:12:11","nodeType":"VariableDeclaration","scope":1156,"src":"1174:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint","nodeType":"ElementaryTypeName","src":"1174:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"path","nameLocation":"1220:4:11","nodeType":"VariableDeclaration","scope":1156,"src":"1201:23:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1147,"name":"address","nodeType":"ElementaryTypeName","src":"1201:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1148,"nodeType":"ArrayTypeName","src":"1201:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"to","nameLocation":"1242:2:11","nodeType":"VariableDeclaration","scope":1156,"src":"1234:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1150,"name":"address","nodeType":"ElementaryTypeName","src":"1234:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"deadline","nameLocation":"1259:8:11","nodeType":"VariableDeclaration","scope":1156,"src":"1254:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1152,"name":"uint","nodeType":"ElementaryTypeName","src":"1254:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1141:132:11"},"returnParameters":{"id":1155,"nodeType":"ParameterList","parameters":[],"src":"1282:0:11"},"scope":1157,"src":"1082:201:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1158,"src":"62:1223:11","usedErrors":[]}],"src":"0:1286:11"},"id":11},"contracts/Arbitrage.sol":{"ast":{"absolutePath":"contracts/Arbitrage.sol","exportedSymbols":{"Arbitrage":[1603],"IAsset":[144],"IAuthentication":[10],"IAuthorizer":[159],"IERC20":[140],"IFlashLoanRecipient":[179],"IProtocolFeesCollector":[248],"ISignaturesValidator":[28],"ITemporarilyPausable":[47],"IUniswapV2Router01":[1069],"IUniswapV2Router02":[1157],"IVault":[761],"IWETH":[62]},"id":1604,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1159,"literals":["solidity","0.8",".18"],"nodeType":"PragmaDirective","src":"39:23:12"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","file":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","id":1160,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1604,"sourceUnit":762,"src":"64:65:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol","file":"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol","id":1161,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1604,"sourceUnit":180,"src":"130:78:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol","file":"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol","id":1162,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1604,"sourceUnit":1158,"src":"209:75:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1163,"name":"IFlashLoanRecipient","nameLocations":["308:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":179,"src":"308:19:12"},"id":1164,"nodeType":"InheritanceSpecifier","src":"308:19:12"}],"canonicalName":"Arbitrage","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1603,"linearizedBaseContracts":[1603,179],"name":"Arbitrage","nameLocation":"295:9:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1170,"mutability":"constant","name":"vault","nameLocation":"358:5:12","nodeType":"VariableDeclaration","scope":1603,"src":"334:90:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"},"typeName":{"id":1166,"nodeType":"UserDefinedTypeName","pathNode":{"id":1165,"name":"IVault","nameLocations":["334:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":761,"src":"334:6:12"},"referencedDeclaration":761,"src":"334:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"}},"value":{"arguments":[{"hexValue":"307842413132323232323232323238643842613434353935386137356130373034643536364246324338","id":1168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"381:42:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xBA12222222228d8Ba445958a75a0704d566BF2C8"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1167,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"374:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVault_$761_$","typeString":"type(contract IVault)"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"374:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"}},"visibility":"private"},{"constant":false,"functionSelector":"017c64b0","id":1173,"mutability":"immutable","name":"sRouter","nameLocation":"467:7:12","nodeType":"VariableDeclaration","scope":1603,"src":"431:43:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1157","typeString":"contract IUniswapV2Router02"},"typeName":{"id":1172,"nodeType":"UserDefinedTypeName","pathNode":{"id":1171,"name":"IUniswapV2Router02","nameLocations":["431:18:12"],"nodeType":"IdentifierPath","referencedDeclaration":1157,"src":"431:18:12"},"referencedDeclaration":1157,"src":"431:18:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1157","typeString":"contract IUniswapV2Router02"}},"visibility":"public"},{"constant":false,"functionSelector":"5cf39049","id":1176,"mutability":"immutable","name":"uRouter","nameLocation":"516:7:12","nodeType":"VariableDeclaration","scope":1603,"src":"480:43:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1157","typeString":"contract IUniswapV2Router02"},"typeName":{"id":1175,"nodeType":"UserDefinedTypeName","pathNode":{"id":1174,"name":"IUniswapV2Router02","nameLocations":["480:18:12"],"nodeType":"IdentifierPath","referencedDeclaration":1157,"src":"480:18:12"},"referencedDeclaration":1157,"src":"480:18:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1157","typeString":"contract IUniswapV2Router02"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":1178,"mutability":"mutable","name":"owner","nameLocation":"544:5:12","nodeType":"VariableDeclaration","scope":1603,"src":"529:20:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"bc08154b32c714572d2b71de99aa454ac3dc272fa8314b91d111624f0f97a81c","id":1188,"name":"TradeExecuted","nameLocation":"562:13:12","nodeType":"EventDefinition","parameters":{"id":1187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"593:6:12","nodeType":"VariableDeclaration","scope":1188,"src":"585:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"585:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1182,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"617:5:12","nodeType":"VariableDeclaration","scope":1188,"src":"609:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1181,"name":"address","nodeType":"ElementaryTypeName","src":"609:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1184,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"640:6:12","nodeType":"VariableDeclaration","scope":1188,"src":"632:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1183,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1186,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"662:4:12","nodeType":"VariableDeclaration","scope":1188,"src":"656:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1185,"name":"bytes","nodeType":"ElementaryTypeName","src":"656:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"575:97:12"},"src":"556:117:12"},{"anonymous":false,"eventSelector":"3931de709f834e3c094757d8879ea96bacc21f497af9f966091e950137d6b775","id":1196,"name":"LoanedReturned","nameLocation":"684:14:12","nodeType":"EventDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"707:6:12","nodeType":"VariableDeclaration","scope":1196,"src":"699:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1189,"name":"address","nodeType":"ElementaryTypeName","src":"699:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1192,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"723:5:12","nodeType":"VariableDeclaration","scope":1196,"src":"715:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1194,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"738:6:12","nodeType":"VariableDeclaration","scope":1196,"src":"730:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1193,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:47:12"},"src":"678:68:12"},{"anonymous":false,"eventSelector":"ba449dec4e0cdb46f4c0df435aeba7a018f35f2cdc4f3b160410be52dbbe207c","id":1206,"name":"SwappedOnUniswap","nameLocation":"757:16:12","nodeType":"EventDefinition","parameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"791:8:12","nodeType":"VariableDeclaration","scope":1206,"src":"783:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1197,"name":"uint256","nodeType":"ElementaryTypeName","src":"783:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1200,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"817:9:12","nodeType":"VariableDeclaration","scope":1206,"src":"809:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"809:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1202,"indexed":false,"mutability":"mutable","name":"path0","nameLocation":"844:5:12","nodeType":"VariableDeclaration","scope":1206,"src":"836:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1201,"name":"address","nodeType":"ElementaryTypeName","src":"836:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1204,"indexed":false,"mutability":"mutable","name":"path1","nameLocation":"867:5:12","nodeType":"VariableDeclaration","scope":1206,"src":"859:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1203,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"773:105:12"},"src":"751:128:12"},{"anonymous":false,"eventSelector":"e2986cb1b1c90b4738b5e68ac912cc7755496a2534d44578990af36848d6e5da","id":1216,"name":"SwappedOnSushiswap","nameLocation":"890:18:12","nodeType":"EventDefinition","parameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1208,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"926:8:12","nodeType":"VariableDeclaration","scope":1216,"src":"918:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1207,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1210,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"952:9:12","nodeType":"VariableDeclaration","scope":1216,"src":"944:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1209,"name":"uint256","nodeType":"ElementaryTypeName","src":"944:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1212,"indexed":false,"mutability":"mutable","name":"path0","nameLocation":"979:5:12","nodeType":"VariableDeclaration","scope":1216,"src":"971:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1211,"name":"address","nodeType":"ElementaryTypeName","src":"971:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1214,"indexed":false,"mutability":"mutable","name":"path1","nameLocation":"1002:5:12","nodeType":"VariableDeclaration","scope":1216,"src":"994:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1213,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"908:105:12"},"src":"884:130:12"},{"body":{"id":1240,"nodeType":"Block","src":"1068:155:12","statements":[{"expression":{"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1223,"name":"sRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"1078:7:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1157","typeString":"contract IUniswapV2Router02"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1225,"name":"_sRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"1107:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1224,"name":"IUniswapV2Router02","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"1088:18:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV2Router02_$1157_$","typeString":"type(contract IUniswapV2Router02)"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1088:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1157","typeString":"contract IUniswapV2Router02"}},"src":"1078:38:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1157","typeString":"contract IUniswapV2Router02"}},"id":1228,"nodeType":"ExpressionStatement","src":"1078:38:12"},{"expression":{"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1229,"name":"uRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"1139:7:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1157","typeString":"contract IUniswapV2Router02"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1231,"name":"_uRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"1168:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1230,"name":"IUniswapV2Router02","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"1149:18:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV2Router02_$1157_$","typeString":"type(contract IUniswapV2Router02)"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1157","typeString":"contract IUniswapV2Router02"}},"src":"1139:38:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1157","typeString":"contract IUniswapV2Router02"}},"id":1234,"nodeType":"ExpressionStatement","src":"1139:38:12"},{"expression":{"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1235,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"1198:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1236,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1206:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1210:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1206:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1198:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1239,"nodeType":"ExpressionStatement","src":"1198:18:12"}]},"id":1241,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"_sRouter","nameLocation":"1040:8:12","nodeType":"VariableDeclaration","scope":1241,"src":"1032:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"1032:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"_uRouter","nameLocation":"1058:8:12","nodeType":"VariableDeclaration","scope":1241,"src":"1050:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"1050:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1031:36:12"},"returnParameters":{"id":1222,"nodeType":"ParameterList","parameters":[],"src":"1068:0:12"},"scope":1603,"src":"1020:203:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1315,"nodeType":"Block","src":"1376:487:12","statements":[{"assignments":[1253],"declarations":[{"constant":false,"id":1253,"mutability":"mutable","name":"data","nameLocation":"1399:4:12","nodeType":"VariableDeclaration","scope":1315,"src":"1386:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1252,"name":"bytes","nodeType":"ElementaryTypeName","src":"1386:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1260,"initialValue":{"arguments":[{"id":1256,"name":"_startOnUniswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"1417:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1257,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"1434:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1258,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"1443:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1254,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1406:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1410:6:12","memberName":"encode","nodeType":"MemberAccess","src":"1406:10:12","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1406:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1386:65:12"},{"assignments":[1265],"declarations":[{"constant":false,"id":1265,"mutability":"mutable","name":"tokens","nameLocation":"1551:6:12","nodeType":"VariableDeclaration","scope":1315,"src":"1535:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1263,"nodeType":"UserDefinedTypeName","pathNode":{"id":1262,"name":"IERC20","nameLocations":["1535:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"1535:6:12"},"referencedDeclaration":140,"src":"1535:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1264,"nodeType":"ArrayTypeName","src":"1535:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"id":1272,"initialValue":{"arguments":[{"hexValue":"31","id":1270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1560:12:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (contract IERC20[] memory)"},"typeName":{"baseType":{"id":1267,"nodeType":"UserDefinedTypeName","pathNode":{"id":1266,"name":"IERC20","nameLocations":["1564:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"1564:6:12"},"referencedDeclaration":140,"src":"1564:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1268,"nodeType":"ArrayTypeName","src":"1564:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}}},"id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1560:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1535:40:12"},{"expression":{"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1273,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"1585:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":1275,"indexExpression":{"hexValue":"30","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1592:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1585:9:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1277,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"1604:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1276,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"1597:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$140_$","typeString":"type(contract IERC20)"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1597:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"src":"1585:27:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1280,"nodeType":"ExpressionStatement","src":"1585:27:12"},{"assignments":[1285],"declarations":[{"constant":false,"id":1285,"mutability":"mutable","name":"amounts","nameLocation":"1670:7:12","nodeType":"VariableDeclaration","scope":1315,"src":"1653:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1283,"name":"uint256","nodeType":"ElementaryTypeName","src":"1653:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1284,"nodeType":"ArrayTypeName","src":"1653:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1291,"initialValue":{"arguments":[{"hexValue":"31","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1694:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1680:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1287,"nodeType":"ArrayTypeName","src":"1684:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1680:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1653:43:12"},{"expression":{"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1292,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"1706:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1294,"indexExpression":{"hexValue":"30","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1714:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1706:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1295,"name":"_flashAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"1719:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1706:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1297,"nodeType":"ExpressionStatement","src":"1706:25:12"},{"expression":{"arguments":[{"id":1301,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1758:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Arbitrage_$1603","typeString":"contract Arbitrage"}},{"id":1302,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"1764:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},{"id":1303,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"1772:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1304,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"1781:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Arbitrage_$1603","typeString":"contract Arbitrage"},{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1298,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"1742:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1748:9:12","memberName":"flashLoan","nodeType":"MemberAccess","referencedDeclaration":690,"src":"1742:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_contract$_IFlashLoanRecipient_$179_$_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IFlashLoanRecipient,contract IERC20[] memory,uint256[] memory,bytes memory) external"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1742:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1306,"nodeType":"ExpressionStatement","src":"1742:44:12"},{"eventCall":{"arguments":[{"expression":{"id":1308,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1816:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1820:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1816:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1310,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"1828:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1311,"name":"_flashAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"1837:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1312,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"1851:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1307,"name":"TradeExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"1802:13:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:54:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1314,"nodeType":"EmitStatement","src":"1797:59:12"}]},"functionSelector":"1395dd23","id":1316,"implemented":true,"kind":"function","modifiers":[],"name":"executeTrade","nameLocation":"1238:12:12","nodeType":"FunctionDefinition","parameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"_startOnUniswap","nameLocation":"1265:15:12","nodeType":"VariableDeclaration","scope":1316,"src":"1260:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1242,"name":"bool","nodeType":"ElementaryTypeName","src":"1260:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1245,"mutability":"mutable","name":"_token0","nameLocation":"1298:7:12","nodeType":"VariableDeclaration","scope":1316,"src":"1290:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"1290:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"_token1","nameLocation":"1323:7:12","nodeType":"VariableDeclaration","scope":1316,"src":"1315:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"1315:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"_flashAmount","nameLocation":"1348:12:12","nodeType":"VariableDeclaration","scope":1316,"src":"1340:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"1340:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1250:116:12"},"returnParameters":{"id":1251,"nodeType":"ParameterList","parameters":[],"src":"1376:0:12"},"scope":1603,"src":"1229:634:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[178],"body":{"id":1491,"nodeType":"Block","src":"2053:1173:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1333,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2071:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2075:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2071:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1337,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"2093:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"}],"id":1336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2085:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1335,"name":"address","nodeType":"ElementaryTypeName","src":"2085:7:12","typeDescriptions":{}}},"id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2085:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2071:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1332,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2063:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2063:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1341,"nodeType":"ExpressionStatement","src":"2063:37:12"},{"assignments":[1343],"declarations":[{"constant":false,"id":1343,"mutability":"mutable","name":"flashAmount","nameLocation":"2119:11:12","nodeType":"VariableDeclaration","scope":1491,"src":"2111:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"2111:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1347,"initialValue":{"baseExpression":{"id":1344,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"2133:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1346,"indexExpression":{"hexValue":"30","id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2133:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2111:32:12"},{"assignments":[1349,1351,1353],"declarations":[{"constant":false,"id":1349,"mutability":"mutable","name":"startOnUniswap","nameLocation":"2160:14:12","nodeType":"VariableDeclaration","scope":1491,"src":"2155:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1348,"name":"bool","nodeType":"ElementaryTypeName","src":"2155:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1351,"mutability":"mutable","name":"token0","nameLocation":"2184:6:12","nodeType":"VariableDeclaration","scope":1491,"src":"2176:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1350,"name":"address","nodeType":"ElementaryTypeName","src":"2176:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1353,"mutability":"mutable","name":"token1","nameLocation":"2200:6:12","nodeType":"VariableDeclaration","scope":1491,"src":"2192:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1352,"name":"address","nodeType":"ElementaryTypeName","src":"2192:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1365,"initialValue":{"arguments":[{"id":1356,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"2234:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2257:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1357,"name":"bool","nodeType":"ElementaryTypeName","src":"2257:4:12","typeDescriptions":{}}},{"id":1360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2263:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1359,"name":"address","nodeType":"ElementaryTypeName","src":"2263:7:12","typeDescriptions":{}}},{"id":1362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2272:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1361,"name":"address","nodeType":"ElementaryTypeName","src":"2272:7:12","typeDescriptions":{}}}],"id":1363,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2256:24:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_bool_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$","typeString":"tuple(type(bool),type(address),type(address))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_bool_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$","typeString":"tuple(type(bool),type(address),type(address))"}],"expression":{"id":1354,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2210:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2214:6:12","memberName":"decode","nodeType":"MemberAccess","src":"2210:10:12","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2210:80:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_payable_$_t_address_payable_$","typeString":"tuple(bool,address payable,address payable)"}},"nodeType":"VariableDeclarationStatement","src":"2154:136:12"},{"assignments":[1370],"declarations":[{"constant":false,"id":1370,"mutability":"mutable","name":"path","nameLocation":"2349:4:12","nodeType":"VariableDeclaration","scope":1491,"src":"2332:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1368,"name":"address","nodeType":"ElementaryTypeName","src":"2332:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1369,"nodeType":"ArrayTypeName","src":"2332:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1376,"initialValue":{"arguments":[{"hexValue":"32","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2370:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":1373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2356:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"2360:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1372,"nodeType":"ArrayTypeName","src":"2360:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2332:40:12"},{"expression":{"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1377,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"2383:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1379,"indexExpression":{"hexValue":"30","id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2388:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2383:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1380,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"2393:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2383:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1382,"nodeType":"ExpressionStatement","src":"2383:16:12"},{"expression":{"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1383,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"2409:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1385,"indexExpression":{"hexValue":"31","id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2414:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2409:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1386,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"2419:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2409:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1388,"nodeType":"ExpressionStatement","src":"2409:16:12"},{"condition":{"id":1389,"name":"startOnUniswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"2440:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1455,"nodeType":"Block","src":"2737:275:12","statements":[{"expression":{"arguments":[{"id":1424,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"2768:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1425,"name":"flashAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"2774:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2787:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1423,"name":"_swapOnSushiswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"2751:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address[] memory,uint256,uint256)"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1428,"nodeType":"ExpressionStatement","src":"2751:38:12"},{"expression":{"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1429,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"2804:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1431,"indexExpression":{"hexValue":"30","id":1430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2809:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2804:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1432,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"2814:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2804:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1434,"nodeType":"ExpressionStatement","src":"2804:16:12"},{"expression":{"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1435,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"2834:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1437,"indexExpression":{"hexValue":"31","id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2839:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2834:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1438,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"2844:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2834:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1440,"nodeType":"ExpressionStatement","src":"2834:16:12"},{"expression":{"arguments":[{"id":1442,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"2897:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"arguments":[{"arguments":[{"id":1449,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2952:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Arbitrage_$1603","typeString":"contract Arbitrage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Arbitrage_$1603","typeString":"contract Arbitrage"}],"id":1448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2944:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1447,"name":"address","nodeType":"ElementaryTypeName","src":"2944:7:12","typeDescriptions":{}}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2944:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1444,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"2926:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1443,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2919:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$140_$","typeString":"type(contract IERC20)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2919:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2934:9:12","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":79,"src":"2919:24:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2919:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1452,"name":"flashAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"2976:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1441,"name":"_swapOnUniswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"2865:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address[] memory,uint256,uint256)"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2865:136:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1454,"nodeType":"ExpressionStatement","src":"2865:136:12"}]},"id":1456,"nodeType":"IfStatement","src":"2436:576:12","trueBody":{"id":1422,"nodeType":"Block","src":"2456:275:12","statements":[{"expression":{"arguments":[{"id":1391,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"2485:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1392,"name":"flashAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"2491:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2504:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1390,"name":"_swapOnUniswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"2470:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address[] memory,uint256,uint256)"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2470:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1395,"nodeType":"ExpressionStatement","src":"2470:36:12"},{"expression":{"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1396,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"2521:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1398,"indexExpression":{"hexValue":"30","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2526:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2521:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1399,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"2531:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2521:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1401,"nodeType":"ExpressionStatement","src":"2521:16:12"},{"expression":{"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1402,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"2551:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1404,"indexExpression":{"hexValue":"31","id":1403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2556:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2551:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1405,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"2561:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2551:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1407,"nodeType":"ExpressionStatement","src":"2551:16:12"},{"expression":{"arguments":[{"id":1409,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"2616:4:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"arguments":[{"arguments":[{"id":1416,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2671:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Arbitrage_$1603","typeString":"contract Arbitrage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Arbitrage_$1603","typeString":"contract Arbitrage"}],"id":1415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2663:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1414,"name":"address","nodeType":"ElementaryTypeName","src":"2663:7:12","typeDescriptions":{}}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2663:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1411,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"2645:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1410,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2638:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$140_$","typeString":"type(contract IERC20)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2638:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2653:9:12","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":79,"src":"2638:24:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2638:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1419,"name":"flashAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"2695:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1408,"name":"_swapOnSushiswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"2582:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address[] memory,uint256,uint256)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2582:138:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1421,"nodeType":"ExpressionStatement","src":"2582:138:12"}]}},{"expression":{"arguments":[{"arguments":[{"id":1463,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"3054:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"}],"id":1462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3046:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1461,"name":"address","nodeType":"ElementaryTypeName","src":"3046:7:12","typeDescriptions":{}}},"id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1465,"name":"flashAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"3062:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1458,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"3029:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1457,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"3022:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$140_$","typeString":"type(contract IERC20)"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3022:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:8:12","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":89,"src":"3022:23:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3022:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1467,"nodeType":"ExpressionStatement","src":"3022:52:12"},{"expression":{"arguments":[{"id":1472,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"3109:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":1479,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3149:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Arbitrage_$1603","typeString":"contract Arbitrage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Arbitrage_$1603","typeString":"contract Arbitrage"}],"id":1478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3141:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1477,"name":"address","nodeType":"ElementaryTypeName","src":"3141:7:12","typeDescriptions":{}}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3141:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1474,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"3123:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1473,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"3116:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$140_$","typeString":"type(contract IERC20)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3131:9:12","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":79,"src":"3116:24:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1469,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"3092:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1468,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"3085:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$140_$","typeString":"type(contract IERC20)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3085:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3100:8:12","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":89,"src":"3085:23:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3085:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1483,"nodeType":"ExpressionStatement","src":"3085:71:12"},{"eventCall":{"arguments":[{"expression":{"id":1485,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3187:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3191:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3187:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1487,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"3199:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1488,"name":"flashAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"3207:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1484,"name":"LoanedReturned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"3172:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3172:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1490,"nodeType":"EmitStatement","src":"3167:52:12"}]},"functionSelector":"f04f2707","id":1492,"implemented":true,"kind":"function","modifiers":[],"name":"receiveFlashLoan","nameLocation":"1878:16:12","nodeType":"FunctionDefinition","overrides":{"id":1330,"nodeType":"OverrideSpecifier","overrides":[],"src":"2044:8:12"},"parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1320,"mutability":"mutable","name":"tokens","nameLocation":"1920:6:12","nodeType":"VariableDeclaration","scope":1492,"src":"1904:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1318,"nodeType":"UserDefinedTypeName","pathNode":{"id":1317,"name":"IERC20","nameLocations":["1904:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"1904:6:12"},"referencedDeclaration":140,"src":"1904:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1319,"nodeType":"ArrayTypeName","src":"1904:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"amounts","nameLocation":"1953:7:12","nodeType":"VariableDeclaration","scope":1492,"src":"1936:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1936:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1322,"nodeType":"ArrayTypeName","src":"1936:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1326,"mutability":"mutable","name":"feeAmounts","nameLocation":"1987:10:12","nodeType":"VariableDeclaration","scope":1492,"src":"1970:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"1970:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1325,"nodeType":"ArrayTypeName","src":"1970:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"userData","nameLocation":"2020:8:12","nodeType":"VariableDeclaration","scope":1492,"src":"2007:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1327,"name":"bytes","nodeType":"ElementaryTypeName","src":"2007:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1894:140:12"},"returnParameters":{"id":1331,"nodeType":"ParameterList","parameters":[],"src":"2053:0:12"},"scope":1603,"src":"1869:1357:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1546,"nodeType":"Block","src":"3394:400:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1511,"name":"uRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"3458:7:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1157","typeString":"contract IUniswapV2Router02"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1157","typeString":"contract IUniswapV2Router02"}],"id":1510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3450:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1509,"name":"address","nodeType":"ElementaryTypeName","src":"3450:7:12","typeDescriptions":{}}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3450:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1513,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"3468:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":1504,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"3432:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1506,"indexExpression":{"hexValue":"30","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3438:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3432:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1503,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"3425:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$140_$","typeString":"type(contract IERC20)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3442:7:12","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":109,"src":"3425:24:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e697377617020617070726f76616c206661696c65642e","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3492:26:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c473bc87957af9d2b3ccbdbf6af1e2a16250a17e90f0632562ea9f4ae9722ef","typeString":"literal_string \"Uniswap approval failed.\""},"value":"Uniswap approval failed."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4c473bc87957af9d2b3ccbdbf6af1e2a16250a17e90f0632562ea9f4ae9722ef","typeString":"literal_string \"Uniswap approval failed.\""}],"id":1502,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3404:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:124:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1517,"nodeType":"ExpressionStatement","src":"3404:124:12"},{"expression":{"arguments":[{"id":1521,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"3585:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1522,"name":"_amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"3608:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1523,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"3632:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"arguments":[{"id":1526,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3659:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Arbitrage_$1603","typeString":"contract Arbitrage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Arbitrage_$1603","typeString":"contract Arbitrage"}],"id":1525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3651:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1524,"name":"address","nodeType":"ElementaryTypeName","src":"3651:7:12","typeDescriptions":{}}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3651:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1528,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3679:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3685:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"3679:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31323030","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3697:4:12","typeDescriptions":{"typeIdentifier":"t_rational_1200_by_1","typeString":"int_const 1200"},"value":"1200"},"src":"3679:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1532,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3678:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1518,"name":"uRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"3539:7:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1157","typeString":"contract IUniswapV2Router02"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3547:24:12","memberName":"swapExactTokensForTokens","nodeType":"MemberAccess","referencedDeclaration":932,"src":"3539:32:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3539:173:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1534,"nodeType":"ExpressionStatement","src":"3539:173:12"},{"eventCall":{"arguments":[{"id":1536,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"3745:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1537,"name":"_amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"3756:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1538,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"3768:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1540,"indexExpression":{"hexValue":"30","id":1539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3774:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3768:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":1541,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"3778:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1543,"indexExpression":{"hexValue":"31","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3784:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3778:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1535,"name":"SwappedOnUniswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"3728:16:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address,address)"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3728:59:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1545,"nodeType":"EmitStatement","src":"3723:64:12"}]},"id":1547,"implemented":true,"kind":"function","modifiers":[],"name":"_swapOnUniswap","nameLocation":"3277:14:12","nodeType":"FunctionDefinition","parameters":{"id":1500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"_path","nameLocation":"3318:5:12","nodeType":"VariableDeclaration","scope":1547,"src":"3301:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"3301:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1494,"nodeType":"ArrayTypeName","src":"3301:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1497,"mutability":"mutable","name":"_amountIn","nameLocation":"3341:9:12","nodeType":"VariableDeclaration","scope":1547,"src":"3333:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"3333:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1499,"mutability":"mutable","name":"_amountOut","nameLocation":"3368:10:12","nodeType":"VariableDeclaration","scope":1547,"src":"3360:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"3360:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3291:93:12"},"returnParameters":{"id":1501,"nodeType":"ParameterList","parameters":[],"src":"3394:0:12"},"scope":1603,"src":"3268:526:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1601,"nodeType":"Block","src":"3928:404:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1566,"name":"sRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"3992:7:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1157","typeString":"contract IUniswapV2Router02"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1157","typeString":"contract IUniswapV2Router02"}],"id":1565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3984:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1564,"name":"address","nodeType":"ElementaryTypeName","src":"3984:7:12","typeDescriptions":{}}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3984:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1568,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"4002:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":1559,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"3966:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1561,"indexExpression":{"hexValue":"30","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3972:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3966:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1558,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"3959:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$140_$","typeString":"type(contract IERC20)"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3959:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3976:7:12","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":109,"src":"3959:24:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3959:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53757368697377617020617070726f76616c206661696c65642e","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4026:28:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_919058e86b9a945d55abb823a3d9c26bfcafca6844acffc0235f4374fc2677eb","typeString":"literal_string \"Sushiswap approval failed.\""},"value":"Sushiswap approval failed."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_919058e86b9a945d55abb823a3d9c26bfcafca6844acffc0235f4374fc2677eb","typeString":"literal_string \"Sushiswap approval failed.\""}],"id":1557,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3938:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3938:126:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1572,"nodeType":"ExpressionStatement","src":"3938:126:12"},{"expression":{"arguments":[{"id":1576,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"4121:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1577,"name":"_amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"4144:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1578,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"4168:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"arguments":[{"id":1581,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4195:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Arbitrage_$1603","typeString":"contract Arbitrage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Arbitrage_$1603","typeString":"contract Arbitrage"}],"id":1580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4187:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1579,"name":"address","nodeType":"ElementaryTypeName","src":"4187:7:12","typeDescriptions":{}}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4187:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1583,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4215:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4221:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"4215:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31323030","id":1585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4233:4:12","typeDescriptions":{"typeIdentifier":"t_rational_1200_by_1","typeString":"int_const 1200"},"value":"1200"},"src":"4215:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1587,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4214:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1573,"name":"sRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"4075:7:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$1157","typeString":"contract IUniswapV2Router02"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4083:24:12","memberName":"swapExactTokensForTokens","nodeType":"MemberAccess","referencedDeclaration":932,"src":"4075:32:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4075:173:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1589,"nodeType":"ExpressionStatement","src":"4075:173:12"},{"eventCall":{"arguments":[{"id":1591,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"4283:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1592,"name":"_amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"4294:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1593,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"4306:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1595,"indexExpression":{"hexValue":"30","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4312:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4306:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":1596,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"4316:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1598,"indexExpression":{"hexValue":"31","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4322:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4316:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1590,"name":"SwappedOnSushiswap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"4264:18:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address,address)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4264:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1600,"nodeType":"EmitStatement","src":"4259:66:12"}]},"id":1602,"implemented":true,"kind":"function","modifiers":[],"name":"_swapOnSushiswap","nameLocation":"3809:16:12","nodeType":"FunctionDefinition","parameters":{"id":1555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"mutability":"mutable","name":"_path","nameLocation":"3852:5:12","nodeType":"VariableDeclaration","scope":1602,"src":"3835:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1548,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1549,"nodeType":"ArrayTypeName","src":"3835:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1552,"mutability":"mutable","name":"_amountIn","nameLocation":"3875:9:12","nodeType":"VariableDeclaration","scope":1602,"src":"3867:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1551,"name":"uint256","nodeType":"ElementaryTypeName","src":"3867:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1554,"mutability":"mutable","name":"_amountOut","nameLocation":"3902:10:12","nodeType":"VariableDeclaration","scope":1602,"src":"3894:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"3894:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3825:93:12"},"returnParameters":{"id":1556,"nodeType":"ParameterList","parameters":[],"src":"3928:0:12"},"scope":1603,"src":"3800:532:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1604,"src":"286:4048:12","usedErrors":[]}],"src":"39:4296:12"},"id":12}},"contracts":{"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"IAuthentication":{"abi":[{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getActionId(bytes4)":"851c1bb3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":\"IAuthentication\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol":{"ISignaturesValidator":{"abi":[{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getDomainSeparator()":"ed24911d","getNextNonce(address)":"90193b7c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the SignatureValidator helper, used to support meta-transactions.\",\"kind\":\"dev\",\"methods\":{\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":\"ISignaturesValidator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol":{"ITemporarilyPausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"inputs":[],"name":"getPausedState","outputs":[{"internalType":"bool","name":"paused","type":"bool"},{"internalType":"uint256","name":"pauseWindowEndTime","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodEndTime","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getPausedState()":"1c0de051"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the TemporarilyPausable helper.\",\"events\":{\"PausedStateChanged(bool)\":{\"details\":\"Emitted every time the pause state changes by `_setPaused`.\"}},\"kind\":\"dev\",\"methods\":{\"getPausedState()\":{\"details\":\"Returns the current paused state.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":\"ITemporarilyPausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol":{"IWETH":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","deposit()":"d0e30db0","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for WETH9. See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol":{"IAsset":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like types. This concept is unrelated to a Pool's Asset Managers.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":\"IAsset\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol":{"IAuthorizer":{"abi":[{"inputs":[{"internalType":"bytes32","name":"actionId","type":"bytes32"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"where","type":"address"}],"name":"canPerform","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"canPerform(bytes32,address,address)":"9be2a884"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"canPerform\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canPerform(bytes32,address,address)\":{\"details\":\"Returns true if `account` can perform the action described by `actionId` in the contract `where`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":\"IAuthorizer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol":{"IFlashLoanRecipient":{"abi":[{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"receiveFlashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"receiveFlashLoan(address[],uint256[],uint256[],bytes)":"f04f2707"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":\"IFlashLoanRecipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol":{"IProtocolFeesCollector":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newFlashLoanFeePercentage","type":"uint256"}],"name":"FlashLoanFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newSwapFeePercentage","type":"uint256"}],"name":"SwapFeePercentageChanged","type":"event"},{"inputs":[],"name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"getCollectedFeeAmounts","outputs":[{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFlashLoanFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSwapFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newFlashLoanFeePercentage","type":"uint256"}],"name":"setFlashLoanFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newSwapFeePercentage","type":"uint256"}],"name":"setSwapFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address","name":"recipient","type":"address"}],"name":"withdrawCollectedFees","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getAuthorizer()":"aaabadc5","getCollectedFeeAmounts(address[])":"e42abf35","getFlashLoanFeePercentage()":"d877845c","getSwapFeePercentage()":"55c67628","setFlashLoanFeePercentage(uint256)":"6b6b9f69","setSwapFeePercentage(uint256)":"38e9922e","vault()":"fbfa77cf","withdrawCollectedFees(address[],uint256[],address)":"6daefab6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFlashLoanFeePercentage\",\"type\":\"uint256\"}],\"name\":\"FlashLoanFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"SwapFeePercentageChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getCollectedFeeAmounts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlashLoanFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFlashLoanFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setFlashLoanFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawCollectedFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":\"IProtocolFeesCollector\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol":{"IVault":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IAuthorizer","name":"newAuthorizer","type":"address"}],"name":"AuthorizerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ExternalBalanceTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IFlashLoanRecipient","name":"recipient","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"feeAmount","type":"uint256"}],"name":"FlashLoan","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"int256","name":"delta","type":"int256"}],"name":"InternalBalanceChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":false,"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"indexed":false,"internalType":"int256[]","name":"deltas","type":"int256[]"},{"indexed":false,"internalType":"uint256[]","name":"protocolFeeAmounts","type":"uint256[]"}],"name":"PoolBalanceChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"assetManager","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"int256","name":"cashDelta","type":"int256"},{"indexed":false,"internalType":"int256","name":"managedDelta","type":"int256"}],"name":"PoolBalanceManaged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"poolAddress","type":"address"},{"indexed":false,"internalType":"enum IVault.PoolSpecialization","name":"specialization","type":"uint8"}],"name":"PoolRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayer","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"RelayerApprovalChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":false,"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"TokensDeregistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":false,"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"indexed":false,"internalType":"address[]","name":"assetManagers","type":"address[]"}],"name":"TokensRegistered","type":"event"},{"inputs":[],"name":"WETH","outputs":[{"internalType":"contract IWETH","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"components":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"uint256","name":"assetInIndex","type":"uint256"},{"internalType":"uint256","name":"assetOutIndex","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IVault.BatchSwapStep[]","name":"swaps","type":"tuple[]"},{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.FundManagement","name":"funds","type":"tuple"},{"internalType":"int256[]","name":"limits","type":"int256[]"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"batchSwap","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"deregisterTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address payable","name":"recipient","type":"address"},{"components":[{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.ExitPoolRequest","name":"request","type":"tuple"}],"name":"exitPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IFlashLoanRecipient","name":"recipient","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"flashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"getInternalBalance","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPausedState","outputs":[{"internalType":"bool","name":"paused","type":"bool"},{"internalType":"uint256","name":"pauseWindowEndTime","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodEndTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"enum IVault.PoolSpecialization","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"getPoolTokenInfo","outputs":[{"internalType":"uint256","name":"cash","type":"uint256"},{"internalType":"uint256","name":"managed","type":"uint256"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"address","name":"assetManager","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"name":"getPoolTokens","outputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getProtocolFeesCollector","outputs":[{"internalType":"contract IProtocolFeesCollector","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"relayer","type":"address"}],"name":"hasApprovedRelayer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"components":[{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"maxAmountsIn","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"}],"internalType":"struct IVault.JoinPoolRequest","name":"request","type":"tuple"}],"name":"joinPool","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"enum IVault.PoolBalanceOpKind","name":"kind","type":"uint8"},{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IVault.PoolBalanceOp[]","name":"ops","type":"tuple[]"}],"name":"managePoolBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"enum IVault.UserBalanceOpKind","name":"kind","type":"uint8"},{"internalType":"contract IAsset","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address payable","name":"recipient","type":"address"}],"internalType":"struct IVault.UserBalanceOp[]","name":"ops","type":"tuple[]"}],"name":"manageUserBalance","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"components":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"uint256","name":"assetInIndex","type":"uint256"},{"internalType":"uint256","name":"assetOutIndex","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IVault.BatchSwapStep[]","name":"swaps","type":"tuple[]"},{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.FundManagement","name":"funds","type":"tuple"}],"name":"queryBatchSwap","outputs":[{"internalType":"int256[]","name":"assetDeltas","type":"int256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum IVault.PoolSpecialization","name":"specialization","type":"uint8"}],"name":"registerPool","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"address[]","name":"assetManagers","type":"address[]"}],"name":"registerTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IAuthorizer","name":"newAuthorizer","type":"address"}],"name":"setAuthorizer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"paused","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setRelayerApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"internalType":"contract IAsset","name":"assetIn","type":"address"},{"internalType":"contract IAsset","name":"assetOut","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IVault.SingleSwap","name":"singleSwap","type":"tuple"},{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.FundManagement","name":"funds","type":"tuple"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"WETH()":"ad5c4648","batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)":"945bcec9","deregisterTokens(bytes32,address[])":"7d3aeb96","exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))":"8bdb3913","flashLoan(address,address[],uint256[],bytes)":"5c38449e","getActionId(bytes4)":"851c1bb3","getAuthorizer()":"aaabadc5","getDomainSeparator()":"ed24911d","getInternalBalance(address,address[])":"0f5a6efa","getNextNonce(address)":"90193b7c","getPausedState()":"1c0de051","getPool(bytes32)":"f6c00927","getPoolTokenInfo(bytes32,address)":"b05f8e48","getPoolTokens(bytes32)":"f94d4668","getProtocolFeesCollector()":"d2946c2b","hasApprovedRelayer(address,address)":"fec90d72","joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))":"b95cac28","managePoolBalance((uint8,bytes32,address,uint256)[])":"e6c46092","manageUserBalance((uint8,address,uint256,address,address)[])":"0e8e3e84","queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))":"f84d066e","registerPool(uint8)":"09b2760f","registerTokens(bytes32,address[],address[])":"66a9c7d2","setAuthorizer(address)":"058a628f","setPaused(bool)":"16c38b3c","setRelayerApproval(address,address,bool)":"fa6e671d","swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)":"52bbbe29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"AuthorizerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExternalBalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"InternalBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"deltas\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"protocolFeeAmounts\",\"type\":\"uint256[]\"}],\"name\":\"PoolBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cashDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"managedDelta\",\"type\":\"int256\"}],\"name\":\"PoolBalanceManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"RelayerApprovalChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"TokensDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"TokensRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"int256[]\",\"name\":\"limits\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"deregisterTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.ExitPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"exitPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getInternalBalance\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeesCollector\",\"outputs\":[{\"internalType\":\"contract IProtocolFeesCollector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"hasApprovedRelayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.JoinPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.PoolBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IVault.PoolBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"managePoolBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.UserBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct IVault.UserBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"manageUserBalance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"}],\"name\":\"queryBatchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"assetDeltas\",\"type\":\"int256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"registerTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"setAuthorizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setRelayerApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.SingleSwap\",\"name\":\"singleSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Full external interface for the Vault core contract - no external or public methods exist in the contract that don't override one of these declarations.\",\"events\":{\"AuthorizerChanged(address)\":{\"details\":\"Emitted when a new authorizer is set by `setAuthorizer`.\"},\"ExternalBalanceTransfer(address,address,address,uint256)\":{\"details\":\"Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\"},\"FlashLoan(address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual flash loan performed by `flashLoan`.\"},\"InternalBalanceChanged(address,address,int256)\":{\"details\":\"Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through interacting with Pools using Internal Balance. Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH address.\"},\"PausedStateChanged(bool)\":{\"details\":\"Emitted every time the pause state changes by `_setPaused`.\"},\"PoolBalanceChanged(bytes32,address,address[],int256[],uint256[])\":{\"details\":\"Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\"},\"PoolBalanceManaged(bytes32,address,address,int256,int256)\":{\"details\":\"Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\"},\"PoolRegistered(bytes32,address,uint8)\":{\"details\":\"Emitted when a Pool is registered by calling `registerPool`.\"},\"RelayerApprovalChanged(address,address,bool)\":{\"details\":\"Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\"},\"Swap(bytes32,address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual swap performed by `swap` or `batchSwap`.\"},\"TokensDeregistered(bytes32,address[])\":{\"details\":\"Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\"},\"TokensRegistered(bytes32,address[],address[])\":{\"details\":\"Emitted when a Pool registers tokens by calling `registerTokens`.\"}},\"kind\":\"dev\",\"methods\":{\"WETH()\":{\"details\":\"Returns the Vault's WETH instance.\"},\"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)\":{\"details\":\"Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events.\"},\"deregisterTokens(bytes32,address[])\":{\"details\":\"Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event.\"},\"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event.\"},\"flashLoan(address,address[],uint256[],bytes)\":{\"details\":\"Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events.\"},\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"getAuthorizer()\":{\"details\":\"Returns the Vault's Authorizer.\"},\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getInternalBalance(address,address[])\":{\"details\":\"Returns `user`'s Internal Balance for a set of tokens.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"},\"getPausedState()\":{\"details\":\"Returns the current paused state.\"},\"getPool(bytes32)\":{\"details\":\"Returns a Pool's contract address and specialization setting.\"},\"getPoolTokenInfo(bytes32,address)\":{\"details\":\"Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager.\"},\"getPoolTokens(bytes32)\":{\"details\":\"Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead.\"},\"getProtocolFeesCollector()\":{\"details\":\"Returns the current protocol fee module.\"},\"hasApprovedRelayer(address,address)\":{\"details\":\"Returns true if `user` has approved `relayer` to act as a relayer for them.\"},\"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event.\"},\"managePoolBalance((uint8,bytes32,address,uint256)[])\":{\"details\":\"Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\"},\"manageUserBalance((uint8,address,uint256,address,address)[])\":{\"details\":\"Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\"},\"queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))\":{\"details\":\"Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction.\"},\"registerPool(uint8)\":{\"details\":\"Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event.\"},\"registerTokens(bytes32,address[],address[])\":{\"details\":\"Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event.\"},\"setAuthorizer(address)\":{\"details\":\"Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event.\"},\"setPaused(bool)\":{\"details\":\"Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited.\"},\"setRelayerApproval(address,address,bool)\":{\"details\":\"Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event.\"},\"swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)\":{\"details\":\"Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":\"IVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]}},\"version\":1}"}},"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol":{"IUniswapV2Router01":{"abi":[{"inputs":[],"name":"WETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountADesired","type":"uint256"},{"internalType":"uint256","name":"amountBDesired","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountTokenDesired","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsIn","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsOut","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"reserveA","type":"uint256"},{"internalType":"uint256","name":"reserveB","type":"uint256"}],"name":"quote","outputs":[{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityETHWithPermit","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityWithPermit","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapETHForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"WETH()":"ad5c4648","addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)":"e8e33700","addLiquidityETH(address,uint256,uint256,uint256,address,uint256)":"f305d719","factory()":"c45a0155","getAmountIn(uint256,uint256,uint256)":"85f8c259","getAmountOut(uint256,uint256,uint256)":"054d50d4","getAmountsIn(uint256,address[])":"1f00ca74","getAmountsOut(uint256,address[])":"d06ca61f","quote(uint256,uint256,uint256)":"ad615dec","removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)":"baa2abde","removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)":"02751cec","removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"ded9382a","removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"2195995c","swapETHForExactTokens(uint256,address[],address,uint256)":"fb3bdb41","swapExactETHForTokens(uint256,address[],address,uint256)":"7ff36ab5","swapExactTokensForETH(uint256,uint256,address[],address,uint256)":"18cbafe5","swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":"38ed1739","swapTokensForExactETH(uint256,uint256,address[],address,uint256)":"4a25d94a","swapTokensForExactTokens(uint256,uint256,address[],address,uint256)":"8803dbee"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}"}},"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol":{"IUniswapV2Router02":{"abi":[{"inputs":[],"name":"WETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountADesired","type":"uint256"},{"internalType":"uint256","name":"amountBDesired","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountTokenDesired","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsIn","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsOut","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"reserveA","type":"uint256"},{"internalType":"uint256","name":"reserveB","type":"uint256"}],"name":"quote","outputs":[{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidityETHSupportingFeeOnTransferTokens","outputs":[{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityETHWithPermit","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens","outputs":[{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityWithPermit","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapETHForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokensSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETHSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokensSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"WETH()":"ad5c4648","addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)":"e8e33700","addLiquidityETH(address,uint256,uint256,uint256,address,uint256)":"f305d719","factory()":"c45a0155","getAmountIn(uint256,uint256,uint256)":"85f8c259","getAmountOut(uint256,uint256,uint256)":"054d50d4","getAmountsIn(uint256,address[])":"1f00ca74","getAmountsOut(uint256,address[])":"d06ca61f","quote(uint256,uint256,uint256)":"ad615dec","removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)":"baa2abde","removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)":"02751cec","removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)":"af2979eb","removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"ded9382a","removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"5b0d5984","removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"2195995c","swapETHForExactTokens(uint256,address[],address,uint256)":"fb3bdb41","swapExactETHForTokens(uint256,address[],address,uint256)":"7ff36ab5","swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)":"b6f9de95","swapExactTokensForETH(uint256,uint256,address[],address,uint256)":"18cbafe5","swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)":"791ac947","swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":"38ed1739","swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)":"5c11d795","swapTokensForExactETH(uint256,uint256,address[],address,uint256)":"4a25d94a","swapTokensForExactTokens(uint256,uint256,address[],address,uint256)":"8803dbee"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]}},\"version\":1}"}},"contracts/Arbitrage.sol":{"Arbitrage":{"abi":[{"inputs":[{"internalType":"address","name":"_sRouter","type":"address"},{"internalType":"address","name":"_uRouter","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"LoanedReturned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"},{"indexed":false,"internalType":"address","name":"path0","type":"address"},{"indexed":false,"internalType":"address","name":"path1","type":"address"}],"name":"SwappedOnSushiswap","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"},{"indexed":false,"internalType":"address","name":"path0","type":"address"},{"indexed":false,"internalType":"address","name":"path1","type":"address"}],"name":"SwappedOnUniswap","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"TradeExecuted","type":"event"},{"inputs":[{"internalType":"bool","name":"_startOnUniswap","type":"bool"},{"internalType":"address","name":"_token0","type":"address"},{"internalType":"address","name":"_token1","type":"address"},{"internalType":"uint256","name":"_flashAmount","type":"uint256"}],"name":"executeTrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"receiveFlashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sRouter","outputs":[{"internalType":"contract IUniswapV2Router02","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uRouter","outputs":[{"internalType":"contract IUniswapV2Router02","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1241":{"entryPoint":null,"id":1241,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":314,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":337,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":268,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":236,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":231,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":288,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1355:13","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:13","statements":[{"nodeType":"YulAssignment","src":"57:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:13"},"nodeType":"YulFunctionCall","src":"67:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:13","type":""}],"src":"7:75:13"},{"body":{"nodeType":"YulBlock","src":"177:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:13"},"nodeType":"YulFunctionCall","src":"187:12:13"},"nodeType":"YulExpressionStatement","src":"187:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:13"},{"body":{"nodeType":"YulBlock","src":"300:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:13"},"nodeType":"YulFunctionCall","src":"310:12:13"},"nodeType":"YulExpressionStatement","src":"310:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:13"},{"body":{"nodeType":"YulBlock","src":"379:81:13","statements":[{"nodeType":"YulAssignment","src":"389:65:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:13"},"nodeType":"YulFunctionCall","src":"400:54:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:13"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:13","type":""}],"src":"334:126:13"},{"body":{"nodeType":"YulBlock","src":"511:51:13","statements":[{"nodeType":"YulAssignment","src":"521:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:13"},"nodeType":"YulFunctionCall","src":"532:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:13"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:13","type":""}],"src":"466:96:13"},{"body":{"nodeType":"YulBlock","src":"611:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:13"},"nodeType":"YulFunctionCall","src":"670:12:13"},"nodeType":"YulExpressionStatement","src":"670:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:13"},"nodeType":"YulFunctionCall","src":"641:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:13"},"nodeType":"YulFunctionCall","src":"631:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:13"},"nodeType":"YulFunctionCall","src":"624:43:13"},"nodeType":"YulIf","src":"621:63:13"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:13","type":""}],"src":"568:122:13"},{"body":{"nodeType":"YulBlock","src":"759:80:13","statements":[{"nodeType":"YulAssignment","src":"769:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:13"},"nodeType":"YulFunctionCall","src":"778:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:13"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:13"},"nodeType":"YulFunctionCall","src":"800:33:13"},"nodeType":"YulExpressionStatement","src":"800:33:13"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:13","type":""}],"src":"696:143:13"},{"body":{"nodeType":"YulBlock","src":"939:413:13","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:13"},"nodeType":"YulFunctionCall","src":"987:79:13"},"nodeType":"YulExpressionStatement","src":"987:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:13"},"nodeType":"YulFunctionCall","src":"956:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:13"},"nodeType":"YulFunctionCall","src":"952:32:13"},"nodeType":"YulIf","src":"949:119:13"},{"nodeType":"YulBlock","src":"1078:128:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:13","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:13"},"nodeType":"YulFunctionCall","src":"1164:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:13"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:13"},"nodeType":"YulFunctionCall","src":"1132:64:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:13"}]}]},{"nodeType":"YulBlock","src":"1216:129:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:13","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:13"},"nodeType":"YulFunctionCall","src":"1303:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:13"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:13"},"nodeType":"YulFunctionCall","src":"1271:64:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:13","type":""}],"src":"845:507:13"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1D9C CODESIZE SUB DUP1 PUSH3 0x1D9C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x151 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x198 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x119 DUP3 PUSH3 0xEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x12B DUP2 PUSH3 0x10C JUMP JUMPDEST DUP2 EQ PUSH3 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x14B DUP2 PUSH3 0x120 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x16B JUMPI PUSH3 0x16A PUSH3 0xE7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x17B DUP6 DUP3 DUP7 ADD PUSH3 0x13A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x18E DUP6 DUP3 DUP7 ADD PUSH3 0x13A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1BC3 PUSH3 0x1D9 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x313 ADD MSTORE DUP2 DUP2 PUSH2 0x962 ADD MSTORE PUSH2 0xA23 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0xF0 ADD MSTORE DUP2 DUP2 PUSH2 0xB89 ADD MSTORE PUSH2 0xC4A ADD MSTORE PUSH2 0x1BC3 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x17C64B0 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x1395DD23 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x5CF39049 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xF04F2707 EQ PUSH2 0xD2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8F SWAP2 SWAP1 PUSH2 0xED1 JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9E PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x129 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x157 JUMPI PUSH2 0x156 PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x185 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x19D JUMPI PUSH2 0x19C PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F4 JUMPI PUSH2 0x1F3 PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x222 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x23A JUMPI PUSH2 0x239 PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH20 0xBA12222222228D8BA445958A75A0704D566BF2C8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C38449E ADDRESS DUP5 DUP5 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x299 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xBC08154B32C714572D2B71DE99AA454AC3DC272FA8314B91D111624F0F97A81C CALLER DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x300 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH20 0xBA12222222228D8BA445958A75A0704D566BF2C8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x16F3 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x401 JUMPI PUSH2 0x400 PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x42F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x447 JUMPI PUSH2 0x446 PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x496 JUMPI PUSH2 0x495 PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 ISZERO PUSH2 0x609 JUMPI PUSH2 0x4E2 DUP2 DUP7 PUSH1 0x0 PUSH2 0x929 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4F7 JUMPI PUSH2 0x4F6 PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x546 JUMPI PUSH2 0x545 PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x604 DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FE SWAP2 SWAP1 PUSH2 0x175B JUMP JUMPDEST DUP8 PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x738 JUMP JUMPDEST PUSH2 0x615 DUP2 DUP7 PUSH1 0x0 PUSH2 0xB50 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x62A JUMPI PUSH2 0x629 PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x679 JUMPI PUSH2 0x678 PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x737 DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x70D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x731 SWAP2 SWAP1 PUSH2 0x175B JUMP JUMPDEST DUP8 PUSH2 0x929 JUMP JUMPDEST JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH20 0xBA12222222228D8BA445958A75A0704D566BF2C8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x787 SWAP3 SWAP2 SWAP1 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CA SWAP2 SWAP1 PUSH2 0x17B1 JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x841 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x85E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89F SWAP3 SWAP2 SWAP1 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x17B1 JUMP JUMPDEST POP PUSH32 0x3931DE709F834E3C094757D8879EA96BACC21F497AF9F966091E950137D6B775 CALLER DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0x916 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x93D JUMPI PUSH2 0x93C PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99F SWAP3 SWAP2 SWAP1 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E2 SWAP2 SWAP1 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0xA21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA18 SWAP1 PUSH2 0x1872 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x38ED1739 DUP4 DUP4 DUP7 ADDRESS PUSH2 0x4B0 TIMESTAMP PUSH2 0xA6F SWAP2 SWAP1 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAAE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD7 SWAP2 SWAP1 PUSH2 0x1A93 JUMP JUMPDEST POP PUSH32 0xBA449DEC4E0CDB46F4C0DF435AEBA7A018F35F2CDC4F3B160410BE52DBBE207C DUP3 DUP3 DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB0F JUMPI PUSH2 0xB0E PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xB2B JUMPI PUSH2 0xB2A PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xB43 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ADC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB64 JUMPI PUSH2 0xB63 PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC6 SWAP3 SWAP2 SWAP1 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0xC48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3F SWAP1 PUSH2 0x1B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x38ED1739 DUP4 DUP4 DUP7 ADDRESS PUSH2 0x4B0 TIMESTAMP PUSH2 0xC96 SWAP2 SWAP1 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB6 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCFE SWAP2 SWAP1 PUSH2 0x1A93 JUMP JUMPDEST POP PUSH32 0xE2986CB1B1C90B4738B5E68AC912CC7755496A2534D44578990AF36848D6E5DA DUP3 DUP3 DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD36 JUMPI PUSH2 0xD35 PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xD52 JUMPI PUSH2 0xD51 PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xD6A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ADC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBC PUSH2 0xDB7 PUSH2 0xDB2 DUP5 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0xD97 JUMP JUMPDEST PUSH2 0xD77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCE DUP3 PUSH2 0xDA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE0 DUP3 PUSH2 0xDC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF0 DUP2 PUSH2 0xDD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE0B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE3A DUP2 PUSH2 0xE25 JUMP JUMPDEST DUP2 EQ PUSH2 0xE45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE57 DUP2 PUSH2 0xE31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE68 DUP3 PUSH2 0xD77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE78 DUP2 PUSH2 0xE5D JUMP JUMPDEST DUP2 EQ PUSH2 0xE83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE95 DUP2 PUSH2 0xE6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAE DUP2 PUSH2 0xE9B JUMP JUMPDEST DUP2 EQ PUSH2 0xEB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xECB DUP2 PUSH2 0xEA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEEB JUMPI PUSH2 0xEEA PUSH2 0xE1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEF9 DUP8 DUP3 DUP9 ADD PUSH2 0xE48 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xF0A DUP8 DUP3 DUP9 ADD PUSH2 0xE86 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xF1B DUP8 DUP3 DUP9 ADD PUSH2 0xE86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xF2C DUP8 DUP3 DUP9 ADD PUSH2 0xEBC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0xF41 DUP2 PUSH2 0xE5D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF5C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xFB0 DUP3 PUSH2 0xF67 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xFCF JUMPI PUSH2 0xFCE PUSH2 0xF78 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE2 PUSH2 0xE11 JUMP JUMPDEST SWAP1 POP PUSH2 0xFEE DUP3 DUP3 PUSH2 0xFA7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x100E JUMPI PUSH2 0x100D PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x102F DUP3 PUSH2 0xE5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x103F DUP2 PUSH2 0x1024 JUMP JUMPDEST DUP2 EQ PUSH2 0x104A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x105C DUP2 PUSH2 0x1036 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1075 PUSH2 0x1070 DUP5 PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0xFD8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1098 JUMPI PUSH2 0x1097 PUSH2 0x101F JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10C1 JUMPI DUP1 PUSH2 0x10AD DUP9 DUP3 PUSH2 0x104D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x109A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10E0 JUMPI PUSH2 0x10DF PUSH2 0xF62 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x10F0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1062 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1114 JUMPI PUSH2 0x1113 PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1138 PUSH2 0x1133 DUP5 PUSH2 0x10F9 JUMP JUMPDEST PUSH2 0xFD8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x115B JUMPI PUSH2 0x115A PUSH2 0x101F JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1184 JUMPI DUP1 PUSH2 0x1170 DUP9 DUP3 PUSH2 0xEBC JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x115D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11A3 JUMPI PUSH2 0x11A2 PUSH2 0xF62 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11B3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1125 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x11DC JUMPI PUSH2 0x11DB PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH2 0x11E5 DUP3 PUSH2 0xF67 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1214 PUSH2 0x120F DUP5 PUSH2 0x11C1 JUMP JUMPDEST PUSH2 0xFD8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1230 JUMPI PUSH2 0x122F PUSH2 0x11BC JUMP JUMPDEST JUMPDEST PUSH2 0x123B DUP5 DUP3 DUP6 PUSH2 0x11F2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1258 JUMPI PUSH2 0x1257 PUSH2 0xF62 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1268 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1201 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x128B JUMPI PUSH2 0x128A PUSH2 0xE1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12A9 JUMPI PUSH2 0x12A8 PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH2 0x12B5 DUP8 DUP3 DUP9 ADD PUSH2 0x10CB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12D6 JUMPI PUSH2 0x12D5 PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH2 0x12E2 DUP8 DUP3 DUP9 ADD PUSH2 0x118E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1303 JUMPI PUSH2 0x1302 PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH2 0x130F DUP8 DUP3 DUP9 ADD PUSH2 0x118E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1330 JUMPI PUSH2 0x132F PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH2 0x133C DUP8 DUP3 DUP9 ADD PUSH2 0x1243 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1351 DUP2 PUSH2 0xE25 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x136C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x1379 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x1386 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF38 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13C8 DUP3 PUSH2 0xDC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13D8 DUP2 PUSH2 0x13BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1415 DUP3 PUSH2 0xDC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1425 DUP2 PUSH2 0x140A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1437 DUP4 DUP4 PUSH2 0x141C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x145B DUP3 PUSH2 0x13DE JUMP JUMPDEST PUSH2 0x1465 DUP2 DUP6 PUSH2 0x13E9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1470 DUP4 PUSH2 0x13FA JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14A1 JUMPI DUP2 MLOAD PUSH2 0x1488 DUP9 DUP3 PUSH2 0x142B JUMP JUMPDEST SWAP8 POP PUSH2 0x1493 DUP4 PUSH2 0x1443 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1474 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E3 DUP2 PUSH2 0xE9B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F5 DUP4 DUP4 PUSH2 0x14DA JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1519 DUP3 PUSH2 0x14AE JUMP JUMPDEST PUSH2 0x1523 DUP2 DUP6 PUSH2 0x14B9 JUMP JUMPDEST SWAP4 POP PUSH2 0x152E DUP4 PUSH2 0x14CA JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x155F JUMPI DUP2 MLOAD PUSH2 0x1546 DUP9 DUP3 PUSH2 0x14E9 JUMP JUMPDEST SWAP8 POP PUSH2 0x1551 DUP4 PUSH2 0x1501 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1532 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15A6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x158B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15BD DUP3 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x15C7 DUP2 DUP6 PUSH2 0x1577 JUMP JUMPDEST SWAP4 POP PUSH2 0x15D7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x15E0 DUP2 PUSH2 0xF67 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1600 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x13CF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1612 DUP2 DUP7 PUSH2 0x1450 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1626 DUP2 DUP6 PUSH2 0x150E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x163A DUP2 DUP5 PUSH2 0x15B2 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x164E DUP2 PUSH2 0xE9B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1669 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x1676 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x1683 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1645 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1695 DUP2 DUP5 PUSH2 0x15B2 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16AF DUP2 PUSH2 0xE31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C0 DUP3 PUSH2 0xD77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D0 DUP2 PUSH2 0x16B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x16DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16ED DUP2 PUSH2 0x16C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x170C JUMPI PUSH2 0x170B PUSH2 0xE1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x171A DUP7 DUP3 DUP8 ADD PUSH2 0x16A0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x172B DUP7 DUP3 DUP8 ADD PUSH2 0x16DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x173C DUP7 DUP3 DUP8 ADD PUSH2 0x16DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1755 DUP2 PUSH2 0xEA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1771 JUMPI PUSH2 0x1770 PUSH2 0xE1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x177F DUP5 DUP3 DUP6 ADD PUSH2 0x1746 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x179D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x17AA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1645 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C7 JUMPI PUSH2 0x17C6 PUSH2 0xE1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17D5 DUP5 DUP3 DUP6 ADD PUSH2 0x16A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17F3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x1800 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x180D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1645 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x556E697377617020617070726F76616C206661696C65642E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x185C PUSH1 0x18 DUP4 PUSH2 0x1815 JUMP JUMPDEST SWAP2 POP PUSH2 0x1867 DUP3 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x188B DUP2 PUSH2 0x184F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18CC DUP3 PUSH2 0xE9B JUMP JUMPDEST SWAP2 POP PUSH2 0x18D7 DUP4 PUSH2 0xE9B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x18EF JUMPI PUSH2 0x18EE PUSH2 0x1892 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1919 DUP2 PUSH2 0xE5D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192B DUP4 DUP4 PUSH2 0x1910 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194F DUP3 PUSH2 0x18F5 JUMP JUMPDEST PUSH2 0x1959 DUP2 DUP6 PUSH2 0x13E9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1964 DUP4 PUSH2 0x1900 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1995 JUMPI DUP2 MLOAD PUSH2 0x197C DUP9 DUP3 PUSH2 0x191F JUMP JUMPDEST SWAP8 POP PUSH2 0x1987 DUP4 PUSH2 0x1937 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1968 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x19B7 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1645 JUMP JUMPDEST PUSH2 0x19C4 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1645 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x19D6 DUP2 DUP7 PUSH2 0x1944 JUMP JUMPDEST SWAP1 POP PUSH2 0x19E5 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x19F2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1645 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0F PUSH2 0x1A0A DUP5 PUSH2 0x10F9 JUMP JUMPDEST PUSH2 0xFD8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1A32 JUMPI PUSH2 0x1A31 PUSH2 0x101F JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A5B JUMPI DUP1 PUSH2 0x1A47 DUP9 DUP3 PUSH2 0x1746 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A34 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A7A JUMPI PUSH2 0x1A79 PUSH2 0xF62 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1A8A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x19FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AA9 JUMPI PUSH2 0x1AA8 PUSH2 0xE1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AC7 JUMPI PUSH2 0x1AC6 PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH2 0x1AD3 DUP5 DUP3 DUP6 ADD PUSH2 0x1A65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1AF1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1645 JUMP JUMPDEST PUSH2 0x1AFE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1645 JUMP JUMPDEST PUSH2 0x1B0B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x1B18 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xF38 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x53757368697377617020617070726F76616C206661696C65642E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B57 PUSH1 0x1A DUP4 PUSH2 0x1815 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B62 DUP3 PUSH2 0x1B21 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B86 DUP2 PUSH2 0x1B4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO 0xD9 0x4B 0xBA 0x24 DUP6 SWAP2 ADDRESS 0xA5 0xC9 PUSH3 0xB07A47 PUSH3 0x7F9722 0x5C COINBASE 0xEB 0x29 SWAP15 PUSH12 0xB7E9B672211F72D464736F6C PUSH4 0x43000812 STOP CALLER ","sourceMap":"286:4048:12:-:0;;;1020:203;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1107:8;1078:38;;;;;;;;;;1168:8;1139:38;;;;;;;;;;1206:10;1198:5;;:18;;;;;;;;;;;;;;;;;;1020:203;;286:4048;;88:117:13;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;286:4048:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_swapOnSushiswap_1602":{"entryPoint":2896,"id":1602,"parameterSlots":3,"returnSlots":0},"@_swapOnUniswap_1547":{"entryPoint":2345,"id":1547,"parameterSlots":3,"returnSlots":0},"@executeTrade_1316":{"entryPoint":274,"id":1316,"parameterSlots":4,"returnSlots":0},"@owner_1178":{"entryPoint":821,"id":1178,"parameterSlots":0,"returnSlots":0},"@receiveFlashLoan_1492":{"entryPoint":857,"id":1492,"parameterSlots":4,"returnSlots":0},"@sRouter_1173":{"entryPoint":238,"id":1173,"parameterSlots":0,"returnSlots":0},"@uRouter_1176":{"entryPoint":785,"id":1176,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr":{"entryPoint":4194,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4389,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory":{"entryPoint":6652,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":4609,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3718,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable_fromMemory":{"entryPoint":5854,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr":{"entryPoint":4299,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4494,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory":{"entryPoint":6757,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":3656,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":5792,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":4675,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IERC20_$140":{"entryPoint":4173,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3772,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":5958,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":4721,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory":{"entryPoint":6803,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":6065,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_boolt_address_payablet_address_payable_fromMemory":{"entryPoint":5875,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_boolt_addresst_addresst_uint256":{"entryPoint":3793,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":5979,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":6431,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_contract$_IERC20_$140_to_t_address":{"entryPoint":5163,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":5353,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":6416,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3896,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":6468,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":5200,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":5390,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4936,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":5554,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_Arbitrage_$1603_to_t_address_fromStack":{"entryPoint":5071,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IERC20_$140_to_t_address":{"entryPoint":5148,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IUniswapV2Router02_$1157_to_t_address_fromStack":{"entryPoint":3559,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_4c473bc87957af9d2b3ccbdbf6af1e2a16250a17e90f0632562ea9f4ae9722ef_to_t_string_memory_ptr_fromStack":{"entryPoint":6223,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_919058e86b9a945d55abb823a3d9c26bfcafca6844acffc0235f4374fc2677eb_to_t_string_memory_ptr_fromStack":{"entryPoint":6986,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":5338,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5701,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3911,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":6110,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5716,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":6024,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool_t_address_t_address__to_t_bool_t_address_t_address__fromStack_reversed":{"entryPoint":4951,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_contract$_Arbitrage_$1603_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5611,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_IUniswapV2Router02_$1157__to_t_address__fromStack_reversed":{"entryPoint":3574,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4c473bc87957af9d2b3ccbdbf6af1e2a16250a17e90f0632562ea9f4ae9722ef__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6258,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_919058e86b9a945d55abb823a3d9c26bfcafca6844acffc0235f4374fc2677eb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7021,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_address_t_address__to_t_uint256_t_uint256_t_address_t_address__fromStack_reversed":{"entryPoint":6876,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed":{"entryPoint":6562,"id":null,"parameterSlots":6,"returnSlots":1},"allocate_memory":{"entryPoint":4056,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3601,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr":{"entryPoint":4083,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4345,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":4545,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6400,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr":{"entryPoint":5114,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5322,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6389,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr":{"entryPoint":5086,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5294,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":5484,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6455,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr":{"entryPoint":5187,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5377,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":5097,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":5305,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":5495,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6165,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6337,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3677,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":5813,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3621,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$140":{"entryPoint":4132,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3447,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3739,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_Arbitrage_$1603_to_t_address":{"entryPoint":5053,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$140_to_t_address":{"entryPoint":5130,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IUniswapV2Router02_$1157_to_t_address":{"entryPoint":3541,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":3523,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":3489,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":4594,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5512,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":4007,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":3479,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6290,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5006,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3960,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3938,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":4127,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":4540,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3616,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3611,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3943,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_4c473bc87957af9d2b3ccbdbf6af1e2a16250a17e90f0632562ea9f4ae9722ef":{"entryPoint":6182,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_919058e86b9a945d55abb823a3d9c26bfcafca6844acffc0235f4374fc2677eb":{"entryPoint":6945,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3695,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":5831,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":3633,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20_$140":{"entryPoint":4150,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3749,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:28335:13","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:13","statements":[{"nodeType":"YulAssignment","src":"62:65:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:13"},"nodeType":"YulFunctionCall","src":"73:54:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:13"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:13","type":""}],"src":"7:126:13"},{"body":{"nodeType":"YulBlock","src":"171:28:13","statements":[{"nodeType":"YulAssignment","src":"181:12:13","value":{"name":"value","nodeType":"YulIdentifier","src":"188:5:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"181:3:13"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"157:5:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"167:3:13","type":""}],"src":"139:60:13"},{"body":{"nodeType":"YulBlock","src":"265:82:13","statements":[{"nodeType":"YulAssignment","src":"275:66:13","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"333:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"315:17:13"},"nodeType":"YulFunctionCall","src":"315:24:13"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"306:8:13"},"nodeType":"YulFunctionCall","src":"306:34:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"288:17:13"},"nodeType":"YulFunctionCall","src":"288:53:13"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"275:9:13"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"245:5:13","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"255:9:13","type":""}],"src":"205:142:13"},{"body":{"nodeType":"YulBlock","src":"413:66:13","statements":[{"nodeType":"YulAssignment","src":"423:50:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"467:5:13"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"436:30:13"},"nodeType":"YulFunctionCall","src":"436:37:13"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"423:9:13"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"393:5:13","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"403:9:13","type":""}],"src":"353:126:13"},{"body":{"nodeType":"YulBlock","src":"572:66:13","statements":[{"nodeType":"YulAssignment","src":"582:50:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:13"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"595:30:13"},"nodeType":"YulFunctionCall","src":"595:37:13"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"582:9:13"}]}]},"name":"convert_t_contract$_IUniswapV2Router02_$1157_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"552:5:13","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"562:9:13","type":""}],"src":"485:153:13"},{"body":{"nodeType":"YulBlock","src":"736:93:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"753:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"816:5:13"}],"functionName":{"name":"convert_t_contract$_IUniswapV2Router02_$1157_to_t_address","nodeType":"YulIdentifier","src":"758:57:13"},"nodeType":"YulFunctionCall","src":"758:64:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"746:6:13"},"nodeType":"YulFunctionCall","src":"746:77:13"},"nodeType":"YulExpressionStatement","src":"746:77:13"}]},"name":"abi_encode_t_contract$_IUniswapV2Router02_$1157_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"724:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"731:3:13","type":""}],"src":"644:185:13"},{"body":{"nodeType":"YulBlock","src":"960:151:13","statements":[{"nodeType":"YulAssignment","src":"970:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"982:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"993:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"978:3:13"},"nodeType":"YulFunctionCall","src":"978:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"970:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1077:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1090:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1101:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1086:3:13"},"nodeType":"YulFunctionCall","src":"1086:17:13"}],"functionName":{"name":"abi_encode_t_contract$_IUniswapV2Router02_$1157_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1006:70:13"},"nodeType":"YulFunctionCall","src":"1006:98:13"},"nodeType":"YulExpressionStatement","src":"1006:98:13"}]},"name":"abi_encode_tuple_t_contract$_IUniswapV2Router02_$1157__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"932:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"944:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"955:4:13","type":""}],"src":"835:276:13"},{"body":{"nodeType":"YulBlock","src":"1157:35:13","statements":[{"nodeType":"YulAssignment","src":"1167:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1177:5:13"},"nodeType":"YulFunctionCall","src":"1177:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1167:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1150:6:13","type":""}],"src":"1117:75:13"},{"body":{"nodeType":"YulBlock","src":"1287:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1304:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1307:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1297:6:13"},"nodeType":"YulFunctionCall","src":"1297:12:13"},"nodeType":"YulExpressionStatement","src":"1297:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1198:117:13"},{"body":{"nodeType":"YulBlock","src":"1410:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1427:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1430:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1420:6:13"},"nodeType":"YulFunctionCall","src":"1420:12:13"},"nodeType":"YulExpressionStatement","src":"1420:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1321:117:13"},{"body":{"nodeType":"YulBlock","src":"1486:48:13","statements":[{"nodeType":"YulAssignment","src":"1496:32:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1521:5:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1514:6:13"},"nodeType":"YulFunctionCall","src":"1514:13:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1507:6:13"},"nodeType":"YulFunctionCall","src":"1507:21:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1496:7:13"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1468:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1478:7:13","type":""}],"src":"1444:90:13"},{"body":{"nodeType":"YulBlock","src":"1580:76:13","statements":[{"body":{"nodeType":"YulBlock","src":"1634:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1643:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1646:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1636:6:13"},"nodeType":"YulFunctionCall","src":"1636:12:13"},"nodeType":"YulExpressionStatement","src":"1636:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1603:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1625:5:13"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1610:14:13"},"nodeType":"YulFunctionCall","src":"1610:21:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1600:2:13"},"nodeType":"YulFunctionCall","src":"1600:32:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1593:6:13"},"nodeType":"YulFunctionCall","src":"1593:40:13"},"nodeType":"YulIf","src":"1590:60:13"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1573:5:13","type":""}],"src":"1540:116:13"},{"body":{"nodeType":"YulBlock","src":"1711:84:13","statements":[{"nodeType":"YulAssignment","src":"1721:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1743:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1730:12:13"},"nodeType":"YulFunctionCall","src":"1730:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1721:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1783:5:13"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"1759:23:13"},"nodeType":"YulFunctionCall","src":"1759:30:13"},"nodeType":"YulExpressionStatement","src":"1759:30:13"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1689:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"1697:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1705:5:13","type":""}],"src":"1662:133:13"},{"body":{"nodeType":"YulBlock","src":"1846:51:13","statements":[{"nodeType":"YulAssignment","src":"1856:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1885:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1867:17:13"},"nodeType":"YulFunctionCall","src":"1867:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1856:7:13"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1828:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1838:7:13","type":""}],"src":"1801:96:13"},{"body":{"nodeType":"YulBlock","src":"1946:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"2003:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2012:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2015:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2005:6:13"},"nodeType":"YulFunctionCall","src":"2005:12:13"},"nodeType":"YulExpressionStatement","src":"2005:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1969:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1994:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1976:17:13"},"nodeType":"YulFunctionCall","src":"1976:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1966:2:13"},"nodeType":"YulFunctionCall","src":"1966:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1959:6:13"},"nodeType":"YulFunctionCall","src":"1959:43:13"},"nodeType":"YulIf","src":"1956:63:13"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1939:5:13","type":""}],"src":"1903:122:13"},{"body":{"nodeType":"YulBlock","src":"2083:87:13","statements":[{"nodeType":"YulAssignment","src":"2093:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2115:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2102:12:13"},"nodeType":"YulFunctionCall","src":"2102:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2093:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2158:5:13"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2131:26:13"},"nodeType":"YulFunctionCall","src":"2131:33:13"},"nodeType":"YulExpressionStatement","src":"2131:33:13"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2061:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2069:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2077:5:13","type":""}],"src":"2031:139:13"},{"body":{"nodeType":"YulBlock","src":"2221:32:13","statements":[{"nodeType":"YulAssignment","src":"2231:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"2242:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2231:7:13"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2203:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2213:7:13","type":""}],"src":"2176:77:13"},{"body":{"nodeType":"YulBlock","src":"2302:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"2359:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2368:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2371:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2361:6:13"},"nodeType":"YulFunctionCall","src":"2361:12:13"},"nodeType":"YulExpressionStatement","src":"2361:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2325:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2350:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2332:17:13"},"nodeType":"YulFunctionCall","src":"2332:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2322:2:13"},"nodeType":"YulFunctionCall","src":"2322:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2315:6:13"},"nodeType":"YulFunctionCall","src":"2315:43:13"},"nodeType":"YulIf","src":"2312:63:13"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2295:5:13","type":""}],"src":"2259:122:13"},{"body":{"nodeType":"YulBlock","src":"2439:87:13","statements":[{"nodeType":"YulAssignment","src":"2449:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2471:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2458:12:13"},"nodeType":"YulFunctionCall","src":"2458:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2449:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2514:5:13"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2487:26:13"},"nodeType":"YulFunctionCall","src":"2487:33:13"},"nodeType":"YulExpressionStatement","src":"2487:33:13"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2417:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2425:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2433:5:13","type":""}],"src":"2387:139:13"},{"body":{"nodeType":"YulBlock","src":"2646:645:13","statements":[{"body":{"nodeType":"YulBlock","src":"2693:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2695:77:13"},"nodeType":"YulFunctionCall","src":"2695:79:13"},"nodeType":"YulExpressionStatement","src":"2695:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2667:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"2676:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2663:3:13"},"nodeType":"YulFunctionCall","src":"2663:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"2688:3:13","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2659:3:13"},"nodeType":"YulFunctionCall","src":"2659:33:13"},"nodeType":"YulIf","src":"2656:120:13"},{"nodeType":"YulBlock","src":"2786:114:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2801:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2815:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2805:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2830:60:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2862:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2873:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2858:3:13"},"nodeType":"YulFunctionCall","src":"2858:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2882:7:13"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"2840:17:13"},"nodeType":"YulFunctionCall","src":"2840:50:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2830:6:13"}]}]},{"nodeType":"YulBlock","src":"2910:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2925:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2939:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2929:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2955:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2990:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3001:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2986:3:13"},"nodeType":"YulFunctionCall","src":"2986:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3010:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2965:20:13"},"nodeType":"YulFunctionCall","src":"2965:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2955:6:13"}]}]},{"nodeType":"YulBlock","src":"3038:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3053:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3067:2:13","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3057:6:13","type":""}]},{"nodeType":"YulAssignment","src":"3083:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3118:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3129:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3114:3:13"},"nodeType":"YulFunctionCall","src":"3114:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3138:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3093:20:13"},"nodeType":"YulFunctionCall","src":"3093:53:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3083:6:13"}]}]},{"nodeType":"YulBlock","src":"3166:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3181:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3195:2:13","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3185:6:13","type":""}]},{"nodeType":"YulAssignment","src":"3211:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3246:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3257:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3242:3:13"},"nodeType":"YulFunctionCall","src":"3242:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3266:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3221:20:13"},"nodeType":"YulFunctionCall","src":"3221:53:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3211:6:13"}]}]}]},"name":"abi_decode_tuple_t_boolt_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2592:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2603:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2615:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2623:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2631:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2639:6:13","type":""}],"src":"2532:759:13"},{"body":{"nodeType":"YulBlock","src":"3362:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3379:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3402:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3384:17:13"},"nodeType":"YulFunctionCall","src":"3384:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3372:6:13"},"nodeType":"YulFunctionCall","src":"3372:37:13"},"nodeType":"YulExpressionStatement","src":"3372:37:13"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3350:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3357:3:13","type":""}],"src":"3297:118:13"},{"body":{"nodeType":"YulBlock","src":"3519:124:13","statements":[{"nodeType":"YulAssignment","src":"3529:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3541:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3552:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3537:3:13"},"nodeType":"YulFunctionCall","src":"3537:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3529:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3609:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3622:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3633:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3618:3:13"},"nodeType":"YulFunctionCall","src":"3618:17:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3565:43:13"},"nodeType":"YulFunctionCall","src":"3565:71:13"},"nodeType":"YulExpressionStatement","src":"3565:71:13"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3491:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3503:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3514:4:13","type":""}],"src":"3421:222:13"},{"body":{"nodeType":"YulBlock","src":"3738:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3755:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3758:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3748:6:13"},"nodeType":"YulFunctionCall","src":"3748:12:13"},"nodeType":"YulExpressionStatement","src":"3748:12:13"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3649:117:13"},{"body":{"nodeType":"YulBlock","src":"3820:54:13","statements":[{"nodeType":"YulAssignment","src":"3830:38:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3848:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"3855:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3844:3:13"},"nodeType":"YulFunctionCall","src":"3844:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3864:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3860:3:13"},"nodeType":"YulFunctionCall","src":"3860:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3840:3:13"},"nodeType":"YulFunctionCall","src":"3840:28:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3830:6:13"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3803:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3813:6:13","type":""}],"src":"3772:102:13"},{"body":{"nodeType":"YulBlock","src":"3908:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3925:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3928:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3918:6:13"},"nodeType":"YulFunctionCall","src":"3918:88:13"},"nodeType":"YulExpressionStatement","src":"3918:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4022:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4025:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4015:6:13"},"nodeType":"YulFunctionCall","src":"4015:15:13"},"nodeType":"YulExpressionStatement","src":"4015:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4046:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4049:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4039:6:13"},"nodeType":"YulFunctionCall","src":"4039:15:13"},"nodeType":"YulExpressionStatement","src":"4039:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3880:180:13"},{"body":{"nodeType":"YulBlock","src":"4109:238:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4119:58:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4141:6:13"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4171:4:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4149:21:13"},"nodeType":"YulFunctionCall","src":"4149:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4137:3:13"},"nodeType":"YulFunctionCall","src":"4137:40:13"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4123:10:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"4288:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4290:16:13"},"nodeType":"YulFunctionCall","src":"4290:18:13"},"nodeType":"YulExpressionStatement","src":"4290:18:13"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4231:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"4243:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4228:2:13"},"nodeType":"YulFunctionCall","src":"4228:34:13"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4267:10:13"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4279:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4264:2:13"},"nodeType":"YulFunctionCall","src":"4264:22:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4225:2:13"},"nodeType":"YulFunctionCall","src":"4225:62:13"},"nodeType":"YulIf","src":"4222:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4326:2:13","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4330:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4319:6:13"},"nodeType":"YulFunctionCall","src":"4319:22:13"},"nodeType":"YulExpressionStatement","src":"4319:22:13"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4095:6:13","type":""},{"name":"size","nodeType":"YulTypedName","src":"4103:4:13","type":""}],"src":"4066:281:13"},{"body":{"nodeType":"YulBlock","src":"4394:88:13","statements":[{"nodeType":"YulAssignment","src":"4404:30:13","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4414:18:13"},"nodeType":"YulFunctionCall","src":"4414:20:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4404:6:13"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4463:6:13"},{"name":"size","nodeType":"YulIdentifier","src":"4471:4:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4443:19:13"},"nodeType":"YulFunctionCall","src":"4443:33:13"},"nodeType":"YulExpressionStatement","src":"4443:33:13"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4378:4:13","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4387:6:13","type":""}],"src":"4353:129:13"},{"body":{"nodeType":"YulBlock","src":"4584:229:13","statements":[{"body":{"nodeType":"YulBlock","src":"4689:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4691:16:13"},"nodeType":"YulFunctionCall","src":"4691:18:13"},"nodeType":"YulExpressionStatement","src":"4691:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4661:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4669:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4658:2:13"},"nodeType":"YulFunctionCall","src":"4658:30:13"},"nodeType":"YulIf","src":"4655:56:13"},{"nodeType":"YulAssignment","src":"4721:25:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4733:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4741:4:13","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4729:3:13"},"nodeType":"YulFunctionCall","src":"4729:17:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4721:4:13"}]},{"nodeType":"YulAssignment","src":"4783:23:13","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4795:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"4801:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4791:3:13"},"nodeType":"YulFunctionCall","src":"4791:15:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4783:4:13"}]}]},"name":"array_allocation_size_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4568:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4579:4:13","type":""}],"src":"4488:325:13"},{"body":{"nodeType":"YulBlock","src":"4908:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4925:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4928:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4918:6:13"},"nodeType":"YulFunctionCall","src":"4918:12:13"},"nodeType":"YulExpressionStatement","src":"4918:12:13"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"4819:117:13"},{"body":{"nodeType":"YulBlock","src":"5001:51:13","statements":[{"nodeType":"YulAssignment","src":"5011:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5040:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5022:17:13"},"nodeType":"YulFunctionCall","src":"5022:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5011:7:13"}]}]},"name":"cleanup_t_contract$_IERC20_$140","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4983:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4993:7:13","type":""}],"src":"4942:110:13"},{"body":{"nodeType":"YulBlock","src":"5115:93:13","statements":[{"body":{"nodeType":"YulBlock","src":"5186:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5195:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5198:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5188:6:13"},"nodeType":"YulFunctionCall","src":"5188:12:13"},"nodeType":"YulExpressionStatement","src":"5188:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5138:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5177:5:13"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$140","nodeType":"YulIdentifier","src":"5145:31:13"},"nodeType":"YulFunctionCall","src":"5145:38:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5135:2:13"},"nodeType":"YulFunctionCall","src":"5135:49:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5128:6:13"},"nodeType":"YulFunctionCall","src":"5128:57:13"},"nodeType":"YulIf","src":"5125:77:13"}]},"name":"validator_revert_t_contract$_IERC20_$140","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5108:5:13","type":""}],"src":"5058:150:13"},{"body":{"nodeType":"YulBlock","src":"5280:101:13","statements":[{"nodeType":"YulAssignment","src":"5290:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5312:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5299:12:13"},"nodeType":"YulFunctionCall","src":"5299:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5290:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5369:5:13"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$140","nodeType":"YulIdentifier","src":"5328:40:13"},"nodeType":"YulFunctionCall","src":"5328:47:13"},"nodeType":"YulExpressionStatement","src":"5328:47:13"}]},"name":"abi_decode_t_contract$_IERC20_$140","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5258:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"5266:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5274:5:13","type":""}],"src":"5214:167:13"},{"body":{"nodeType":"YulBlock","src":"5528:636:13","statements":[{"nodeType":"YulAssignment","src":"5538:104:13","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5634:6:13"}],"functionName":{"name":"array_allocation_size_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5563:70:13"},"nodeType":"YulFunctionCall","src":"5563:78:13"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"5547:15:13"},"nodeType":"YulFunctionCall","src":"5547:95:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5538:5:13"}]},{"nodeType":"YulVariableDeclaration","src":"5651:16:13","value":{"name":"array","nodeType":"YulIdentifier","src":"5662:5:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5655:3:13","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5684:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"5691:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5677:6:13"},"nodeType":"YulFunctionCall","src":"5677:21:13"},"nodeType":"YulExpressionStatement","src":"5677:21:13"},{"nodeType":"YulAssignment","src":"5707:23:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5718:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"5725:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5714:3:13"},"nodeType":"YulFunctionCall","src":"5714:16:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5707:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"5740:44:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5758:6:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5770:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"5778:4:13","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5766:3:13"},"nodeType":"YulFunctionCall","src":"5766:17:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5754:3:13"},"nodeType":"YulFunctionCall","src":"5754:30:13"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5744:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5812:103:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"5826:77:13"},"nodeType":"YulFunctionCall","src":"5826:79:13"},"nodeType":"YulExpressionStatement","src":"5826:79:13"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5799:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"5807:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5796:2:13"},"nodeType":"YulFunctionCall","src":"5796:15:13"},"nodeType":"YulIf","src":"5793:122:13"},{"body":{"nodeType":"YulBlock","src":"6000:158:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6015:21:13","value":{"name":"src","nodeType":"YulIdentifier","src":"6033:3:13"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"6019:10:13","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6057:3:13"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"6097:10:13"},{"name":"end","nodeType":"YulIdentifier","src":"6109:3:13"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$140","nodeType":"YulIdentifier","src":"6062:34:13"},"nodeType":"YulFunctionCall","src":"6062:51:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6050:6:13"},"nodeType":"YulFunctionCall","src":"6050:64:13"},"nodeType":"YulExpressionStatement","src":"6050:64:13"},{"nodeType":"YulAssignment","src":"6127:21:13","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6138:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"6143:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6134:3:13"},"nodeType":"YulFunctionCall","src":"6134:14:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6127:3:13"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5953:3:13"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5958:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5950:2:13"},"nodeType":"YulFunctionCall","src":"5950:15:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5966:25:13","statements":[{"nodeType":"YulAssignment","src":"5968:21:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5979:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"5984:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5975:3:13"},"nodeType":"YulFunctionCall","src":"5975:14:13"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5968:3:13"}]}]},"pre":{"nodeType":"YulBlock","src":"5928:21:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5930:17:13","value":{"name":"offset","nodeType":"YulIdentifier","src":"5941:6:13"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5934:3:13","type":""}]}]},"src":"5924:234:13"}]},"name":"abi_decode_available_length_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5498:6:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"5506:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"5514:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5522:5:13","type":""}],"src":"5412:752:13"},{"body":{"nodeType":"YulBlock","src":"6286:307:13","statements":[{"body":{"nodeType":"YulBlock","src":"6335:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6337:77:13"},"nodeType":"YulFunctionCall","src":"6337:79:13"},"nodeType":"YulExpressionStatement","src":"6337:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6314:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"6322:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6310:3:13"},"nodeType":"YulFunctionCall","src":"6310:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"6329:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6306:3:13"},"nodeType":"YulFunctionCall","src":"6306:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6299:6:13"},"nodeType":"YulFunctionCall","src":"6299:35:13"},"nodeType":"YulIf","src":"6296:122:13"},{"nodeType":"YulVariableDeclaration","src":"6427:34:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6454:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6441:12:13"},"nodeType":"YulFunctionCall","src":"6441:20:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6431:6:13","type":""}]},{"nodeType":"YulAssignment","src":"6470:117:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6560:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"6568:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6556:3:13"},"nodeType":"YulFunctionCall","src":"6556:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"6575:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"6583:3:13"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6479:76:13"},"nodeType":"YulFunctionCall","src":"6479:108:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6470:5:13"}]}]},"name":"abi_decode_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6264:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"6272:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6280:5:13","type":""}],"src":"6195:398:13"},{"body":{"nodeType":"YulBlock","src":"6681:229:13","statements":[{"body":{"nodeType":"YulBlock","src":"6786:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6788:16:13"},"nodeType":"YulFunctionCall","src":"6788:18:13"},"nodeType":"YulExpressionStatement","src":"6788:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6758:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"6766:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6755:2:13"},"nodeType":"YulFunctionCall","src":"6755:30:13"},"nodeType":"YulIf","src":"6752:56:13"},{"nodeType":"YulAssignment","src":"6818:25:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6830:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"6838:4:13","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6826:3:13"},"nodeType":"YulFunctionCall","src":"6826:17:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6818:4:13"}]},{"nodeType":"YulAssignment","src":"6880:23:13","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6892:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"6898:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6888:3:13"},"nodeType":"YulFunctionCall","src":"6888:15:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6880:4:13"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6665:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6676:4:13","type":""}],"src":"6599:311:13"},{"body":{"nodeType":"YulBlock","src":"7035:608:13","statements":[{"nodeType":"YulAssignment","src":"7045:90:13","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7127:6:13"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7070:56:13"},"nodeType":"YulFunctionCall","src":"7070:64:13"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7054:15:13"},"nodeType":"YulFunctionCall","src":"7054:81:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7045:5:13"}]},{"nodeType":"YulVariableDeclaration","src":"7144:16:13","value":{"name":"array","nodeType":"YulIdentifier","src":"7155:5:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7148:3:13","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7177:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"7184:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7170:6:13"},"nodeType":"YulFunctionCall","src":"7170:21:13"},"nodeType":"YulExpressionStatement","src":"7170:21:13"},{"nodeType":"YulAssignment","src":"7200:23:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7211:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"7218:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7207:3:13"},"nodeType":"YulFunctionCall","src":"7207:16:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7200:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"7233:44:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7251:6:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7263:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7271:4:13","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7259:3:13"},"nodeType":"YulFunctionCall","src":"7259:17:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7247:3:13"},"nodeType":"YulFunctionCall","src":"7247:30:13"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7237:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"7305:103:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"7319:77:13"},"nodeType":"YulFunctionCall","src":"7319:79:13"},"nodeType":"YulExpressionStatement","src":"7319:79:13"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7292:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"7300:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7289:2:13"},"nodeType":"YulFunctionCall","src":"7289:15:13"},"nodeType":"YulIf","src":"7286:122:13"},{"body":{"nodeType":"YulBlock","src":"7493:144:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7508:21:13","value":{"name":"src","nodeType":"YulIdentifier","src":"7526:3:13"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"7512:10:13","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7550:3:13"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"7576:10:13"},{"name":"end","nodeType":"YulIdentifier","src":"7588:3:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7555:20:13"},"nodeType":"YulFunctionCall","src":"7555:37:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7543:6:13"},"nodeType":"YulFunctionCall","src":"7543:50:13"},"nodeType":"YulExpressionStatement","src":"7543:50:13"},{"nodeType":"YulAssignment","src":"7606:21:13","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7617:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"7622:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7613:3:13"},"nodeType":"YulFunctionCall","src":"7613:14:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7606:3:13"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7446:3:13"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7451:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7443:2:13"},"nodeType":"YulFunctionCall","src":"7443:15:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7459:25:13","statements":[{"nodeType":"YulAssignment","src":"7461:21:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7472:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"7477:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7468:3:13"},"nodeType":"YulFunctionCall","src":"7468:14:13"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7461:3:13"}]}]},"pre":{"nodeType":"YulBlock","src":"7421:21:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7423:17:13","value":{"name":"offset","nodeType":"YulIdentifier","src":"7434:6:13"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7427:3:13","type":""}]}]},"src":"7417:220:13"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7005:6:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"7013:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"7021:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7029:5:13","type":""}],"src":"6933:710:13"},{"body":{"nodeType":"YulBlock","src":"7743:293:13","statements":[{"body":{"nodeType":"YulBlock","src":"7792:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7794:77:13"},"nodeType":"YulFunctionCall","src":"7794:79:13"},"nodeType":"YulExpressionStatement","src":"7794:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7771:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7779:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7767:3:13"},"nodeType":"YulFunctionCall","src":"7767:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"7786:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7763:3:13"},"nodeType":"YulFunctionCall","src":"7763:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7756:6:13"},"nodeType":"YulFunctionCall","src":"7756:35:13"},"nodeType":"YulIf","src":"7753:122:13"},{"nodeType":"YulVariableDeclaration","src":"7884:34:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7911:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7898:12:13"},"nodeType":"YulFunctionCall","src":"7898:20:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7888:6:13","type":""}]},{"nodeType":"YulAssignment","src":"7927:103:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8003:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8011:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:13"},"nodeType":"YulFunctionCall","src":"7999:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"8018:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"8026:3:13"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7936:62:13"},"nodeType":"YulFunctionCall","src":"7936:94:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7927:5:13"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7721:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"7729:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7737:5:13","type":""}],"src":"7666:370:13"},{"body":{"nodeType":"YulBlock","src":"8131:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8148:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8151:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8141:6:13"},"nodeType":"YulFunctionCall","src":"8141:12:13"},"nodeType":"YulExpressionStatement","src":"8141:12:13"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"8042:117:13"},{"body":{"nodeType":"YulBlock","src":"8231:241:13","statements":[{"body":{"nodeType":"YulBlock","src":"8336:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8338:16:13"},"nodeType":"YulFunctionCall","src":"8338:18:13"},"nodeType":"YulExpressionStatement","src":"8338:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8308:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8316:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8305:2:13"},"nodeType":"YulFunctionCall","src":"8305:30:13"},"nodeType":"YulIf","src":"8302:56:13"},{"nodeType":"YulAssignment","src":"8368:37:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8398:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8376:21:13"},"nodeType":"YulFunctionCall","src":"8376:29:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8368:4:13"}]},{"nodeType":"YulAssignment","src":"8442:23:13","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8454:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"8460:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8450:3:13"},"nodeType":"YulFunctionCall","src":"8450:15:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8442:4:13"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8215:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8226:4:13","type":""}],"src":"8165:307:13"},{"body":{"nodeType":"YulBlock","src":"8542:82:13","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8565:3:13"},{"name":"src","nodeType":"YulIdentifier","src":"8570:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"8575:6:13"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8552:12:13"},"nodeType":"YulFunctionCall","src":"8552:30:13"},"nodeType":"YulExpressionStatement","src":"8552:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8602:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"8607:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8598:3:13"},"nodeType":"YulFunctionCall","src":"8598:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"8616:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8591:6:13"},"nodeType":"YulFunctionCall","src":"8591:27:13"},"nodeType":"YulExpressionStatement","src":"8591:27:13"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8524:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8529:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"8534:6:13","type":""}],"src":"8478:146:13"},{"body":{"nodeType":"YulBlock","src":"8713:340:13","statements":[{"nodeType":"YulAssignment","src":"8723:74:13","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8789:6:13"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8748:40:13"},"nodeType":"YulFunctionCall","src":"8748:48:13"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8732:15:13"},"nodeType":"YulFunctionCall","src":"8732:65:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8723:5:13"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8813:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"8820:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8806:6:13"},"nodeType":"YulFunctionCall","src":"8806:21:13"},"nodeType":"YulExpressionStatement","src":"8806:21:13"},{"nodeType":"YulVariableDeclaration","src":"8836:27:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8851:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"8858:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8847:3:13"},"nodeType":"YulFunctionCall","src":"8847:16:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8840:3:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"8901:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8903:77:13"},"nodeType":"YulFunctionCall","src":"8903:79:13"},"nodeType":"YulExpressionStatement","src":"8903:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8882:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"8887:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8878:3:13"},"nodeType":"YulFunctionCall","src":"8878:16:13"},{"name":"end","nodeType":"YulIdentifier","src":"8896:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8875:2:13"},"nodeType":"YulFunctionCall","src":"8875:25:13"},"nodeType":"YulIf","src":"8872:112:13"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9030:3:13"},{"name":"dst","nodeType":"YulIdentifier","src":"9035:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"9040:6:13"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8993:36:13"},"nodeType":"YulFunctionCall","src":"8993:54:13"},"nodeType":"YulExpressionStatement","src":"8993:54:13"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8686:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"8691:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"8699:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8707:5:13","type":""}],"src":"8630:423:13"},{"body":{"nodeType":"YulBlock","src":"9133:277:13","statements":[{"body":{"nodeType":"YulBlock","src":"9182:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9184:77:13"},"nodeType":"YulFunctionCall","src":"9184:79:13"},"nodeType":"YulExpressionStatement","src":"9184:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9161:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9169:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9157:3:13"},"nodeType":"YulFunctionCall","src":"9157:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"9176:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9153:3:13"},"nodeType":"YulFunctionCall","src":"9153:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9146:6:13"},"nodeType":"YulFunctionCall","src":"9146:35:13"},"nodeType":"YulIf","src":"9143:122:13"},{"nodeType":"YulVariableDeclaration","src":"9274:34:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9301:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9288:12:13"},"nodeType":"YulFunctionCall","src":"9288:20:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9278:6:13","type":""}]},{"nodeType":"YulAssignment","src":"9317:87:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9377:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9385:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9373:3:13"},"nodeType":"YulFunctionCall","src":"9373:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"9392:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"9400:3:13"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9326:46:13"},"nodeType":"YulFunctionCall","src":"9326:78:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9317:5:13"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9111:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"9119:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9127:5:13","type":""}],"src":"9072:338:13"},{"body":{"nodeType":"YulBlock","src":"9631:1386:13","statements":[{"body":{"nodeType":"YulBlock","src":"9678:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9680:77:13"},"nodeType":"YulFunctionCall","src":"9680:79:13"},"nodeType":"YulExpressionStatement","src":"9680:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9652:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"9661:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9648:3:13"},"nodeType":"YulFunctionCall","src":"9648:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"9673:3:13","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9644:3:13"},"nodeType":"YulFunctionCall","src":"9644:33:13"},"nodeType":"YulIf","src":"9641:120:13"},{"nodeType":"YulBlock","src":"9771:316:13","statements":[{"nodeType":"YulVariableDeclaration","src":"9786:45:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9817:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9828:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9813:3:13"},"nodeType":"YulFunctionCall","src":"9813:17:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9800:12:13"},"nodeType":"YulFunctionCall","src":"9800:31:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9790:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"9878:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9880:77:13"},"nodeType":"YulFunctionCall","src":"9880:79:13"},"nodeType":"YulExpressionStatement","src":"9880:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9850:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9858:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9847:2:13"},"nodeType":"YulFunctionCall","src":"9847:30:13"},"nodeType":"YulIf","src":"9844:117:13"},{"nodeType":"YulAssignment","src":"9975:102:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10049:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"10060:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10045:3:13"},"nodeType":"YulFunctionCall","src":"10045:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10069:7:13"}],"functionName":{"name":"abi_decode_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9985:59:13"},"nodeType":"YulFunctionCall","src":"9985:92:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9975:6:13"}]}]},{"nodeType":"YulBlock","src":"10097:303:13","statements":[{"nodeType":"YulVariableDeclaration","src":"10112:46:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10143:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10154:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10139:3:13"},"nodeType":"YulFunctionCall","src":"10139:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10126:12:13"},"nodeType":"YulFunctionCall","src":"10126:32:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10116:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"10205:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10207:77:13"},"nodeType":"YulFunctionCall","src":"10207:79:13"},"nodeType":"YulExpressionStatement","src":"10207:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10177:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10185:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10174:2:13"},"nodeType":"YulFunctionCall","src":"10174:30:13"},"nodeType":"YulIf","src":"10171:117:13"},{"nodeType":"YulAssignment","src":"10302:88:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10362:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"10373:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10358:3:13"},"nodeType":"YulFunctionCall","src":"10358:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10382:7:13"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10312:45:13"},"nodeType":"YulFunctionCall","src":"10312:78:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10302:6:13"}]}]},{"nodeType":"YulBlock","src":"10410:303:13","statements":[{"nodeType":"YulVariableDeclaration","src":"10425:46:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10456:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10467:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10452:3:13"},"nodeType":"YulFunctionCall","src":"10452:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10439:12:13"},"nodeType":"YulFunctionCall","src":"10439:32:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10429:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"10518:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10520:77:13"},"nodeType":"YulFunctionCall","src":"10520:79:13"},"nodeType":"YulExpressionStatement","src":"10520:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10490:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10498:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10487:2:13"},"nodeType":"YulFunctionCall","src":"10487:30:13"},"nodeType":"YulIf","src":"10484:117:13"},{"nodeType":"YulAssignment","src":"10615:88:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10675:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"10686:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10671:3:13"},"nodeType":"YulFunctionCall","src":"10671:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10695:7:13"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10625:45:13"},"nodeType":"YulFunctionCall","src":"10625:78:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10615:6:13"}]}]},{"nodeType":"YulBlock","src":"10723:287:13","statements":[{"nodeType":"YulVariableDeclaration","src":"10738:46:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10769:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10780:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10765:3:13"},"nodeType":"YulFunctionCall","src":"10765:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10752:12:13"},"nodeType":"YulFunctionCall","src":"10752:32:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10742:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"10831:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10833:77:13"},"nodeType":"YulFunctionCall","src":"10833:79:13"},"nodeType":"YulExpressionStatement","src":"10833:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10803:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10811:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10800:2:13"},"nodeType":"YulFunctionCall","src":"10800:30:13"},"nodeType":"YulIf","src":"10797:117:13"},{"nodeType":"YulAssignment","src":"10928:72:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10972:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"10983:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10968:3:13"},"nodeType":"YulFunctionCall","src":"10968:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10992:7:13"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10938:29:13"},"nodeType":"YulFunctionCall","src":"10938:62:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10928:6:13"}]}]}]},"name":"abi_decode_tuple_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9577:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9588:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9600:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9608:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9616:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9624:6:13","type":""}],"src":"9416:1601:13"},{"body":{"nodeType":"YulBlock","src":"11082:50:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11099:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11119:5:13"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"11104:14:13"},"nodeType":"YulFunctionCall","src":"11104:21:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11092:6:13"},"nodeType":"YulFunctionCall","src":"11092:34:13"},"nodeType":"YulExpressionStatement","src":"11092:34:13"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11070:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11077:3:13","type":""}],"src":"11023:109:13"},{"body":{"nodeType":"YulBlock","src":"11286:282:13","statements":[{"nodeType":"YulAssignment","src":"11296:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11308:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11319:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11304:3:13"},"nodeType":"YulFunctionCall","src":"11304:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11296:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11370:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11383:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11394:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11379:3:13"},"nodeType":"YulFunctionCall","src":"11379:17:13"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"11332:37:13"},"nodeType":"YulFunctionCall","src":"11332:65:13"},"nodeType":"YulExpressionStatement","src":"11332:65:13"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11451:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11464:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11475:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11460:3:13"},"nodeType":"YulFunctionCall","src":"11460:18:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11407:43:13"},"nodeType":"YulFunctionCall","src":"11407:72:13"},"nodeType":"YulExpressionStatement","src":"11407:72:13"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11533:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11546:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11557:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11542:3:13"},"nodeType":"YulFunctionCall","src":"11542:18:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11489:43:13"},"nodeType":"YulFunctionCall","src":"11489:72:13"},"nodeType":"YulExpressionStatement","src":"11489:72:13"}]},"name":"abi_encode_tuple_t_bool_t_address_t_address__to_t_bool_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11242:9:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11254:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11262:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11270:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11281:4:13","type":""}],"src":"11138:430:13"},{"body":{"nodeType":"YulBlock","src":"11602:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11619:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11622:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11612:6:13"},"nodeType":"YulFunctionCall","src":"11612:88:13"},"nodeType":"YulExpressionStatement","src":"11612:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11716:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11719:4:13","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11709:6:13"},"nodeType":"YulFunctionCall","src":"11709:15:13"},"nodeType":"YulExpressionStatement","src":"11709:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11740:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11743:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11733:6:13"},"nodeType":"YulFunctionCall","src":"11733:15:13"},"nodeType":"YulExpressionStatement","src":"11733:15:13"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"11574:180:13"},{"body":{"nodeType":"YulBlock","src":"11838:66:13","statements":[{"nodeType":"YulAssignment","src":"11848:50:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11892:5:13"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"11861:30:13"},"nodeType":"YulFunctionCall","src":"11861:37:13"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"11848:9:13"}]}]},"name":"convert_t_contract$_Arbitrage_$1603_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11818:5:13","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"11828:9:13","type":""}],"src":"11760:144:13"},{"body":{"nodeType":"YulBlock","src":"11993:84:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12010:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12064:5:13"}],"functionName":{"name":"convert_t_contract$_Arbitrage_$1603_to_t_address","nodeType":"YulIdentifier","src":"12015:48:13"},"nodeType":"YulFunctionCall","src":"12015:55:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12003:6:13"},"nodeType":"YulFunctionCall","src":"12003:68:13"},"nodeType":"YulExpressionStatement","src":"12003:68:13"}]},"name":"abi_encode_t_contract$_Arbitrage_$1603_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11981:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11988:3:13","type":""}],"src":"11910:167:13"},{"body":{"nodeType":"YulBlock","src":"12171:40:13","statements":[{"nodeType":"YulAssignment","src":"12182:22:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12198:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12192:5:13"},"nodeType":"YulFunctionCall","src":"12192:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12182:6:13"}]}]},"name":"array_length_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12154:5:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12164:6:13","type":""}],"src":"12083:128:13"},{"body":{"nodeType":"YulBlock","src":"12328:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12345:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"12350:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12338:6:13"},"nodeType":"YulFunctionCall","src":"12338:19:13"},"nodeType":"YulExpressionStatement","src":"12338:19:13"},{"nodeType":"YulAssignment","src":"12366:29:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12385:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"12390:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12381:3:13"},"nodeType":"YulFunctionCall","src":"12381:14:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12366:11:13"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12300:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"12305:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12316:11:13","type":""}],"src":"12217:184:13"},{"body":{"nodeType":"YulBlock","src":"12493:60:13","statements":[{"nodeType":"YulAssignment","src":"12503:11:13","value":{"name":"ptr","nodeType":"YulIdentifier","src":"12511:3:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12503:4:13"}]},{"nodeType":"YulAssignment","src":"12524:22:13","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12536:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"12541:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12532:3:13"},"nodeType":"YulFunctionCall","src":"12532:14:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12524:4:13"}]}]},"name":"array_dataslot_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12480:3:13","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12488:4:13","type":""}],"src":"12407:146:13"},{"body":{"nodeType":"YulBlock","src":"12633:66:13","statements":[{"nodeType":"YulAssignment","src":"12643:50:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12687:5:13"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"12656:30:13"},"nodeType":"YulFunctionCall","src":"12656:37:13"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12643:9:13"}]}]},"name":"convert_t_contract$_IERC20_$140_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12613:5:13","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12623:9:13","type":""}],"src":"12559:140:13"},{"body":{"nodeType":"YulBlock","src":"12774:80:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12791:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12841:5:13"}],"functionName":{"name":"convert_t_contract$_IERC20_$140_to_t_address","nodeType":"YulIdentifier","src":"12796:44:13"},"nodeType":"YulFunctionCall","src":"12796:51:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12784:6:13"},"nodeType":"YulFunctionCall","src":"12784:64:13"},"nodeType":"YulExpressionStatement","src":"12784:64:13"}]},"name":"abi_encode_t_contract$_IERC20_$140_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12762:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12769:3:13","type":""}],"src":"12705:149:13"},{"body":{"nodeType":"YulBlock","src":"12954:113:13","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13012:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"13020:3:13"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$140_to_t_address","nodeType":"YulIdentifier","src":"12964:47:13"},"nodeType":"YulFunctionCall","src":"12964:60:13"},"nodeType":"YulExpressionStatement","src":"12964:60:13"},{"nodeType":"YulAssignment","src":"13033:28:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13051:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"13056:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13047:3:13"},"nodeType":"YulFunctionCall","src":"13047:14:13"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"13033:10:13"}]}]},"name":"abi_encodeUpdatedPos_t_contract$_IERC20_$140_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"12927:6:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12935:3:13","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"12943:10:13","type":""}],"src":"12860:207:13"},{"body":{"nodeType":"YulBlock","src":"13162:38:13","statements":[{"nodeType":"YulAssignment","src":"13172:22:13","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13184:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"13189:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13180:3:13"},"nodeType":"YulFunctionCall","src":"13180:14:13"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"13172:4:13"}]}]},"name":"array_nextElement_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13149:3:13","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"13157:4:13","type":""}],"src":"13073:127:13"},{"body":{"nodeType":"YulBlock","src":"13382:664:13","statements":[{"nodeType":"YulVariableDeclaration","src":"13392:82:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13468:5:13"}],"functionName":{"name":"array_length_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13406:61:13"},"nodeType":"YulFunctionCall","src":"13406:68:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13396:6:13","type":""}]},{"nodeType":"YulAssignment","src":"13483:93:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13564:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"13569:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13490:73:13"},"nodeType":"YulFunctionCall","src":"13490:86:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13483:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"13585:85:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13664:5:13"}],"functionName":{"name":"array_dataslot_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13600:63:13"},"nodeType":"YulFunctionCall","src":"13600:70:13"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"13589:7:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13679:21:13","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"13693:7:13"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"13683:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"13769:252:13","statements":[{"nodeType":"YulVariableDeclaration","src":"13783:34:13","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13810:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13804:5:13"},"nodeType":"YulFunctionCall","src":"13804:13:13"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"13787:13:13","type":""}]},{"nodeType":"YulAssignment","src":"13830:84:13","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"13895:13:13"},{"name":"pos","nodeType":"YulIdentifier","src":"13910:3:13"}],"functionName":{"name":"abi_encodeUpdatedPos_t_contract$_IERC20_$140_to_t_address","nodeType":"YulIdentifier","src":"13837:57:13"},"nodeType":"YulFunctionCall","src":"13837:77:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13830:3:13"}]},{"nodeType":"YulAssignment","src":"13927:84:13","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14004:6:13"}],"functionName":{"name":"array_nextElement_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13937:66:13"},"nodeType":"YulFunctionCall","src":"13937:74:13"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13927:6:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13731:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"13734:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13728:2:13"},"nodeType":"YulFunctionCall","src":"13728:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13742:18:13","statements":[{"nodeType":"YulAssignment","src":"13744:14:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13753:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"13756:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13749:3:13"},"nodeType":"YulFunctionCall","src":"13749:9:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13744:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"13713:14:13","statements":[{"nodeType":"YulVariableDeclaration","src":"13715:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"13724:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13719:1:13","type":""}]}]},"src":"13709:312:13"},{"nodeType":"YulAssignment","src":"14030:10:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"14037:3:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14030:3:13"}]}]},"name":"abi_encode_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13361:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13368:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13377:3:13","type":""}],"src":"13244:802:13"},{"body":{"nodeType":"YulBlock","src":"14126:40:13","statements":[{"nodeType":"YulAssignment","src":"14137:22:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14153:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14147:5:13"},"nodeType":"YulFunctionCall","src":"14147:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14137:6:13"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14109:5:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"14119:6:13","type":""}],"src":"14052:114:13"},{"body":{"nodeType":"YulBlock","src":"14283:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14300:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"14305:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14293:6:13"},"nodeType":"YulFunctionCall","src":"14293:19:13"},"nodeType":"YulExpressionStatement","src":"14293:19:13"},{"nodeType":"YulAssignment","src":"14321:29:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14340:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"14345:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14336:3:13"},"nodeType":"YulFunctionCall","src":"14336:14:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"14321:11:13"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14255:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"14260:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"14271:11:13","type":""}],"src":"14172:184:13"},{"body":{"nodeType":"YulBlock","src":"14434:60:13","statements":[{"nodeType":"YulAssignment","src":"14444:11:13","value":{"name":"ptr","nodeType":"YulIdentifier","src":"14452:3:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14444:4:13"}]},{"nodeType":"YulAssignment","src":"14465:22:13","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14477:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"14482:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14473:3:13"},"nodeType":"YulFunctionCall","src":"14473:14:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14465:4:13"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14421:3:13","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"14429:4:13","type":""}],"src":"14362:132:13"},{"body":{"nodeType":"YulBlock","src":"14555:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14572:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14595:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14577:17:13"},"nodeType":"YulFunctionCall","src":"14577:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14565:6:13"},"nodeType":"YulFunctionCall","src":"14565:37:13"},"nodeType":"YulExpressionStatement","src":"14565:37:13"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14543:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14550:3:13","type":""}],"src":"14500:108:13"},{"body":{"nodeType":"YulBlock","src":"14694:99:13","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14738:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"14746:3:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"14704:33:13"},"nodeType":"YulFunctionCall","src":"14704:46:13"},"nodeType":"YulExpressionStatement","src":"14704:46:13"},{"nodeType":"YulAssignment","src":"14759:28:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14777:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"14782:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14773:3:13"},"nodeType":"YulFunctionCall","src":"14773:14:13"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"14759:10:13"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"14667:6:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14675:3:13","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"14683:10:13","type":""}],"src":"14614:179:13"},{"body":{"nodeType":"YulBlock","src":"14874:38:13","statements":[{"nodeType":"YulAssignment","src":"14884:22:13","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14896:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"14901:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14892:3:13"},"nodeType":"YulFunctionCall","src":"14892:14:13"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"14884:4:13"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14861:3:13","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"14869:4:13","type":""}],"src":"14799:113:13"},{"body":{"nodeType":"YulBlock","src":"15072:608:13","statements":[{"nodeType":"YulVariableDeclaration","src":"15082:68:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15144:5:13"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15096:47:13"},"nodeType":"YulFunctionCall","src":"15096:54:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15086:6:13","type":""}]},{"nodeType":"YulAssignment","src":"15159:93:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15240:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"15245:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15166:73:13"},"nodeType":"YulFunctionCall","src":"15166:86:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15159:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"15261:71:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15326:5:13"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15276:49:13"},"nodeType":"YulFunctionCall","src":"15276:56:13"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"15265:7:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15341:21:13","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"15355:7:13"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"15345:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"15431:224:13","statements":[{"nodeType":"YulVariableDeclaration","src":"15445:34:13","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15472:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15466:5:13"},"nodeType":"YulFunctionCall","src":"15466:13:13"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"15449:13:13","type":""}]},{"nodeType":"YulAssignment","src":"15492:70:13","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"15543:13:13"},{"name":"pos","nodeType":"YulIdentifier","src":"15558:3:13"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"15499:43:13"},"nodeType":"YulFunctionCall","src":"15499:63:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15492:3:13"}]},{"nodeType":"YulAssignment","src":"15575:70:13","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15638:6:13"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15585:52:13"},"nodeType":"YulFunctionCall","src":"15585:60:13"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15575:6:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15393:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"15396:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15390:2:13"},"nodeType":"YulFunctionCall","src":"15390:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15404:18:13","statements":[{"nodeType":"YulAssignment","src":"15406:14:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15415:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"15418:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15411:3:13"},"nodeType":"YulFunctionCall","src":"15411:9:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"15406:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"15375:14:13","statements":[{"nodeType":"YulVariableDeclaration","src":"15377:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"15386:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"15381:1:13","type":""}]}]},"src":"15371:284:13"},{"nodeType":"YulAssignment","src":"15664:10:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"15671:3:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15664:3:13"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15051:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15058:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15067:3:13","type":""}],"src":"14948:732:13"},{"body":{"nodeType":"YulBlock","src":"15744:40:13","statements":[{"nodeType":"YulAssignment","src":"15755:22:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15771:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15765:5:13"},"nodeType":"YulFunctionCall","src":"15765:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15755:6:13"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15727:5:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15737:6:13","type":""}],"src":"15686:98:13"},{"body":{"nodeType":"YulBlock","src":"15885:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15902:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"15907:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15895:6:13"},"nodeType":"YulFunctionCall","src":"15895:19:13"},"nodeType":"YulExpressionStatement","src":"15895:19:13"},{"nodeType":"YulAssignment","src":"15923:29:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15942:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"15947:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15938:3:13"},"nodeType":"YulFunctionCall","src":"15938:14:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15923:11:13"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15857:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"15862:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15873:11:13","type":""}],"src":"15790:168:13"},{"body":{"nodeType":"YulBlock","src":"16026:184:13","statements":[{"nodeType":"YulVariableDeclaration","src":"16036:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"16045:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"16040:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"16105:63:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"16130:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"16135:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16126:3:13"},"nodeType":"YulFunctionCall","src":"16126:11:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16149:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"16154:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16145:3:13"},"nodeType":"YulFunctionCall","src":"16145:11:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16139:5:13"},"nodeType":"YulFunctionCall","src":"16139:18:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16119:6:13"},"nodeType":"YulFunctionCall","src":"16119:39:13"},"nodeType":"YulExpressionStatement","src":"16119:39:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16066:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"16069:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16063:2:13"},"nodeType":"YulFunctionCall","src":"16063:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16077:19:13","statements":[{"nodeType":"YulAssignment","src":"16079:15:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16088:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"16091:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16084:3:13"},"nodeType":"YulFunctionCall","src":"16084:10:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"16079:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"16059:3:13","statements":[]},"src":"16055:113:13"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"16188:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"16193:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16184:3:13"},"nodeType":"YulFunctionCall","src":"16184:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"16202:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16177:6:13"},"nodeType":"YulFunctionCall","src":"16177:27:13"},"nodeType":"YulExpressionStatement","src":"16177:27:13"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"16008:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"16013:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"16018:6:13","type":""}],"src":"15964:246:13"},{"body":{"nodeType":"YulBlock","src":"16306:283:13","statements":[{"nodeType":"YulVariableDeclaration","src":"16316:52:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16362:5:13"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"16330:31:13"},"nodeType":"YulFunctionCall","src":"16330:38:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16320:6:13","type":""}]},{"nodeType":"YulAssignment","src":"16377:77:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16442:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"16447:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16384:57:13"},"nodeType":"YulFunctionCall","src":"16384:70:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16377:3:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16502:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"16509:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16498:3:13"},"nodeType":"YulFunctionCall","src":"16498:16:13"},{"name":"pos","nodeType":"YulIdentifier","src":"16516:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"16521:6:13"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"16463:34:13"},"nodeType":"YulFunctionCall","src":"16463:65:13"},"nodeType":"YulExpressionStatement","src":"16463:65:13"},{"nodeType":"YulAssignment","src":"16537:46:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16548:3:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16575:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"16553:21:13"},"nodeType":"YulFunctionCall","src":"16553:29:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16544:3:13"},"nodeType":"YulFunctionCall","src":"16544:39:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16537:3:13"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16287:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16294:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16302:3:13","type":""}],"src":"16216:373:13"},{"body":{"nodeType":"YulBlock","src":"16927:674:13","statements":[{"nodeType":"YulAssignment","src":"16937:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16949:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16960:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16945:3:13"},"nodeType":"YulFunctionCall","src":"16945:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16937:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17036:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17049:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17060:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17045:3:13"},"nodeType":"YulFunctionCall","src":"17045:17:13"}],"functionName":{"name":"abi_encode_t_contract$_Arbitrage_$1603_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16974:61:13"},"nodeType":"YulFunctionCall","src":"16974:89:13"},"nodeType":"YulExpressionStatement","src":"16974:89:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17084:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17095:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17080:3:13"},"nodeType":"YulFunctionCall","src":"17080:18:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17104:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"17110:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17100:3:13"},"nodeType":"YulFunctionCall","src":"17100:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17073:6:13"},"nodeType":"YulFunctionCall","src":"17073:48:13"},"nodeType":"YulExpressionStatement","src":"17073:48:13"},{"nodeType":"YulAssignment","src":"17130:130:13","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17246:6:13"},{"name":"tail","nodeType":"YulIdentifier","src":"17255:4:13"}],"functionName":{"name":"abi_encode_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17138:107:13"},"nodeType":"YulFunctionCall","src":"17138:122:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17130:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17281:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17292:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17277:3:13"},"nodeType":"YulFunctionCall","src":"17277:18:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17301:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"17307:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17297:3:13"},"nodeType":"YulFunctionCall","src":"17297:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17270:6:13"},"nodeType":"YulFunctionCall","src":"17270:48:13"},"nodeType":"YulExpressionStatement","src":"17270:48:13"},{"nodeType":"YulAssignment","src":"17327:116:13","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17429:6:13"},{"name":"tail","nodeType":"YulIdentifier","src":"17438:4:13"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17335:93:13"},"nodeType":"YulFunctionCall","src":"17335:108:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17327:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17464:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17475:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17460:3:13"},"nodeType":"YulFunctionCall","src":"17460:18:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17484:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"17490:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17480:3:13"},"nodeType":"YulFunctionCall","src":"17480:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17453:6:13"},"nodeType":"YulFunctionCall","src":"17453:48:13"},"nodeType":"YulExpressionStatement","src":"17453:48:13"},{"nodeType":"YulAssignment","src":"17510:84:13","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17580:6:13"},{"name":"tail","nodeType":"YulIdentifier","src":"17589:4:13"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17518:61:13"},"nodeType":"YulFunctionCall","src":"17518:76:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17510:4:13"}]}]},"name":"abi_encode_tuple_t_contract$_Arbitrage_$1603_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16875:9:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16887:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16895:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16903:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16911:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16922:4:13","type":""}],"src":"16595:1006:13"},{"body":{"nodeType":"YulBlock","src":"17672:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17689:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17712:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17694:17:13"},"nodeType":"YulFunctionCall","src":"17694:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17682:6:13"},"nodeType":"YulFunctionCall","src":"17682:37:13"},"nodeType":"YulExpressionStatement","src":"17682:37:13"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17660:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17667:3:13","type":""}],"src":"17607:118:13"},{"body":{"nodeType":"YulBlock","src":"17931:440:13","statements":[{"nodeType":"YulAssignment","src":"17941:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17953:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17964:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17949:3:13"},"nodeType":"YulFunctionCall","src":"17949:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17941:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18022:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18035:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18046:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18031:3:13"},"nodeType":"YulFunctionCall","src":"18031:17:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17978:43:13"},"nodeType":"YulFunctionCall","src":"17978:71:13"},"nodeType":"YulExpressionStatement","src":"17978:71:13"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18103:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18116:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18127:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18112:3:13"},"nodeType":"YulFunctionCall","src":"18112:18:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18059:43:13"},"nodeType":"YulFunctionCall","src":"18059:72:13"},"nodeType":"YulExpressionStatement","src":"18059:72:13"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18185:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18198:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18209:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18194:3:13"},"nodeType":"YulFunctionCall","src":"18194:18:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18141:43:13"},"nodeType":"YulFunctionCall","src":"18141:72:13"},"nodeType":"YulExpressionStatement","src":"18141:72:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18234:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18245:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18230:3:13"},"nodeType":"YulFunctionCall","src":"18230:18:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18254:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"18260:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18250:3:13"},"nodeType":"YulFunctionCall","src":"18250:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18223:6:13"},"nodeType":"YulFunctionCall","src":"18223:48:13"},"nodeType":"YulExpressionStatement","src":"18223:48:13"},{"nodeType":"YulAssignment","src":"18280:84:13","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"18350:6:13"},{"name":"tail","nodeType":"YulIdentifier","src":"18359:4:13"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18288:61:13"},"nodeType":"YulFunctionCall","src":"18288:76:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18280:4:13"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17879:9:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17891:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17899:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17907:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17915:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17926:4:13","type":""}],"src":"17731:640:13"},{"body":{"nodeType":"YulBlock","src":"18437:77:13","statements":[{"nodeType":"YulAssignment","src":"18447:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18462:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18456:5:13"},"nodeType":"YulFunctionCall","src":"18456:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18447:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18502:5:13"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"18478:23:13"},"nodeType":"YulFunctionCall","src":"18478:30:13"},"nodeType":"YulExpressionStatement","src":"18478:30:13"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18415:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"18423:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"18431:5:13","type":""}],"src":"18377:137:13"},{"body":{"nodeType":"YulBlock","src":"18573:51:13","statements":[{"nodeType":"YulAssignment","src":"18583:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18612:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"18594:17:13"},"nodeType":"YulFunctionCall","src":"18594:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18583:7:13"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18555:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18565:7:13","type":""}],"src":"18520:104:13"},{"body":{"nodeType":"YulBlock","src":"18681:87:13","statements":[{"body":{"nodeType":"YulBlock","src":"18746:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18755:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18758:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18748:6:13"},"nodeType":"YulFunctionCall","src":"18748:12:13"},"nodeType":"YulExpressionStatement","src":"18748:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18704:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18737:5:13"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"18711:25:13"},"nodeType":"YulFunctionCall","src":"18711:32:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18701:2:13"},"nodeType":"YulFunctionCall","src":"18701:43:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18694:6:13"},"nodeType":"YulFunctionCall","src":"18694:51:13"},"nodeType":"YulIf","src":"18691:71:13"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18674:5:13","type":""}],"src":"18630:138:13"},{"body":{"nodeType":"YulBlock","src":"18845:88:13","statements":[{"nodeType":"YulAssignment","src":"18855:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18870:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18864:5:13"},"nodeType":"YulFunctionCall","src":"18864:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18855:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18921:5:13"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"18886:34:13"},"nodeType":"YulFunctionCall","src":"18886:41:13"},"nodeType":"YulExpressionStatement","src":"18886:41:13"}]},"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18823:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"18831:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"18839:5:13","type":""}],"src":"18774:159:13"},{"body":{"nodeType":"YulBlock","src":"19063:565:13","statements":[{"body":{"nodeType":"YulBlock","src":"19109:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19111:77:13"},"nodeType":"YulFunctionCall","src":"19111:79:13"},"nodeType":"YulExpressionStatement","src":"19111:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19084:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"19093:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19080:3:13"},"nodeType":"YulFunctionCall","src":"19080:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"19105:2:13","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19076:3:13"},"nodeType":"YulFunctionCall","src":"19076:32:13"},"nodeType":"YulIf","src":"19073:119:13"},{"nodeType":"YulBlock","src":"19202:125:13","statements":[{"nodeType":"YulVariableDeclaration","src":"19217:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"19231:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19221:6:13","type":""}]},{"nodeType":"YulAssignment","src":"19246:71:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19289:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"19300:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19285:3:13"},"nodeType":"YulFunctionCall","src":"19285:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19309:7:13"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"19256:28:13"},"nodeType":"YulFunctionCall","src":"19256:61:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19246:6:13"}]}]},{"nodeType":"YulBlock","src":"19337:137:13","statements":[{"nodeType":"YulVariableDeclaration","src":"19352:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"19366:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19356:6:13","type":""}]},{"nodeType":"YulAssignment","src":"19382:82:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19436:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"19447:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19432:3:13"},"nodeType":"YulFunctionCall","src":"19432:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19456:7:13"}],"functionName":{"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulIdentifier","src":"19392:39:13"},"nodeType":"YulFunctionCall","src":"19392:72:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19382:6:13"}]}]},{"nodeType":"YulBlock","src":"19484:137:13","statements":[{"nodeType":"YulVariableDeclaration","src":"19499:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"19513:2:13","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19503:6:13","type":""}]},{"nodeType":"YulAssignment","src":"19529:82:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19583:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"19594:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19579:3:13"},"nodeType":"YulFunctionCall","src":"19579:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19603:7:13"}],"functionName":{"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulIdentifier","src":"19539:39:13"},"nodeType":"YulFunctionCall","src":"19539:72:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"19529:6:13"}]}]}]},"name":"abi_decode_tuple_t_boolt_address_payablet_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19017:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19028:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19040:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19048:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19056:6:13","type":""}],"src":"18939:689:13"},{"body":{"nodeType":"YulBlock","src":"19697:80:13","statements":[{"nodeType":"YulAssignment","src":"19707:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19722:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19716:5:13"},"nodeType":"YulFunctionCall","src":"19716:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19707:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19765:5:13"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"19738:26:13"},"nodeType":"YulFunctionCall","src":"19738:33:13"},"nodeType":"YulExpressionStatement","src":"19738:33:13"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19675:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"19683:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"19691:5:13","type":""}],"src":"19634:143:13"},{"body":{"nodeType":"YulBlock","src":"19860:274:13","statements":[{"body":{"nodeType":"YulBlock","src":"19906:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19908:77:13"},"nodeType":"YulFunctionCall","src":"19908:79:13"},"nodeType":"YulExpressionStatement","src":"19908:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19881:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"19890:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19877:3:13"},"nodeType":"YulFunctionCall","src":"19877:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"19902:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19873:3:13"},"nodeType":"YulFunctionCall","src":"19873:32:13"},"nodeType":"YulIf","src":"19870:119:13"},{"nodeType":"YulBlock","src":"19999:128:13","statements":[{"nodeType":"YulVariableDeclaration","src":"20014:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"20028:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20018:6:13","type":""}]},{"nodeType":"YulAssignment","src":"20043:74:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20089:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"20100:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20085:3:13"},"nodeType":"YulFunctionCall","src":"20085:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20109:7:13"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"20053:31:13"},"nodeType":"YulFunctionCall","src":"20053:64:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20043:6:13"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19830:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19841:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19853:6:13","type":""}],"src":"19783:351:13"},{"body":{"nodeType":"YulBlock","src":"20266:206:13","statements":[{"nodeType":"YulAssignment","src":"20276:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20288:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"20299:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20284:3:13"},"nodeType":"YulFunctionCall","src":"20284:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20276:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20356:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20369:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"20380:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20365:3:13"},"nodeType":"YulFunctionCall","src":"20365:17:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20312:43:13"},"nodeType":"YulFunctionCall","src":"20312:71:13"},"nodeType":"YulExpressionStatement","src":"20312:71:13"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20437:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20450:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"20461:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20446:3:13"},"nodeType":"YulFunctionCall","src":"20446:18:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20393:43:13"},"nodeType":"YulFunctionCall","src":"20393:72:13"},"nodeType":"YulExpressionStatement","src":"20393:72:13"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20230:9:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20242:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20250:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20261:4:13","type":""}],"src":"20140:332:13"},{"body":{"nodeType":"YulBlock","src":"20552:271:13","statements":[{"body":{"nodeType":"YulBlock","src":"20598:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20600:77:13"},"nodeType":"YulFunctionCall","src":"20600:79:13"},"nodeType":"YulExpressionStatement","src":"20600:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20573:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"20582:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20569:3:13"},"nodeType":"YulFunctionCall","src":"20569:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"20594:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20565:3:13"},"nodeType":"YulFunctionCall","src":"20565:32:13"},"nodeType":"YulIf","src":"20562:119:13"},{"nodeType":"YulBlock","src":"20691:125:13","statements":[{"nodeType":"YulVariableDeclaration","src":"20706:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"20720:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20710:6:13","type":""}]},{"nodeType":"YulAssignment","src":"20735:71:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20778:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"20789:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20774:3:13"},"nodeType":"YulFunctionCall","src":"20774:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20798:7:13"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"20745:28:13"},"nodeType":"YulFunctionCall","src":"20745:61:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20735:6:13"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20522:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20533:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20545:6:13","type":""}],"src":"20478:345:13"},{"body":{"nodeType":"YulBlock","src":"20983:288:13","statements":[{"nodeType":"YulAssignment","src":"20993:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21005:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"21016:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21001:3:13"},"nodeType":"YulFunctionCall","src":"21001:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20993:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21073:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21086:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"21097:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21082:3:13"},"nodeType":"YulFunctionCall","src":"21082:17:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21029:43:13"},"nodeType":"YulFunctionCall","src":"21029:71:13"},"nodeType":"YulExpressionStatement","src":"21029:71:13"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21154:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21167:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"21178:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21163:3:13"},"nodeType":"YulFunctionCall","src":"21163:18:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21110:43:13"},"nodeType":"YulFunctionCall","src":"21110:72:13"},"nodeType":"YulExpressionStatement","src":"21110:72:13"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21236:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21249:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"21260:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21245:3:13"},"nodeType":"YulFunctionCall","src":"21245:18:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21192:43:13"},"nodeType":"YulFunctionCall","src":"21192:72:13"},"nodeType":"YulExpressionStatement","src":"21192:72:13"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20939:9:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20951:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20959:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20967:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20978:4:13","type":""}],"src":"20829:442:13"},{"body":{"nodeType":"YulBlock","src":"21373:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21390:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"21395:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21383:6:13"},"nodeType":"YulFunctionCall","src":"21383:19:13"},"nodeType":"YulExpressionStatement","src":"21383:19:13"},{"nodeType":"YulAssignment","src":"21411:29:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21430:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"21435:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21426:3:13"},"nodeType":"YulFunctionCall","src":"21426:14:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"21411:11:13"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21345:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"21350:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"21361:11:13","type":""}],"src":"21277:169:13"},{"body":{"nodeType":"YulBlock","src":"21558:68:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21580:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"21588:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21576:3:13"},"nodeType":"YulFunctionCall","src":"21576:14:13"},{"hexValue":"556e697377617020617070726f76616c206661696c65642e","kind":"string","nodeType":"YulLiteral","src":"21592:26:13","type":"","value":"Uniswap approval failed."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21569:6:13"},"nodeType":"YulFunctionCall","src":"21569:50:13"},"nodeType":"YulExpressionStatement","src":"21569:50:13"}]},"name":"store_literal_in_memory_4c473bc87957af9d2b3ccbdbf6af1e2a16250a17e90f0632562ea9f4ae9722ef","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21550:6:13","type":""}],"src":"21452:174:13"},{"body":{"nodeType":"YulBlock","src":"21778:220:13","statements":[{"nodeType":"YulAssignment","src":"21788:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21854:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"21859:2:13","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21795:58:13"},"nodeType":"YulFunctionCall","src":"21795:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21788:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21960:3:13"}],"functionName":{"name":"store_literal_in_memory_4c473bc87957af9d2b3ccbdbf6af1e2a16250a17e90f0632562ea9f4ae9722ef","nodeType":"YulIdentifier","src":"21871:88:13"},"nodeType":"YulFunctionCall","src":"21871:93:13"},"nodeType":"YulExpressionStatement","src":"21871:93:13"},{"nodeType":"YulAssignment","src":"21973:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21984:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"21989:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21980:3:13"},"nodeType":"YulFunctionCall","src":"21980:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21973:3:13"}]}]},"name":"abi_encode_t_stringliteral_4c473bc87957af9d2b3ccbdbf6af1e2a16250a17e90f0632562ea9f4ae9722ef_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21766:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21774:3:13","type":""}],"src":"21632:366:13"},{"body":{"nodeType":"YulBlock","src":"22175:248:13","statements":[{"nodeType":"YulAssignment","src":"22185:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22197:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"22208:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22193:3:13"},"nodeType":"YulFunctionCall","src":"22193:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22185:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22232:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"22243:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22228:3:13"},"nodeType":"YulFunctionCall","src":"22228:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22251:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"22257:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22247:3:13"},"nodeType":"YulFunctionCall","src":"22247:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22221:6:13"},"nodeType":"YulFunctionCall","src":"22221:47:13"},"nodeType":"YulExpressionStatement","src":"22221:47:13"},{"nodeType":"YulAssignment","src":"22277:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22411:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_4c473bc87957af9d2b3ccbdbf6af1e2a16250a17e90f0632562ea9f4ae9722ef_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22285:124:13"},"nodeType":"YulFunctionCall","src":"22285:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22277:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_4c473bc87957af9d2b3ccbdbf6af1e2a16250a17e90f0632562ea9f4ae9722ef__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22155:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22170:4:13","type":""}],"src":"22004:419:13"},{"body":{"nodeType":"YulBlock","src":"22457:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22474:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22477:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22467:6:13"},"nodeType":"YulFunctionCall","src":"22467:88:13"},"nodeType":"YulExpressionStatement","src":"22467:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22571:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22574:4:13","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22564:6:13"},"nodeType":"YulFunctionCall","src":"22564:15:13"},"nodeType":"YulExpressionStatement","src":"22564:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22595:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22598:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22588:6:13"},"nodeType":"YulFunctionCall","src":"22588:15:13"},"nodeType":"YulExpressionStatement","src":"22588:15:13"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"22429:180:13"},{"body":{"nodeType":"YulBlock","src":"22659:147:13","statements":[{"nodeType":"YulAssignment","src":"22669:25:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22692:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22674:17:13"},"nodeType":"YulFunctionCall","src":"22674:20:13"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"22669:1:13"}]},{"nodeType":"YulAssignment","src":"22703:25:13","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22726:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22708:17:13"},"nodeType":"YulFunctionCall","src":"22708:20:13"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"22703:1:13"}]},{"nodeType":"YulAssignment","src":"22737:16:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22748:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"22751:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22744:3:13"},"nodeType":"YulFunctionCall","src":"22744:9:13"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"22737:3:13"}]},{"body":{"nodeType":"YulBlock","src":"22777:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22779:16:13"},"nodeType":"YulFunctionCall","src":"22779:18:13"},"nodeType":"YulExpressionStatement","src":"22779:18:13"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22769:1:13"},{"name":"sum","nodeType":"YulIdentifier","src":"22772:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22766:2:13"},"nodeType":"YulFunctionCall","src":"22766:10:13"},"nodeType":"YulIf","src":"22763:36:13"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22646:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"22649:1:13","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"22655:3:13","type":""}],"src":"22615:191:13"},{"body":{"nodeType":"YulBlock","src":"22886:40:13","statements":[{"nodeType":"YulAssignment","src":"22897:22:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22913:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22907:5:13"},"nodeType":"YulFunctionCall","src":"22907:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22897:6:13"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22869:5:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22879:6:13","type":""}],"src":"22812:114:13"},{"body":{"nodeType":"YulBlock","src":"23004:60:13","statements":[{"nodeType":"YulAssignment","src":"23014:11:13","value":{"name":"ptr","nodeType":"YulIdentifier","src":"23022:3:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"23014:4:13"}]},{"nodeType":"YulAssignment","src":"23035:22:13","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"23047:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"23052:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23043:3:13"},"nodeType":"YulFunctionCall","src":"23043:14:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"23035:4:13"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"22991:3:13","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"22999:4:13","type":""}],"src":"22932:132:13"},{"body":{"nodeType":"YulBlock","src":"23125:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23142:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23165:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"23147:17:13"},"nodeType":"YulFunctionCall","src":"23147:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23135:6:13"},"nodeType":"YulFunctionCall","src":"23135:37:13"},"nodeType":"YulExpressionStatement","src":"23135:37:13"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23113:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23120:3:13","type":""}],"src":"23070:108:13"},{"body":{"nodeType":"YulBlock","src":"23264:99:13","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23308:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"23316:3:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"23274:33:13"},"nodeType":"YulFunctionCall","src":"23274:46:13"},"nodeType":"YulExpressionStatement","src":"23274:46:13"},{"nodeType":"YulAssignment","src":"23329:28:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23347:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"23352:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23343:3:13"},"nodeType":"YulFunctionCall","src":"23343:14:13"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"23329:10:13"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"23237:6:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23245:3:13","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"23253:10:13","type":""}],"src":"23184:179:13"},{"body":{"nodeType":"YulBlock","src":"23444:38:13","statements":[{"nodeType":"YulAssignment","src":"23454:22:13","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"23466:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"23471:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23462:3:13"},"nodeType":"YulFunctionCall","src":"23462:14:13"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"23454:4:13"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"23431:3:13","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"23439:4:13","type":""}],"src":"23369:113:13"},{"body":{"nodeType":"YulBlock","src":"23642:608:13","statements":[{"nodeType":"YulVariableDeclaration","src":"23652:68:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23714:5:13"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"23666:47:13"},"nodeType":"YulFunctionCall","src":"23666:54:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"23656:6:13","type":""}]},{"nodeType":"YulAssignment","src":"23729:93:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23810:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"23815:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23736:73:13"},"nodeType":"YulFunctionCall","src":"23736:86:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23729:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"23831:71:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23896:5:13"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"23846:49:13"},"nodeType":"YulFunctionCall","src":"23846:56:13"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"23835:7:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23911:21:13","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"23925:7:13"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"23915:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"24001:224:13","statements":[{"nodeType":"YulVariableDeclaration","src":"24015:34:13","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"24042:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24036:5:13"},"nodeType":"YulFunctionCall","src":"24036:13:13"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"24019:13:13","type":""}]},{"nodeType":"YulAssignment","src":"24062:70:13","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"24113:13:13"},{"name":"pos","nodeType":"YulIdentifier","src":"24128:3:13"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"24069:43:13"},"nodeType":"YulFunctionCall","src":"24069:63:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24062:3:13"}]},{"nodeType":"YulAssignment","src":"24145:70:13","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"24208:6:13"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"24155:52:13"},"nodeType":"YulFunctionCall","src":"24155:60:13"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"24145:6:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23963:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"23966:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23960:2:13"},"nodeType":"YulFunctionCall","src":"23960:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23974:18:13","statements":[{"nodeType":"YulAssignment","src":"23976:14:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23985:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"23988:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23981:3:13"},"nodeType":"YulFunctionCall","src":"23981:9:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"23976:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"23945:14:13","statements":[{"nodeType":"YulVariableDeclaration","src":"23947:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"23956:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"23951:1:13","type":""}]}]},"src":"23941:284:13"},{"nodeType":"YulAssignment","src":"24234:10:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"24241:3:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24234:3:13"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23621:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23628:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23637:3:13","type":""}],"src":"23518:732:13"},{"body":{"nodeType":"YulBlock","src":"24516:555:13","statements":[{"nodeType":"YulAssignment","src":"24526:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24538:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"24549:3:13","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24534:3:13"},"nodeType":"YulFunctionCall","src":"24534:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24526:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24607:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24620:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"24631:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24616:3:13"},"nodeType":"YulFunctionCall","src":"24616:17:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24563:43:13"},"nodeType":"YulFunctionCall","src":"24563:71:13"},"nodeType":"YulExpressionStatement","src":"24563:71:13"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24688:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24701:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"24712:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24697:3:13"},"nodeType":"YulFunctionCall","src":"24697:18:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24644:43:13"},"nodeType":"YulFunctionCall","src":"24644:72:13"},"nodeType":"YulExpressionStatement","src":"24644:72:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24737:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"24748:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24733:3:13"},"nodeType":"YulFunctionCall","src":"24733:18:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24757:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"24763:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24753:3:13"},"nodeType":"YulFunctionCall","src":"24753:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24726:6:13"},"nodeType":"YulFunctionCall","src":"24726:48:13"},"nodeType":"YulExpressionStatement","src":"24726:48:13"},{"nodeType":"YulAssignment","src":"24783:116:13","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24885:6:13"},{"name":"tail","nodeType":"YulIdentifier","src":"24894:4:13"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24791:93:13"},"nodeType":"YulFunctionCall","src":"24791:108:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24783:4:13"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24953:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24966:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"24977:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24962:3:13"},"nodeType":"YulFunctionCall","src":"24962:18:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24909:43:13"},"nodeType":"YulFunctionCall","src":"24909:72:13"},"nodeType":"YulExpressionStatement","src":"24909:72:13"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"25035:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25048:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"25059:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25044:3:13"},"nodeType":"YulFunctionCall","src":"25044:19:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24991:43:13"},"nodeType":"YulFunctionCall","src":"24991:73:13"},"nodeType":"YulExpressionStatement","src":"24991:73:13"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24456:9:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24468:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24476:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24484:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24492:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24500:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24511:4:13","type":""}],"src":"24256:815:13"},{"body":{"nodeType":"YulBlock","src":"25207:619:13","statements":[{"nodeType":"YulAssignment","src":"25217:90:13","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25299:6:13"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"25242:56:13"},"nodeType":"YulFunctionCall","src":"25242:64:13"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"25226:15:13"},"nodeType":"YulFunctionCall","src":"25226:81:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"25217:5:13"}]},{"nodeType":"YulVariableDeclaration","src":"25316:16:13","value":{"name":"array","nodeType":"YulIdentifier","src":"25327:5:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"25320:3:13","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"25349:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"25356:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25342:6:13"},"nodeType":"YulFunctionCall","src":"25342:21:13"},"nodeType":"YulExpressionStatement","src":"25342:21:13"},{"nodeType":"YulAssignment","src":"25372:23:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"25383:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"25390:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25379:3:13"},"nodeType":"YulFunctionCall","src":"25379:16:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"25372:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"25405:44:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25423:6:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25435:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"25443:4:13","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25431:3:13"},"nodeType":"YulFunctionCall","src":"25431:17:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25419:3:13"},"nodeType":"YulFunctionCall","src":"25419:30:13"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"25409:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"25477:103:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"25491:77:13"},"nodeType":"YulFunctionCall","src":"25491:79:13"},"nodeType":"YulExpressionStatement","src":"25491:79:13"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"25464:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"25472:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25461:2:13"},"nodeType":"YulFunctionCall","src":"25461:15:13"},"nodeType":"YulIf","src":"25458:122:13"},{"body":{"nodeType":"YulBlock","src":"25665:155:13","statements":[{"nodeType":"YulVariableDeclaration","src":"25680:21:13","value":{"name":"src","nodeType":"YulIdentifier","src":"25698:3:13"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"25684:10:13","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"25722:3:13"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"25759:10:13"},{"name":"end","nodeType":"YulIdentifier","src":"25771:3:13"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"25727:31:13"},"nodeType":"YulFunctionCall","src":"25727:48:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25715:6:13"},"nodeType":"YulFunctionCall","src":"25715:61:13"},"nodeType":"YulExpressionStatement","src":"25715:61:13"},{"nodeType":"YulAssignment","src":"25789:21:13","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"25800:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"25805:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25796:3:13"},"nodeType":"YulFunctionCall","src":"25796:14:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"25789:3:13"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25618:3:13"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"25623:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25615:2:13"},"nodeType":"YulFunctionCall","src":"25615:15:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"25631:25:13","statements":[{"nodeType":"YulAssignment","src":"25633:21:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25644:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"25649:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25640:3:13"},"nodeType":"YulFunctionCall","src":"25640:14:13"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"25633:3:13"}]}]},"pre":{"nodeType":"YulBlock","src":"25593:21:13","statements":[{"nodeType":"YulVariableDeclaration","src":"25595:17:13","value":{"name":"offset","nodeType":"YulIdentifier","src":"25606:6:13"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"25599:3:13","type":""}]}]},"src":"25589:231:13"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"25177:6:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"25185:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"25193:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"25201:5:13","type":""}],"src":"25094:732:13"},{"body":{"nodeType":"YulBlock","src":"25937:297:13","statements":[{"body":{"nodeType":"YulBlock","src":"25986:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"25988:77:13"},"nodeType":"YulFunctionCall","src":"25988:79:13"},"nodeType":"YulExpressionStatement","src":"25988:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25965:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"25973:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25961:3:13"},"nodeType":"YulFunctionCall","src":"25961:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"25980:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25957:3:13"},"nodeType":"YulFunctionCall","src":"25957:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25950:6:13"},"nodeType":"YulFunctionCall","src":"25950:35:13"},"nodeType":"YulIf","src":"25947:122:13"},{"nodeType":"YulVariableDeclaration","src":"26078:27:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26098:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26092:5:13"},"nodeType":"YulFunctionCall","src":"26092:13:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"26082:6:13","type":""}]},{"nodeType":"YulAssignment","src":"26114:114:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26201:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"26209:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26197:3:13"},"nodeType":"YulFunctionCall","src":"26197:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"26216:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"26224:3:13"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"26123:73:13"},"nodeType":"YulFunctionCall","src":"26123:105:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"26114:5:13"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"25915:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"25923:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"25931:5:13","type":""}],"src":"25849:385:13"},{"body":{"nodeType":"YulBlock","src":"26342:452:13","statements":[{"body":{"nodeType":"YulBlock","src":"26388:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"26390:77:13"},"nodeType":"YulFunctionCall","src":"26390:79:13"},"nodeType":"YulExpressionStatement","src":"26390:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"26363:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"26372:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26359:3:13"},"nodeType":"YulFunctionCall","src":"26359:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"26384:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"26355:3:13"},"nodeType":"YulFunctionCall","src":"26355:32:13"},"nodeType":"YulIf","src":"26352:119:13"},{"nodeType":"YulBlock","src":"26481:306:13","statements":[{"nodeType":"YulVariableDeclaration","src":"26496:38:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26520:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"26531:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26516:3:13"},"nodeType":"YulFunctionCall","src":"26516:17:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26510:5:13"},"nodeType":"YulFunctionCall","src":"26510:24:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26500:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"26581:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"26583:77:13"},"nodeType":"YulFunctionCall","src":"26583:79:13"},"nodeType":"YulExpressionStatement","src":"26583:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26553:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"26561:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26550:2:13"},"nodeType":"YulFunctionCall","src":"26550:30:13"},"nodeType":"YulIf","src":"26547:117:13"},{"nodeType":"YulAssignment","src":"26678:99:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26749:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"26760:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26745:3:13"},"nodeType":"YulFunctionCall","src":"26745:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26769:7:13"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"26688:56:13"},"nodeType":"YulFunctionCall","src":"26688:89:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"26678:6:13"}]}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26312:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"26323:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"26335:6:13","type":""}],"src":"26240:554:13"},{"body":{"nodeType":"YulBlock","src":"26982:371:13","statements":[{"nodeType":"YulAssignment","src":"26992:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27004:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"27015:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27000:3:13"},"nodeType":"YulFunctionCall","src":"27000:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26992:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27073:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27086:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"27097:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27082:3:13"},"nodeType":"YulFunctionCall","src":"27082:17:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27029:43:13"},"nodeType":"YulFunctionCall","src":"27029:71:13"},"nodeType":"YulExpressionStatement","src":"27029:71:13"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27154:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27167:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"27178:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27163:3:13"},"nodeType":"YulFunctionCall","src":"27163:18:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27110:43:13"},"nodeType":"YulFunctionCall","src":"27110:72:13"},"nodeType":"YulExpressionStatement","src":"27110:72:13"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27236:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27249:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"27260:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27245:3:13"},"nodeType":"YulFunctionCall","src":"27245:18:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27192:43:13"},"nodeType":"YulFunctionCall","src":"27192:72:13"},"nodeType":"YulExpressionStatement","src":"27192:72:13"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27318:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27331:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"27342:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27327:3:13"},"nodeType":"YulFunctionCall","src":"27327:18:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27274:43:13"},"nodeType":"YulFunctionCall","src":"27274:72:13"},"nodeType":"YulExpressionStatement","src":"27274:72:13"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_address_t_address__to_t_uint256_t_uint256_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26930:9:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"26942:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26950:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26958:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26966:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26977:4:13","type":""}],"src":"26800:553:13"},{"body":{"nodeType":"YulBlock","src":"27465:70:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27487:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"27495:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27483:3:13"},"nodeType":"YulFunctionCall","src":"27483:14:13"},{"hexValue":"53757368697377617020617070726f76616c206661696c65642e","kind":"string","nodeType":"YulLiteral","src":"27499:28:13","type":"","value":"Sushiswap approval failed."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27476:6:13"},"nodeType":"YulFunctionCall","src":"27476:52:13"},"nodeType":"YulExpressionStatement","src":"27476:52:13"}]},"name":"store_literal_in_memory_919058e86b9a945d55abb823a3d9c26bfcafca6844acffc0235f4374fc2677eb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27457:6:13","type":""}],"src":"27359:176:13"},{"body":{"nodeType":"YulBlock","src":"27687:220:13","statements":[{"nodeType":"YulAssignment","src":"27697:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27763:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"27768:2:13","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27704:58:13"},"nodeType":"YulFunctionCall","src":"27704:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27697:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27869:3:13"}],"functionName":{"name":"store_literal_in_memory_919058e86b9a945d55abb823a3d9c26bfcafca6844acffc0235f4374fc2677eb","nodeType":"YulIdentifier","src":"27780:88:13"},"nodeType":"YulFunctionCall","src":"27780:93:13"},"nodeType":"YulExpressionStatement","src":"27780:93:13"},{"nodeType":"YulAssignment","src":"27882:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27893:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"27898:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27889:3:13"},"nodeType":"YulFunctionCall","src":"27889:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27882:3:13"}]}]},"name":"abi_encode_t_stringliteral_919058e86b9a945d55abb823a3d9c26bfcafca6844acffc0235f4374fc2677eb_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27675:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27683:3:13","type":""}],"src":"27541:366:13"},{"body":{"nodeType":"YulBlock","src":"28084:248:13","statements":[{"nodeType":"YulAssignment","src":"28094:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28106:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"28117:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28102:3:13"},"nodeType":"YulFunctionCall","src":"28102:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28094:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28141:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"28152:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28137:3:13"},"nodeType":"YulFunctionCall","src":"28137:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28160:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"28166:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28156:3:13"},"nodeType":"YulFunctionCall","src":"28156:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28130:6:13"},"nodeType":"YulFunctionCall","src":"28130:47:13"},"nodeType":"YulExpressionStatement","src":"28130:47:13"},{"nodeType":"YulAssignment","src":"28186:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28320:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_919058e86b9a945d55abb823a3d9c26bfcafca6844acffc0235f4374fc2677eb_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28194:124:13"},"nodeType":"YulFunctionCall","src":"28194:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28186:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_919058e86b9a945d55abb823a3d9c26bfcafca6844acffc0235f4374fc2677eb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28064:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28079:4:13","type":""}],"src":"27913:419:13"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Router02_$1157_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Router02_$1157_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Router02_$1157_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$1157__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Router02_$1157_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_boolt_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_contract$_IERC20_$140(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$140(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$140(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$140(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$140(value)\n    }\n\n    // contract IERC20[]\n    function abi_decode_available_length_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_contract$_IERC20_$140(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // contract IERC20[]\n    function abi_decode_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_address_t_address__to_t_bool_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function convert_t_contract$_Arbitrage_$1603_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Arbitrage_$1603_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Arbitrage_$1603_to_t_address(value))\n    }\n\n    function array_length_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function convert_t_contract$_IERC20_$140_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$140_to_t_address(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$140_to_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_contract$_IERC20_$140_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_contract$_IERC20_$140_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // contract IERC20[] -> address[]\n    function abi_encode_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_contract$_IERC20_$140_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_contract$_Arbitrage_$1603_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_Arbitrage_$1603_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_boolt_address_payablet_address_payable_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4c473bc87957af9d2b3ccbdbf6af1e2a16250a17e90f0632562ea9f4ae9722ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Uniswap approval failed.\")\n\n    }\n\n    function abi_encode_t_stringliteral_4c473bc87957af9d2b3ccbdbf6af1e2a16250a17e90f0632562ea9f4ae9722ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_4c473bc87957af9d2b3ccbdbf6af1e2a16250a17e90f0632562ea9f4ae9722ef(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4c473bc87957af9d2b3ccbdbf6af1e2a16250a17e90f0632562ea9f4ae9722ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4c473bc87957af9d2b3ccbdbf6af1e2a16250a17e90f0632562ea9f4ae9722ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_address__to_t_uint256_t_uint256_t_address_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_919058e86b9a945d55abb823a3d9c26bfcafca6844acffc0235f4374fc2677eb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sushiswap approval failed.\")\n\n    }\n\n    function abi_encode_t_stringliteral_919058e86b9a945d55abb823a3d9c26bfcafca6844acffc0235f4374fc2677eb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_919058e86b9a945d55abb823a3d9c26bfcafca6844acffc0235f4374fc2677eb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_919058e86b9a945d55abb823a3d9c26bfcafca6844acffc0235f4374fc2677eb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_919058e86b9a945d55abb823a3d9c26bfcafca6844acffc0235f4374fc2677eb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1173":[{"length":32,"start":240},{"length":32,"start":2953},{"length":32,"start":3146}],"1176":[{"length":32,"start":787},{"length":32,"start":2402},{"length":32,"start":2595}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100575760003560e01c8063017c64b01461005c5780631395dd231461007a5780635cf39049146100965780638da5cb5b146100b4578063f04f2707146100d2575b600080fd5b6100646100ee565b6040516100719190610df6565b60405180910390f35b610094600480360381019061008f9190610ed1565b610112565b005b61009e610311565b6040516100ab9190610df6565b60405180910390f35b6100bc610335565b6040516100c99190610f47565b60405180910390f35b6100ec60048036038101906100e79190611271565b610359565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b600084848460405160200161012993929190611357565b60405160208183030381529060405290506000600167ffffffffffffffff81111561015757610156610f78565b5b6040519080825280602002602001820160405280156101855781602001602082028036833780820191505090505b509050848160008151811061019d5761019c61138e565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000600167ffffffffffffffff8111156101f4576101f3610f78565b5b6040519080825280602002602001820160405280156102225781602001602082028036833780820191505090505b509050838160008151811061023a5761023961138e565b5b60200260200101818152505073ba12222222228d8ba445958a75a0704d566bf2c873ffffffffffffffffffffffffffffffffffffffff16635c38449e308484876040518563ffffffff1660e01b815260040161029994939291906115eb565b600060405180830381600087803b1580156102b357600080fd5b505af11580156102c7573d6000803e3d6000fd5b505050507fbc08154b32c714572d2b71de99aa454ac3dc272fa8314b91d111624f0f97a81c338786866040516103009493929190611654565b60405180910390a150505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b73ba12222222228d8ba445958a75a0704d566bf2c873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a557600080fd5b6000836000815181106103bb576103ba61138e565b5b602002602001015190506000806000848060200190518101906103de91906116f3565b9250925092506000600267ffffffffffffffff81111561040157610400610f78565b5b60405190808252806020026020018201604052801561042f5781602001602082028036833780820191505090505b50905082816000815181106104475761044661138e565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081816001815181106104965761049561138e565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508315610609576104e281866000610929565b81816000815181106104f7576104f661138e565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082816001815181106105465761054561138e565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610604818373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105bd9190610f47565b602060405180830381865afa1580156105da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fe919061175b565b87610b50565b610738565b61061581866000610b50565b818160008151811061062a5761062961138e565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082816001815181106106795761067861138e565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610737818373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106f09190610f47565b602060405180830381865afa15801561070d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610731919061175b565b87610929565b5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb73ba12222222228d8ba445958a75a0704d566bf2c8876040518363ffffffff1660e01b8152600401610787929190611788565b6020604051808303816000875af11580156107a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ca91906117b1565b508273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108419190610f47565b602060405180830381865afa15801561085e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610882919061175b565b6040518363ffffffff1660e01b815260040161089f929190611788565b6020604051808303816000875af11580156108be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e291906117b1565b507f3931de709f834e3c094757d8879ea96bacc21f497af9f966091e950137d6b775338487604051610916939291906117de565b60405180910390a1505050505050505050565b8260008151811061093d5761093c61138e565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b815260040161099f929190611788565b6020604051808303816000875af11580156109be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e291906117b1565b610a21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1890611872565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166338ed1739838386306104b042610a6f91906118c1565b6040518663ffffffff1660e01b8152600401610a8f9594939291906119a2565b6000604051808303816000875af1158015610aae573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610ad79190611a93565b507fba449dec4e0cdb46f4c0df435aeba7a018f35f2cdc4f3b160410be52dbbe207c828285600081518110610b0f57610b0e61138e565b5b602002602001015186600181518110610b2b57610b2a61138e565b5b6020026020010151604051610b439493929190611adc565b60405180910390a1505050565b82600081518110610b6457610b6361138e565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b8152600401610bc6929190611788565b6020604051808303816000875af1158015610be5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0991906117b1565b610c48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3f90611b6d565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166338ed1739838386306104b042610c9691906118c1565b6040518663ffffffff1660e01b8152600401610cb69594939291906119a2565b6000604051808303816000875af1158015610cd5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610cfe9190611a93565b507fe2986cb1b1c90b4738b5e68ac912cc7755496a2534d44578990af36848d6e5da828285600081518110610d3657610d3561138e565b5b602002602001015186600181518110610d5257610d5161138e565b5b6020026020010151604051610d6a9493929190611adc565b60405180910390a1505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610dbc610db7610db284610d77565b610d97565b610d77565b9050919050565b6000610dce82610da1565b9050919050565b6000610de082610dc3565b9050919050565b610df081610dd5565b82525050565b6000602082019050610e0b6000830184610de7565b92915050565b6000604051905090565b600080fd5b600080fd5b60008115159050919050565b610e3a81610e25565b8114610e4557600080fd5b50565b600081359050610e5781610e31565b92915050565b6000610e6882610d77565b9050919050565b610e7881610e5d565b8114610e8357600080fd5b50565b600081359050610e9581610e6f565b92915050565b6000819050919050565b610eae81610e9b565b8114610eb957600080fd5b50565b600081359050610ecb81610ea5565b92915050565b60008060008060808587031215610eeb57610eea610e1b565b5b6000610ef987828801610e48565b9450506020610f0a87828801610e86565b9350506040610f1b87828801610e86565b9250506060610f2c87828801610ebc565b91505092959194509250565b610f4181610e5d565b82525050565b6000602082019050610f5c6000830184610f38565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610fb082610f67565b810181811067ffffffffffffffff82111715610fcf57610fce610f78565b5b80604052505050565b6000610fe2610e11565b9050610fee8282610fa7565b919050565b600067ffffffffffffffff82111561100e5761100d610f78565b5b602082029050602081019050919050565b600080fd5b600061102f82610e5d565b9050919050565b61103f81611024565b811461104a57600080fd5b50565b60008135905061105c81611036565b92915050565b600061107561107084610ff3565b610fd8565b905080838252602082019050602084028301858111156110985761109761101f565b5b835b818110156110c157806110ad888261104d565b84526020840193505060208101905061109a565b5050509392505050565b600082601f8301126110e0576110df610f62565b5b81356110f0848260208601611062565b91505092915050565b600067ffffffffffffffff82111561111457611113610f78565b5b602082029050602081019050919050565b6000611138611133846110f9565b610fd8565b9050808382526020820190506020840283018581111561115b5761115a61101f565b5b835b8181101561118457806111708882610ebc565b84526020840193505060208101905061115d565b5050509392505050565b600082601f8301126111a3576111a2610f62565b5b81356111b3848260208601611125565b91505092915050565b600080fd5b600067ffffffffffffffff8211156111dc576111db610f78565b5b6111e582610f67565b9050602081019050919050565b82818337600083830152505050565b600061121461120f846111c1565b610fd8565b9050828152602081018484840111156112305761122f6111bc565b5b61123b8482856111f2565b509392505050565b600082601f83011261125857611257610f62565b5b8135611268848260208601611201565b91505092915050565b6000806000806080858703121561128b5761128a610e1b565b5b600085013567ffffffffffffffff8111156112a9576112a8610e20565b5b6112b5878288016110cb565b945050602085013567ffffffffffffffff8111156112d6576112d5610e20565b5b6112e28782880161118e565b935050604085013567ffffffffffffffff81111561130357611302610e20565b5b61130f8782880161118e565b925050606085013567ffffffffffffffff8111156113305761132f610e20565b5b61133c87828801611243565b91505092959194509250565b61135181610e25565b82525050565b600060608201905061136c6000830186611348565b6113796020830185610f38565b6113866040830184610f38565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006113c882610dc3565b9050919050565b6113d8816113bd565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061141582610dc3565b9050919050565b6114258161140a565b82525050565b6000611437838361141c565b60208301905092915050565b6000602082019050919050565b600061145b826113de565b61146581856113e9565b9350611470836113fa565b8060005b838110156114a1578151611488888261142b565b975061149383611443565b925050600181019050611474565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6114e381610e9b565b82525050565b60006114f583836114da565b60208301905092915050565b6000602082019050919050565b6000611519826114ae565b61152381856114b9565b935061152e836114ca565b8060005b8381101561155f57815161154688826114e9565b975061155183611501565b925050600181019050611532565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115a657808201518184015260208101905061158b565b60008484015250505050565b60006115bd8261156c565b6115c78185611577565b93506115d7818560208601611588565b6115e081610f67565b840191505092915050565b600060808201905061160060008301876113cf565b81810360208301526116128186611450565b90508181036040830152611626818561150e565b9050818103606083015261163a81846115b2565b905095945050505050565b61164e81610e9b565b82525050565b60006080820190506116696000830187610f38565b6116766020830186610f38565b6116836040830185611645565b818103606083015261169581846115b2565b905095945050505050565b6000815190506116af81610e31565b92915050565b60006116c082610d77565b9050919050565b6116d0816116b5565b81146116db57600080fd5b50565b6000815190506116ed816116c7565b92915050565b60008060006060848603121561170c5761170b610e1b565b5b600061171a868287016116a0565b935050602061172b868287016116de565b925050604061173c868287016116de565b9150509250925092565b60008151905061175581610ea5565b92915050565b60006020828403121561177157611770610e1b565b5b600061177f84828501611746565b91505092915050565b600060408201905061179d6000830185610f38565b6117aa6020830184611645565b9392505050565b6000602082840312156117c7576117c6610e1b565b5b60006117d5848285016116a0565b91505092915050565b60006060820190506117f36000830186610f38565b6118006020830185610f38565b61180d6040830184611645565b949350505050565b600082825260208201905092915050565b7f556e697377617020617070726f76616c206661696c65642e0000000000000000600082015250565b600061185c601883611815565b915061186782611826565b602082019050919050565b6000602082019050818103600083015261188b8161184f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118cc82610e9b565b91506118d783610e9b565b92508282019050808211156118ef576118ee611892565b5b92915050565b600081519050919050565b6000819050602082019050919050565b61191981610e5d565b82525050565b600061192b8383611910565b60208301905092915050565b6000602082019050919050565b600061194f826118f5565b61195981856113e9565b935061196483611900565b8060005b8381101561199557815161197c888261191f565b975061198783611937565b925050600181019050611968565b5085935050505092915050565b600060a0820190506119b76000830188611645565b6119c46020830187611645565b81810360408301526119d68186611944565b90506119e56060830185610f38565b6119f26080830184611645565b9695505050505050565b6000611a0f611a0a846110f9565b610fd8565b90508083825260208201905060208402830185811115611a3257611a3161101f565b5b835b81811015611a5b5780611a478882611746565b845260208401935050602081019050611a34565b5050509392505050565b600082601f830112611a7a57611a79610f62565b5b8151611a8a8482602086016119fc565b91505092915050565b600060208284031215611aa957611aa8610e1b565b5b600082015167ffffffffffffffff811115611ac757611ac6610e20565b5b611ad384828501611a65565b91505092915050565b6000608082019050611af16000830187611645565b611afe6020830186611645565b611b0b6040830185610f38565b611b186060830184610f38565b95945050505050565b7f53757368697377617020617070726f76616c206661696c65642e000000000000600082015250565b6000611b57601a83611815565b9150611b6282611b21565b602082019050919050565b60006020820190508181036000830152611b8681611b4a565b905091905056fea264697066735822122044d94bba24859130a5c962b07a47627f97225c41eb299e6bb7e9b672211f72d464736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x17C64B0 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x1395DD23 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x5CF39049 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xF04F2707 EQ PUSH2 0xD2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8F SWAP2 SWAP1 PUSH2 0xED1 JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9E PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x129 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x157 JUMPI PUSH2 0x156 PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x185 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x19D JUMPI PUSH2 0x19C PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F4 JUMPI PUSH2 0x1F3 PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x222 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x23A JUMPI PUSH2 0x239 PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH20 0xBA12222222228D8BA445958A75A0704D566BF2C8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C38449E ADDRESS DUP5 DUP5 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x299 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xBC08154B32C714572D2B71DE99AA454AC3DC272FA8314B91D111624F0F97A81C CALLER DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x300 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH20 0xBA12222222228D8BA445958A75A0704D566BF2C8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x16F3 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x401 JUMPI PUSH2 0x400 PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x42F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x447 JUMPI PUSH2 0x446 PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x496 JUMPI PUSH2 0x495 PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 ISZERO PUSH2 0x609 JUMPI PUSH2 0x4E2 DUP2 DUP7 PUSH1 0x0 PUSH2 0x929 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4F7 JUMPI PUSH2 0x4F6 PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x546 JUMPI PUSH2 0x545 PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x604 DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FE SWAP2 SWAP1 PUSH2 0x175B JUMP JUMPDEST DUP8 PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x738 JUMP JUMPDEST PUSH2 0x615 DUP2 DUP7 PUSH1 0x0 PUSH2 0xB50 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x62A JUMPI PUSH2 0x629 PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x679 JUMPI PUSH2 0x678 PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x737 DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x70D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x731 SWAP2 SWAP1 PUSH2 0x175B JUMP JUMPDEST DUP8 PUSH2 0x929 JUMP JUMPDEST JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH20 0xBA12222222228D8BA445958A75A0704D566BF2C8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x787 SWAP3 SWAP2 SWAP1 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CA SWAP2 SWAP1 PUSH2 0x17B1 JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x841 SWAP2 SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x85E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89F SWAP3 SWAP2 SWAP1 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x17B1 JUMP JUMPDEST POP PUSH32 0x3931DE709F834E3C094757D8879EA96BACC21F497AF9F966091E950137D6B775 CALLER DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0x916 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x93D JUMPI PUSH2 0x93C PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99F SWAP3 SWAP2 SWAP1 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E2 SWAP2 SWAP1 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0xA21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA18 SWAP1 PUSH2 0x1872 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x38ED1739 DUP4 DUP4 DUP7 ADDRESS PUSH2 0x4B0 TIMESTAMP PUSH2 0xA6F SWAP2 SWAP1 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAAE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD7 SWAP2 SWAP1 PUSH2 0x1A93 JUMP JUMPDEST POP PUSH32 0xBA449DEC4E0CDB46F4C0DF435AEBA7A018F35F2CDC4F3B160410BE52DBBE207C DUP3 DUP3 DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB0F JUMPI PUSH2 0xB0E PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xB2B JUMPI PUSH2 0xB2A PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xB43 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ADC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB64 JUMPI PUSH2 0xB63 PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC6 SWAP3 SWAP2 SWAP1 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0xC48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3F SWAP1 PUSH2 0x1B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x38ED1739 DUP4 DUP4 DUP7 ADDRESS PUSH2 0x4B0 TIMESTAMP PUSH2 0xC96 SWAP2 SWAP1 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB6 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCFE SWAP2 SWAP1 PUSH2 0x1A93 JUMP JUMPDEST POP PUSH32 0xE2986CB1B1C90B4738B5E68AC912CC7755496A2534D44578990AF36848D6E5DA DUP3 DUP3 DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD36 JUMPI PUSH2 0xD35 PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xD52 JUMPI PUSH2 0xD51 PUSH2 0x138E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xD6A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1ADC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBC PUSH2 0xDB7 PUSH2 0xDB2 DUP5 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0xD97 JUMP JUMPDEST PUSH2 0xD77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDCE DUP3 PUSH2 0xDA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE0 DUP3 PUSH2 0xDC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF0 DUP2 PUSH2 0xDD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE0B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE3A DUP2 PUSH2 0xE25 JUMP JUMPDEST DUP2 EQ PUSH2 0xE45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE57 DUP2 PUSH2 0xE31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE68 DUP3 PUSH2 0xD77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE78 DUP2 PUSH2 0xE5D JUMP JUMPDEST DUP2 EQ PUSH2 0xE83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE95 DUP2 PUSH2 0xE6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAE DUP2 PUSH2 0xE9B JUMP JUMPDEST DUP2 EQ PUSH2 0xEB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xECB DUP2 PUSH2 0xEA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEEB JUMPI PUSH2 0xEEA PUSH2 0xE1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEF9 DUP8 DUP3 DUP9 ADD PUSH2 0xE48 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xF0A DUP8 DUP3 DUP9 ADD PUSH2 0xE86 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xF1B DUP8 DUP3 DUP9 ADD PUSH2 0xE86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xF2C DUP8 DUP3 DUP9 ADD PUSH2 0xEBC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0xF41 DUP2 PUSH2 0xE5D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF5C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xFB0 DUP3 PUSH2 0xF67 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xFCF JUMPI PUSH2 0xFCE PUSH2 0xF78 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE2 PUSH2 0xE11 JUMP JUMPDEST SWAP1 POP PUSH2 0xFEE DUP3 DUP3 PUSH2 0xFA7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x100E JUMPI PUSH2 0x100D PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x102F DUP3 PUSH2 0xE5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x103F DUP2 PUSH2 0x1024 JUMP JUMPDEST DUP2 EQ PUSH2 0x104A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x105C DUP2 PUSH2 0x1036 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1075 PUSH2 0x1070 DUP5 PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0xFD8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1098 JUMPI PUSH2 0x1097 PUSH2 0x101F JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10C1 JUMPI DUP1 PUSH2 0x10AD DUP9 DUP3 PUSH2 0x104D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x109A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10E0 JUMPI PUSH2 0x10DF PUSH2 0xF62 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x10F0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1062 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1114 JUMPI PUSH2 0x1113 PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1138 PUSH2 0x1133 DUP5 PUSH2 0x10F9 JUMP JUMPDEST PUSH2 0xFD8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x115B JUMPI PUSH2 0x115A PUSH2 0x101F JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1184 JUMPI DUP1 PUSH2 0x1170 DUP9 DUP3 PUSH2 0xEBC JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x115D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11A3 JUMPI PUSH2 0x11A2 PUSH2 0xF62 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11B3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1125 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x11DC JUMPI PUSH2 0x11DB PUSH2 0xF78 JUMP JUMPDEST JUMPDEST PUSH2 0x11E5 DUP3 PUSH2 0xF67 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1214 PUSH2 0x120F DUP5 PUSH2 0x11C1 JUMP JUMPDEST PUSH2 0xFD8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1230 JUMPI PUSH2 0x122F PUSH2 0x11BC JUMP JUMPDEST JUMPDEST PUSH2 0x123B DUP5 DUP3 DUP6 PUSH2 0x11F2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1258 JUMPI PUSH2 0x1257 PUSH2 0xF62 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1268 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1201 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x128B JUMPI PUSH2 0x128A PUSH2 0xE1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12A9 JUMPI PUSH2 0x12A8 PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH2 0x12B5 DUP8 DUP3 DUP9 ADD PUSH2 0x10CB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12D6 JUMPI PUSH2 0x12D5 PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH2 0x12E2 DUP8 DUP3 DUP9 ADD PUSH2 0x118E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1303 JUMPI PUSH2 0x1302 PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH2 0x130F DUP8 DUP3 DUP9 ADD PUSH2 0x118E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1330 JUMPI PUSH2 0x132F PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH2 0x133C DUP8 DUP3 DUP9 ADD PUSH2 0x1243 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1351 DUP2 PUSH2 0xE25 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x136C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x1379 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x1386 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF38 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13C8 DUP3 PUSH2 0xDC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13D8 DUP2 PUSH2 0x13BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1415 DUP3 PUSH2 0xDC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1425 DUP2 PUSH2 0x140A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1437 DUP4 DUP4 PUSH2 0x141C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x145B DUP3 PUSH2 0x13DE JUMP JUMPDEST PUSH2 0x1465 DUP2 DUP6 PUSH2 0x13E9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1470 DUP4 PUSH2 0x13FA JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14A1 JUMPI DUP2 MLOAD PUSH2 0x1488 DUP9 DUP3 PUSH2 0x142B JUMP JUMPDEST SWAP8 POP PUSH2 0x1493 DUP4 PUSH2 0x1443 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1474 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E3 DUP2 PUSH2 0xE9B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F5 DUP4 DUP4 PUSH2 0x14DA JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1519 DUP3 PUSH2 0x14AE JUMP JUMPDEST PUSH2 0x1523 DUP2 DUP6 PUSH2 0x14B9 JUMP JUMPDEST SWAP4 POP PUSH2 0x152E DUP4 PUSH2 0x14CA JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x155F JUMPI DUP2 MLOAD PUSH2 0x1546 DUP9 DUP3 PUSH2 0x14E9 JUMP JUMPDEST SWAP8 POP PUSH2 0x1551 DUP4 PUSH2 0x1501 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1532 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15A6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x158B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15BD DUP3 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x15C7 DUP2 DUP6 PUSH2 0x1577 JUMP JUMPDEST SWAP4 POP PUSH2 0x15D7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x15E0 DUP2 PUSH2 0xF67 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1600 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x13CF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1612 DUP2 DUP7 PUSH2 0x1450 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1626 DUP2 DUP6 PUSH2 0x150E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x163A DUP2 DUP5 PUSH2 0x15B2 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x164E DUP2 PUSH2 0xE9B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1669 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x1676 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x1683 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1645 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1695 DUP2 DUP5 PUSH2 0x15B2 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16AF DUP2 PUSH2 0xE31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C0 DUP3 PUSH2 0xD77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D0 DUP2 PUSH2 0x16B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x16DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x16ED DUP2 PUSH2 0x16C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x170C JUMPI PUSH2 0x170B PUSH2 0xE1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x171A DUP7 DUP3 DUP8 ADD PUSH2 0x16A0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x172B DUP7 DUP3 DUP8 ADD PUSH2 0x16DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x173C DUP7 DUP3 DUP8 ADD PUSH2 0x16DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1755 DUP2 PUSH2 0xEA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1771 JUMPI PUSH2 0x1770 PUSH2 0xE1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x177F DUP5 DUP3 DUP6 ADD PUSH2 0x1746 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x179D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x17AA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1645 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C7 JUMPI PUSH2 0x17C6 PUSH2 0xE1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17D5 DUP5 DUP3 DUP6 ADD PUSH2 0x16A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17F3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x1800 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x180D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1645 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x556E697377617020617070726F76616C206661696C65642E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x185C PUSH1 0x18 DUP4 PUSH2 0x1815 JUMP JUMPDEST SWAP2 POP PUSH2 0x1867 DUP3 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x188B DUP2 PUSH2 0x184F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18CC DUP3 PUSH2 0xE9B JUMP JUMPDEST SWAP2 POP PUSH2 0x18D7 DUP4 PUSH2 0xE9B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x18EF JUMPI PUSH2 0x18EE PUSH2 0x1892 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1919 DUP2 PUSH2 0xE5D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192B DUP4 DUP4 PUSH2 0x1910 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194F DUP3 PUSH2 0x18F5 JUMP JUMPDEST PUSH2 0x1959 DUP2 DUP6 PUSH2 0x13E9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1964 DUP4 PUSH2 0x1900 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1995 JUMPI DUP2 MLOAD PUSH2 0x197C DUP9 DUP3 PUSH2 0x191F JUMP JUMPDEST SWAP8 POP PUSH2 0x1987 DUP4 PUSH2 0x1937 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1968 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x19B7 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1645 JUMP JUMPDEST PUSH2 0x19C4 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1645 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x19D6 DUP2 DUP7 PUSH2 0x1944 JUMP JUMPDEST SWAP1 POP PUSH2 0x19E5 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x19F2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1645 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0F PUSH2 0x1A0A DUP5 PUSH2 0x10F9 JUMP JUMPDEST PUSH2 0xFD8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1A32 JUMPI PUSH2 0x1A31 PUSH2 0x101F JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A5B JUMPI DUP1 PUSH2 0x1A47 DUP9 DUP3 PUSH2 0x1746 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A34 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A7A JUMPI PUSH2 0x1A79 PUSH2 0xF62 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1A8A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x19FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AA9 JUMPI PUSH2 0x1AA8 PUSH2 0xE1B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AC7 JUMPI PUSH2 0x1AC6 PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH2 0x1AD3 DUP5 DUP3 DUP6 ADD PUSH2 0x1A65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1AF1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1645 JUMP JUMPDEST PUSH2 0x1AFE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1645 JUMP JUMPDEST PUSH2 0x1B0B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF38 JUMP JUMPDEST PUSH2 0x1B18 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xF38 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x53757368697377617020617070726F76616C206661696C65642E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B57 PUSH1 0x1A DUP4 PUSH2 0x1815 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B62 DUP3 PUSH2 0x1B21 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B86 DUP2 PUSH2 0x1B4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO 0xD9 0x4B 0xBA 0x24 DUP6 SWAP2 ADDRESS 0xA5 0xC9 PUSH3 0xB07A47 PUSH3 0x7F9722 0x5C COINBASE 0xEB 0x29 SWAP15 PUSH12 0xB7E9B672211F72D464736F6C PUSH4 0x43000812 STOP CALLER ","sourceMap":"286:4048:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;431:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1229:634;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;480:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;529:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1869:1357;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;431:43;;;:::o;1229:634::-;1386:17;1417:15;1434:7;1443;1406:45;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1386:65;;1535:22;1573:1;1560:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1535:40;;1604:7;1585:6;1592:1;1585:9;;;;;;;;:::i;:::-;;;;;;;:27;;;;;;;;;;;1653:24;1694:1;1680:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1653:43;;1719:12;1706:7;1714:1;1706:10;;;;;;;;:::i;:::-;;;;;;;:25;;;;;381:42;1742:15;;;1758:4;1764:6;1772:7;1781:4;1742:44;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:54;1816:10;1828:7;1837:12;1851:4;1802:54;;;;;;;;;:::i;:::-;;;;;;;;1376:487;;;1229:634;;;;:::o;480:43::-;;;:::o;529:20::-;;;;;;;;;;;;:::o;1869:1357::-;381:42;2071:28;;:10;:28;;;2063:37;;;;;;2111:19;2133:7;2141:1;2133:10;;;;;;;;:::i;:::-;;;;;;;;2111:32;;2155:19;2176:14;2192;2234:8;2210:80;;;;;;;;;;;;:::i;:::-;2154:136;;;;;;2332:21;2370:1;2356:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2332:40;;2393:6;2383:4;2388:1;2383:7;;;;;;;;:::i;:::-;;;;;;;:16;;;;;;;;;;;2419:6;2409:4;2414:1;2409:7;;;;;;;;:::i;:::-;;;;;;;:16;;;;;;;;;;;2440:14;2436:576;;;2470:36;2485:4;2491:11;2504:1;2470:14;:36::i;:::-;2531:6;2521:4;2526:1;2521:7;;;;;;;;:::i;:::-;;;;;;;:16;;;;;;;;;;;2561:6;2551:4;2556:1;2551:7;;;;;;;;:::i;:::-;;;;;;;:16;;;;;;;;;;;2582:138;2616:4;2645:6;2638:24;;;2671:4;2638:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2695:11;2582:16;:138::i;:::-;2436:576;;;2751:38;2768:4;2774:11;2787:1;2751:16;:38::i;:::-;2814:6;2804:4;2809:1;2804:7;;;;;;;;:::i;:::-;;;;;;;:16;;;;;;;;;;;2844:6;2834:4;2839:1;2834:7;;;;;;;;:::i;:::-;;;;;;;:16;;;;;;;;;;;2865:136;2897:4;2926:6;2919:24;;;2952:4;2919:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2976:11;2865:14;:136::i;:::-;2436:576;3029:6;3022:23;;;381:42;3062:11;3022:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3092:6;3085:23;;;3109:5;;;;;;;;;;3123:6;3116:24;;;3149:4;3116:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3085:71;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3172:47;3187:10;3199:6;3207:11;3172:47;;;;;;;;:::i;:::-;;;;;;;;2053:1173;;;;;1869:1357;;;;:::o;3268:526::-;3432:5;3438:1;3432:8;;;;;;;;:::i;:::-;;;;;;;;3425:24;;;3458:7;3468:9;3425:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3404:124;;;;;;;;;;;;:::i;:::-;;;;;;;;;3539:7;:32;;;3585:9;3608:10;3632:5;3659:4;3697;3679:15;:22;;;;:::i;:::-;3539:173;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3728:59;3745:9;3756:10;3768:5;3774:1;3768:8;;;;;;;;:::i;:::-;;;;;;;;3778:5;3784:1;3778:8;;;;;;;;:::i;:::-;;;;;;;;3728:59;;;;;;;;;:::i;:::-;;;;;;;;3268:526;;;:::o;3800:532::-;3966:5;3972:1;3966:8;;;;;;;;:::i;:::-;;;;;;;;3959:24;;;3992:7;4002:9;3959:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3938:126;;;;;;;;;;;;:::i;:::-;;;;;;;;;4075:7;:32;;;4121:9;4144:10;4168:5;4195:4;4233;4215:15;:22;;;;:::i;:::-;4075:173;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4264:61;4283:9;4294:10;4306:5;4312:1;4306:8;;;;;;;;:::i;:::-;;;;;;;;4316:5;4322:1;4316:8;;;;;;;;:::i;:::-;;;;;;;;4264:61;;;;;;;;;:::i;:::-;;;;;;;;3800:532;;;:::o;7:126:13:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:153::-;562:9;595:37;626:5;595:37;:::i;:::-;582:50;;485:153;;;:::o;644:185::-;758:64;816:5;758:64;:::i;:::-;753:3;746:77;644:185;;:::o;835:276::-;955:4;993:2;982:9;978:18;970:26;;1006:98;1101:1;1090:9;1086:17;1077:6;1006:98;:::i;:::-;835:276;;;;:::o;1117:75::-;1150:6;1183:2;1177:9;1167:19;;1117:75;:::o;1198:117::-;1307:1;1304;1297:12;1321:117;1430:1;1427;1420:12;1444:90;1478:7;1521:5;1514:13;1507:21;1496:32;;1444:90;;;:::o;1540:116::-;1610:21;1625:5;1610:21;:::i;:::-;1603:5;1600:32;1590:60;;1646:1;1643;1636:12;1590:60;1540:116;:::o;1662:133::-;1705:5;1743:6;1730:20;1721:29;;1759:30;1783:5;1759:30;:::i;:::-;1662:133;;;;:::o;1801:96::-;1838:7;1867:24;1885:5;1867:24;:::i;:::-;1856:35;;1801:96;;;:::o;1903:122::-;1976:24;1994:5;1976:24;:::i;:::-;1969:5;1966:35;1956:63;;2015:1;2012;2005:12;1956:63;1903:122;:::o;2031:139::-;2077:5;2115:6;2102:20;2093:29;;2131:33;2158:5;2131:33;:::i;:::-;2031:139;;;;:::o;2176:77::-;2213:7;2242:5;2231:16;;2176:77;;;:::o;2259:122::-;2332:24;2350:5;2332:24;:::i;:::-;2325:5;2322:35;2312:63;;2371:1;2368;2361:12;2312:63;2259:122;:::o;2387:139::-;2433:5;2471:6;2458:20;2449:29;;2487:33;2514:5;2487:33;:::i;:::-;2387:139;;;;:::o;2532:759::-;2615:6;2623;2631;2639;2688:3;2676:9;2667:7;2663:23;2659:33;2656:120;;;2695:79;;:::i;:::-;2656:120;2815:1;2840:50;2882:7;2873:6;2862:9;2858:22;2840:50;:::i;:::-;2830:60;;2786:114;2939:2;2965:53;3010:7;3001:6;2990:9;2986:22;2965:53;:::i;:::-;2955:63;;2910:118;3067:2;3093:53;3138:7;3129:6;3118:9;3114:22;3093:53;:::i;:::-;3083:63;;3038:118;3195:2;3221:53;3266:7;3257:6;3246:9;3242:22;3221:53;:::i;:::-;3211:63;;3166:118;2532:759;;;;;;;:::o;3297:118::-;3384:24;3402:5;3384:24;:::i;:::-;3379:3;3372:37;3297:118;;:::o;3421:222::-;3514:4;3552:2;3541:9;3537:18;3529:26;;3565:71;3633:1;3622:9;3618:17;3609:6;3565:71;:::i;:::-;3421:222;;;;:::o;3649:117::-;3758:1;3755;3748:12;3772:102;3813:6;3864:2;3860:7;3855:2;3848:5;3844:14;3840:28;3830:38;;3772:102;;;:::o;3880:180::-;3928:77;3925:1;3918:88;4025:4;4022:1;4015:15;4049:4;4046:1;4039:15;4066:281;4149:27;4171:4;4149:27;:::i;:::-;4141:6;4137:40;4279:6;4267:10;4264:22;4243:18;4231:10;4228:34;4225:62;4222:88;;;4290:18;;:::i;:::-;4222:88;4330:10;4326:2;4319:22;4109:238;4066:281;;:::o;4353:129::-;4387:6;4414:20;;:::i;:::-;4404:30;;4443:33;4471:4;4463:6;4443:33;:::i;:::-;4353:129;;;:::o;4488:325::-;4579:4;4669:18;4661:6;4658:30;4655:56;;;4691:18;;:::i;:::-;4655:56;4741:4;4733:6;4729:17;4721:25;;4801:4;4795;4791:15;4783:23;;4488:325;;;:::o;4819:117::-;4928:1;4925;4918:12;4942:110;4993:7;5022:24;5040:5;5022:24;:::i;:::-;5011:35;;4942:110;;;:::o;5058:150::-;5145:38;5177:5;5145:38;:::i;:::-;5138:5;5135:49;5125:77;;5198:1;5195;5188:12;5125:77;5058:150;:::o;5214:167::-;5274:5;5312:6;5299:20;5290:29;;5328:47;5369:5;5328:47;:::i;:::-;5214:167;;;;:::o;5412:752::-;5522:5;5547:95;5563:78;5634:6;5563:78;:::i;:::-;5547:95;:::i;:::-;5538:104;;5662:5;5691:6;5684:5;5677:21;5725:4;5718:5;5714:16;5707:23;;5778:4;5770:6;5766:17;5758:6;5754:30;5807:3;5799:6;5796:15;5793:122;;;5826:79;;:::i;:::-;5793:122;5941:6;5924:234;5958:6;5953:3;5950:15;5924:234;;;6033:3;6062:51;6109:3;6097:10;6062:51;:::i;:::-;6057:3;6050:64;6143:4;6138:3;6134:14;6127:21;;6000:158;5984:4;5979:3;5975:14;5968:21;;5924:234;;;5928:21;5528:636;;5412:752;;;;;:::o;6195:398::-;6280:5;6329:3;6322:4;6314:6;6310:17;6306:27;6296:122;;6337:79;;:::i;:::-;6296:122;6454:6;6441:20;6479:108;6583:3;6575:6;6568:4;6560:6;6556:17;6479:108;:::i;:::-;6470:117;;6286:307;6195:398;;;;:::o;6599:311::-;6676:4;6766:18;6758:6;6755:30;6752:56;;;6788:18;;:::i;:::-;6752:56;6838:4;6830:6;6826:17;6818:25;;6898:4;6892;6888:15;6880:23;;6599:311;;;:::o;6933:710::-;7029:5;7054:81;7070:64;7127:6;7070:64;:::i;:::-;7054:81;:::i;:::-;7045:90;;7155:5;7184:6;7177:5;7170:21;7218:4;7211:5;7207:16;7200:23;;7271:4;7263:6;7259:17;7251:6;7247:30;7300:3;7292:6;7289:15;7286:122;;;7319:79;;:::i;:::-;7286:122;7434:6;7417:220;7451:6;7446:3;7443:15;7417:220;;;7526:3;7555:37;7588:3;7576:10;7555:37;:::i;:::-;7550:3;7543:50;7622:4;7617:3;7613:14;7606:21;;7493:144;7477:4;7472:3;7468:14;7461:21;;7417:220;;;7421:21;7035:608;;6933:710;;;;;:::o;7666:370::-;7737:5;7786:3;7779:4;7771:6;7767:17;7763:27;7753:122;;7794:79;;:::i;:::-;7753:122;7911:6;7898:20;7936:94;8026:3;8018:6;8011:4;8003:6;7999:17;7936:94;:::i;:::-;7927:103;;7743:293;7666:370;;;;:::o;8042:117::-;8151:1;8148;8141:12;8165:307;8226:4;8316:18;8308:6;8305:30;8302:56;;;8338:18;;:::i;:::-;8302:56;8376:29;8398:6;8376:29;:::i;:::-;8368:37;;8460:4;8454;8450:15;8442:23;;8165:307;;;:::o;8478:146::-;8575:6;8570:3;8565;8552:30;8616:1;8607:6;8602:3;8598:16;8591:27;8478:146;;;:::o;8630:423::-;8707:5;8732:65;8748:48;8789:6;8748:48;:::i;:::-;8732:65;:::i;:::-;8723:74;;8820:6;8813:5;8806:21;8858:4;8851:5;8847:16;8896:3;8887:6;8882:3;8878:16;8875:25;8872:112;;;8903:79;;:::i;:::-;8872:112;8993:54;9040:6;9035:3;9030;8993:54;:::i;:::-;8713:340;8630:423;;;;;:::o;9072:338::-;9127:5;9176:3;9169:4;9161:6;9157:17;9153:27;9143:122;;9184:79;;:::i;:::-;9143:122;9301:6;9288:20;9326:78;9400:3;9392:6;9385:4;9377:6;9373:17;9326:78;:::i;:::-;9317:87;;9133:277;9072:338;;;;:::o;9416:1601::-;9600:6;9608;9616;9624;9673:3;9661:9;9652:7;9648:23;9644:33;9641:120;;;9680:79;;:::i;:::-;9641:120;9828:1;9817:9;9813:17;9800:31;9858:18;9850:6;9847:30;9844:117;;;9880:79;;:::i;:::-;9844:117;9985:92;10069:7;10060:6;10049:9;10045:22;9985:92;:::i;:::-;9975:102;;9771:316;10154:2;10143:9;10139:18;10126:32;10185:18;10177:6;10174:30;10171:117;;;10207:79;;:::i;:::-;10171:117;10312:78;10382:7;10373:6;10362:9;10358:22;10312:78;:::i;:::-;10302:88;;10097:303;10467:2;10456:9;10452:18;10439:32;10498:18;10490:6;10487:30;10484:117;;;10520:79;;:::i;:::-;10484:117;10625:78;10695:7;10686:6;10675:9;10671:22;10625:78;:::i;:::-;10615:88;;10410:303;10780:2;10769:9;10765:18;10752:32;10811:18;10803:6;10800:30;10797:117;;;10833:79;;:::i;:::-;10797:117;10938:62;10992:7;10983:6;10972:9;10968:22;10938:62;:::i;:::-;10928:72;;10723:287;9416:1601;;;;;;;:::o;11023:109::-;11104:21;11119:5;11104:21;:::i;:::-;11099:3;11092:34;11023:109;;:::o;11138:430::-;11281:4;11319:2;11308:9;11304:18;11296:26;;11332:65;11394:1;11383:9;11379:17;11370:6;11332:65;:::i;:::-;11407:72;11475:2;11464:9;11460:18;11451:6;11407:72;:::i;:::-;11489;11557:2;11546:9;11542:18;11533:6;11489:72;:::i;:::-;11138:430;;;;;;:::o;11574:180::-;11622:77;11619:1;11612:88;11719:4;11716:1;11709:15;11743:4;11740:1;11733:15;11760:144;11828:9;11861:37;11892:5;11861:37;:::i;:::-;11848:50;;11760:144;;;:::o;11910:167::-;12015:55;12064:5;12015:55;:::i;:::-;12010:3;12003:68;11910:167;;:::o;12083:128::-;12164:6;12198:5;12192:12;12182:22;;12083:128;;;:::o;12217:184::-;12316:11;12350:6;12345:3;12338:19;12390:4;12385:3;12381:14;12366:29;;12217:184;;;;:::o;12407:146::-;12488:4;12511:3;12503:11;;12541:4;12536:3;12532:14;12524:22;;12407:146;;;:::o;12559:140::-;12623:9;12656:37;12687:5;12656:37;:::i;:::-;12643:50;;12559:140;;;:::o;12705:149::-;12796:51;12841:5;12796:51;:::i;:::-;12791:3;12784:64;12705:149;;:::o;12860:207::-;12943:10;12964:60;13020:3;13012:6;12964:60;:::i;:::-;13056:4;13051:3;13047:14;13033:28;;12860:207;;;;:::o;13073:127::-;13157:4;13189;13184:3;13180:14;13172:22;;13073:127;;;:::o;13244:802::-;13377:3;13406:68;13468:5;13406:68;:::i;:::-;13490:86;13569:6;13564:3;13490:86;:::i;:::-;13483:93;;13600:70;13664:5;13600:70;:::i;:::-;13693:7;13724:1;13709:312;13734:6;13731:1;13728:13;13709:312;;;13810:6;13804:13;13837:77;13910:3;13895:13;13837:77;:::i;:::-;13830:84;;13937:74;14004:6;13937:74;:::i;:::-;13927:84;;13769:252;13756:1;13753;13749:9;13744:14;;13709:312;;;13713:14;14037:3;14030:10;;13382:664;;;13244:802;;;;:::o;14052:114::-;14119:6;14153:5;14147:12;14137:22;;14052:114;;;:::o;14172:184::-;14271:11;14305:6;14300:3;14293:19;14345:4;14340:3;14336:14;14321:29;;14172:184;;;;:::o;14362:132::-;14429:4;14452:3;14444:11;;14482:4;14477:3;14473:14;14465:22;;14362:132;;;:::o;14500:108::-;14577:24;14595:5;14577:24;:::i;:::-;14572:3;14565:37;14500:108;;:::o;14614:179::-;14683:10;14704:46;14746:3;14738:6;14704:46;:::i;:::-;14782:4;14777:3;14773:14;14759:28;;14614:179;;;;:::o;14799:113::-;14869:4;14901;14896:3;14892:14;14884:22;;14799:113;;;:::o;14948:732::-;15067:3;15096:54;15144:5;15096:54;:::i;:::-;15166:86;15245:6;15240:3;15166:86;:::i;:::-;15159:93;;15276:56;15326:5;15276:56;:::i;:::-;15355:7;15386:1;15371:284;15396:6;15393:1;15390:13;15371:284;;;15472:6;15466:13;15499:63;15558:3;15543:13;15499:63;:::i;:::-;15492:70;;15585:60;15638:6;15585:60;:::i;:::-;15575:70;;15431:224;15418:1;15415;15411:9;15406:14;;15371:284;;;15375:14;15671:3;15664:10;;15072:608;;;14948:732;;;;:::o;15686:98::-;15737:6;15771:5;15765:12;15755:22;;15686:98;;;:::o;15790:168::-;15873:11;15907:6;15902:3;15895:19;15947:4;15942:3;15938:14;15923:29;;15790:168;;;;:::o;15964:246::-;16045:1;16055:113;16069:6;16066:1;16063:13;16055:113;;;16154:1;16149:3;16145:11;16139:18;16135:1;16130:3;16126:11;16119:39;16091:2;16088:1;16084:10;16079:15;;16055:113;;;16202:1;16193:6;16188:3;16184:16;16177:27;16026:184;15964:246;;;:::o;16216:373::-;16302:3;16330:38;16362:5;16330:38;:::i;:::-;16384:70;16447:6;16442:3;16384:70;:::i;:::-;16377:77;;16463:65;16521:6;16516:3;16509:4;16502:5;16498:16;16463:65;:::i;:::-;16553:29;16575:6;16553:29;:::i;:::-;16548:3;16544:39;16537:46;;16306:283;16216:373;;;;:::o;16595:1006::-;16922:4;16960:3;16949:9;16945:19;16937:27;;16974:89;17060:1;17049:9;17045:17;17036:6;16974:89;:::i;:::-;17110:9;17104:4;17100:20;17095:2;17084:9;17080:18;17073:48;17138:122;17255:4;17246:6;17138:122;:::i;:::-;17130:130;;17307:9;17301:4;17297:20;17292:2;17281:9;17277:18;17270:48;17335:108;17438:4;17429:6;17335:108;:::i;:::-;17327:116;;17490:9;17484:4;17480:20;17475:2;17464:9;17460:18;17453:48;17518:76;17589:4;17580:6;17518:76;:::i;:::-;17510:84;;16595:1006;;;;;;;:::o;17607:118::-;17694:24;17712:5;17694:24;:::i;:::-;17689:3;17682:37;17607:118;;:::o;17731:640::-;17926:4;17964:3;17953:9;17949:19;17941:27;;17978:71;18046:1;18035:9;18031:17;18022:6;17978:71;:::i;:::-;18059:72;18127:2;18116:9;18112:18;18103:6;18059:72;:::i;:::-;18141;18209:2;18198:9;18194:18;18185:6;18141:72;:::i;:::-;18260:9;18254:4;18250:20;18245:2;18234:9;18230:18;18223:48;18288:76;18359:4;18350:6;18288:76;:::i;:::-;18280:84;;17731:640;;;;;;;:::o;18377:137::-;18431:5;18462:6;18456:13;18447:22;;18478:30;18502:5;18478:30;:::i;:::-;18377:137;;;;:::o;18520:104::-;18565:7;18594:24;18612:5;18594:24;:::i;:::-;18583:35;;18520:104;;;:::o;18630:138::-;18711:32;18737:5;18711:32;:::i;:::-;18704:5;18701:43;18691:71;;18758:1;18755;18748:12;18691:71;18630:138;:::o;18774:159::-;18839:5;18870:6;18864:13;18855:22;;18886:41;18921:5;18886:41;:::i;:::-;18774:159;;;;:::o;18939:689::-;19040:6;19048;19056;19105:2;19093:9;19084:7;19080:23;19076:32;19073:119;;;19111:79;;:::i;:::-;19073:119;19231:1;19256:61;19309:7;19300:6;19289:9;19285:22;19256:61;:::i;:::-;19246:71;;19202:125;19366:2;19392:72;19456:7;19447:6;19436:9;19432:22;19392:72;:::i;:::-;19382:82;;19337:137;19513:2;19539:72;19603:7;19594:6;19583:9;19579:22;19539:72;:::i;:::-;19529:82;;19484:137;18939:689;;;;;:::o;19634:143::-;19691:5;19722:6;19716:13;19707:22;;19738:33;19765:5;19738:33;:::i;:::-;19634:143;;;;:::o;19783:351::-;19853:6;19902:2;19890:9;19881:7;19877:23;19873:32;19870:119;;;19908:79;;:::i;:::-;19870:119;20028:1;20053:64;20109:7;20100:6;20089:9;20085:22;20053:64;:::i;:::-;20043:74;;19999:128;19783:351;;;;:::o;20140:332::-;20261:4;20299:2;20288:9;20284:18;20276:26;;20312:71;20380:1;20369:9;20365:17;20356:6;20312:71;:::i;:::-;20393:72;20461:2;20450:9;20446:18;20437:6;20393:72;:::i;:::-;20140:332;;;;;:::o;20478:345::-;20545:6;20594:2;20582:9;20573:7;20569:23;20565:32;20562:119;;;20600:79;;:::i;:::-;20562:119;20720:1;20745:61;20798:7;20789:6;20778:9;20774:22;20745:61;:::i;:::-;20735:71;;20691:125;20478:345;;;;:::o;20829:442::-;20978:4;21016:2;21005:9;21001:18;20993:26;;21029:71;21097:1;21086:9;21082:17;21073:6;21029:71;:::i;:::-;21110:72;21178:2;21167:9;21163:18;21154:6;21110:72;:::i;:::-;21192;21260:2;21249:9;21245:18;21236:6;21192:72;:::i;:::-;20829:442;;;;;;:::o;21277:169::-;21361:11;21395:6;21390:3;21383:19;21435:4;21430:3;21426:14;21411:29;;21277:169;;;;:::o;21452:174::-;21592:26;21588:1;21580:6;21576:14;21569:50;21452:174;:::o;21632:366::-;21774:3;21795:67;21859:2;21854:3;21795:67;:::i;:::-;21788:74;;21871:93;21960:3;21871:93;:::i;:::-;21989:2;21984:3;21980:12;21973:19;;21632:366;;;:::o;22004:419::-;22170:4;22208:2;22197:9;22193:18;22185:26;;22257:9;22251:4;22247:20;22243:1;22232:9;22228:17;22221:47;22285:131;22411:4;22285:131;:::i;:::-;22277:139;;22004:419;;;:::o;22429:180::-;22477:77;22474:1;22467:88;22574:4;22571:1;22564:15;22598:4;22595:1;22588:15;22615:191;22655:3;22674:20;22692:1;22674:20;:::i;:::-;22669:25;;22708:20;22726:1;22708:20;:::i;:::-;22703:25;;22751:1;22748;22744:9;22737:16;;22772:3;22769:1;22766:10;22763:36;;;22779:18;;:::i;:::-;22763:36;22615:191;;;;:::o;22812:114::-;22879:6;22913:5;22907:12;22897:22;;22812:114;;;:::o;22932:132::-;22999:4;23022:3;23014:11;;23052:4;23047:3;23043:14;23035:22;;22932:132;;;:::o;23070:108::-;23147:24;23165:5;23147:24;:::i;:::-;23142:3;23135:37;23070:108;;:::o;23184:179::-;23253:10;23274:46;23316:3;23308:6;23274:46;:::i;:::-;23352:4;23347:3;23343:14;23329:28;;23184:179;;;;:::o;23369:113::-;23439:4;23471;23466:3;23462:14;23454:22;;23369:113;;;:::o;23518:732::-;23637:3;23666:54;23714:5;23666:54;:::i;:::-;23736:86;23815:6;23810:3;23736:86;:::i;:::-;23729:93;;23846:56;23896:5;23846:56;:::i;:::-;23925:7;23956:1;23941:284;23966:6;23963:1;23960:13;23941:284;;;24042:6;24036:13;24069:63;24128:3;24113:13;24069:63;:::i;:::-;24062:70;;24155:60;24208:6;24155:60;:::i;:::-;24145:70;;24001:224;23988:1;23985;23981:9;23976:14;;23941:284;;;23945:14;24241:3;24234:10;;23642:608;;;23518:732;;;;:::o;24256:815::-;24511:4;24549:3;24538:9;24534:19;24526:27;;24563:71;24631:1;24620:9;24616:17;24607:6;24563:71;:::i;:::-;24644:72;24712:2;24701:9;24697:18;24688:6;24644:72;:::i;:::-;24763:9;24757:4;24753:20;24748:2;24737:9;24733:18;24726:48;24791:108;24894:4;24885:6;24791:108;:::i;:::-;24783:116;;24909:72;24977:2;24966:9;24962:18;24953:6;24909:72;:::i;:::-;24991:73;25059:3;25048:9;25044:19;25035:6;24991:73;:::i;:::-;24256:815;;;;;;;;:::o;25094:732::-;25201:5;25226:81;25242:64;25299:6;25242:64;:::i;:::-;25226:81;:::i;:::-;25217:90;;25327:5;25356:6;25349:5;25342:21;25390:4;25383:5;25379:16;25372:23;;25443:4;25435:6;25431:17;25423:6;25419:30;25472:3;25464:6;25461:15;25458:122;;;25491:79;;:::i;:::-;25458:122;25606:6;25589:231;25623:6;25618:3;25615:15;25589:231;;;25698:3;25727:48;25771:3;25759:10;25727:48;:::i;:::-;25722:3;25715:61;25805:4;25800:3;25796:14;25789:21;;25665:155;25649:4;25644:3;25640:14;25633:21;;25589:231;;;25593:21;25207:619;;25094:732;;;;;:::o;25849:385::-;25931:5;25980:3;25973:4;25965:6;25961:17;25957:27;25947:122;;25988:79;;:::i;:::-;25947:122;26098:6;26092:13;26123:105;26224:3;26216:6;26209:4;26201:6;26197:17;26123:105;:::i;:::-;26114:114;;25937:297;25849:385;;;;:::o;26240:554::-;26335:6;26384:2;26372:9;26363:7;26359:23;26355:32;26352:119;;;26390:79;;:::i;:::-;26352:119;26531:1;26520:9;26516:17;26510:24;26561:18;26553:6;26550:30;26547:117;;;26583:79;;:::i;:::-;26547:117;26688:89;26769:7;26760:6;26749:9;26745:22;26688:89;:::i;:::-;26678:99;;26481:306;26240:554;;;;:::o;26800:553::-;26977:4;27015:3;27004:9;27000:19;26992:27;;27029:71;27097:1;27086:9;27082:17;27073:6;27029:71;:::i;:::-;27110:72;27178:2;27167:9;27163:18;27154:6;27110:72;:::i;:::-;27192;27260:2;27249:9;27245:18;27236:6;27192:72;:::i;:::-;27274;27342:2;27331:9;27327:18;27318:6;27274:72;:::i;:::-;26800:553;;;;;;;:::o;27359:176::-;27499:28;27495:1;27487:6;27483:14;27476:52;27359:176;:::o;27541:366::-;27683:3;27704:67;27768:2;27763:3;27704:67;:::i;:::-;27697:74;;27780:93;27869:3;27780:93;:::i;:::-;27898:2;27893:3;27889:12;27882:19;;27541:366;;;:::o;27913:419::-;28079:4;28117:2;28106:9;28102:18;28094:26;;28166:9;28160:4;28156:20;28152:1;28141:9;28137:17;28130:47;28194:131;28320:4;28194:131;:::i;:::-;28186:139;;27913:419;;;:::o"},"methodIdentifiers":{"executeTrade(bool,address,address,uint256)":"1395dd23","owner()":"8da5cb5b","receiveFlashLoan(address[],uint256[],uint256[],bytes)":"f04f2707","sRouter()":"017c64b0","uRouter()":"5cf39049"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LoanedReturned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"path0\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"path1\",\"type\":\"address\"}],\"name\":\"SwappedOnSushiswap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"path0\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"path1\",\"type\":\"address\"}],\"name\":\"SwappedOnUniswap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"TradeExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_startOnUniswap\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_flashAmount\",\"type\":\"uint256\"}],\"name\":\"executeTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sRouter\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uRouter\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Arbitrage.sol\":\"Arbitrage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\",\"urls\":[\"bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c\",\"dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG\"]},\"contracts/Arbitrage.sol\":{\"keccak256\":\"0x821560d4032bee6980d6bd2ceaee8e551396ee009a4bc785c0fb0256f3b9bcd1\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://078da08ab0ba9da06d4acbdde9727b075fbbd5cc4ee1487c83ab07622c62a973\",\"dweb:/ipfs/QmRU2mDVFse15WMGR6dKVLZLG5m9jbkJrcEzuNp66CEUvv\"]}},\"version\":1}"}}}}}